,video_id,channelTitle,title,description,tags,publishedAt,viewCount,likeCount,favouriteCount,commentCount,duration,definition,caption
0,NB5LGzmSiCs,Python Simplified,"If __name__ == ""__main__"" for Python Developers","If name equals main - then we run our programs! 
But do we actually understand what is __name__ , what is __main__ and most of all - why do we need to check if they match? 🤔🤔🤔
I've prepared this very special tutorial that dives deep into each component and demonstrates it thorough simple code examples. By the end of this video - you'll be able to explain this expression in your own words (!!!) as well as other terms like ""module"" and even ""top level code"" 😉

⏰ TIME STAMPS ⏰
------------------------------------------
00:00 - Intro
00:29 - What is __name__
00:59 - What is module?
01:34 - Top level code vs imported code
03:35 - What is __main__
05:08 - Find the value of __name__
05:55 - Why do we need to check if name == main
08:08 - Thanks for watching!

🤝 Connect with me 🤝
--------------------------------------
🔗 Github: 
       https://github.com/mariyasha
🔗 Discord: 
       https://discord.com/invite/wgTTmsWmXA
🔗 LinkedIn: 
       https://ca.linkedin.com/in/mariyasha888
🔗 Twitter: 
       https://twitter.com/mariyasha888
🔗 Blog: 
       https://www.pythonsimplified.org

🎯 Sources 🎯
--------------------------------------
⭐ Python Documentation:
       https://docs.python.org/3/library/__main__.html

💳 Credits 💳
----------------------
⭐ Beautiful animated graphics by:
       mixkit.co
⭐ Beautiful icons by:
       flaticon.com",,2022-11-27T15:30:05Z,142743,6777,,381,PT8M47S,hd,true
1,P7NbYXCvxtA,Python Simplified,Ready for my next tutorial? #shorts #python,,,2022-11-26T19:59:50Z,12146,982,,56,PT49S,hd,false
2,1xukOX3gBE4,Python Simplified,The Three Rules of Test Driven Development #shorts #programming #coding #computerscience,,,2022-11-09T19:28:53Z,3465,230,,10,PT1M,hd,false
3,ibVSPVz2LAA,Python Simplified,Python TDD Workflow - Unit Testing Code Example for Beginners,"In this tutorial we will play the game of unit testing! 🎮🎮🎮
To do so - we will learn a brand new coding workflow, implementing a set of programming principles known as Test Driven Development.
I will introduce you to the Three Laws of TDD (also known as the Three Laws of Uncle Bob) and show how to write a piece of software unit by unit, test by test, 2 minutes at a time! ⏱️
The end result is not only a cool encryption algorithm known as Caesars Cipher - but also a series of unit tests that ensures its accuracy and reliability.
In the very end - I also have a 🏆 CHALLANGE 🏆 for you! So make sure you tune in at minute 23:10 to participate and practice your new set of skills! 💪

⭐ CLONE MY CODE ⭐
-----------------------------------------
https://app.wayscript.com/lairs/45150c67-1bd6-487b-940f-cc60bb6093de/public/

Also, please feel free to revise it and reshare your versions with the world!
Quick instructions of how to do this via Wayscript at minute 23:50

🚀 JUPYTER SYNTAX 🚀
-----------------------------------------
unittest.main(argv=[''], verbosity=2, exit=False)

📽️ RELATED TUTORIALS OF MINE 📽️
-----------------------------------------------------------------
⭐ Classes and OOP:
       https://youtu.be/f0TrMH9s-VE
⭐ Inheritance and Private Class Members:
       https://youtu.be/6c6NYPjO_rI
⭐ If __name__ == ""__main__"" for Python Developers:
       https://youtu.be/NB5LGzmSiCs
⭐ List Comprehension:
       https://youtu.be/SNq4C988FjU
⭐ Software Design and Development Exam Practice Stream:
      https://youtu.be/uDnm7nlodDk

⏰ TIMESTAMPS ⏰
-----------------------------------------
00:00 -  Intro
01:19 - Three Laws of TDD
-----------------------------------------
TEST 1 - Test Data Exists 
-----------------------------------------
02:07 - Basic syntax
03:59 - Jupyter Notebook syntax
04:30 - Assertion
06:28 - Production Code
07:32 - 2 minutes
-----------------------------------------
07:54 - Test Input Data Type
09:12 - Test Return Output
10:16 - Test Input and Output Length
11:45 - Test Input different from Output
14:28 - Test Output Data Type
15:46 - Test Caesars Cipher
20:40 - Test More Inputs
23:10 - Challenge for you!
23:50 - How to share your code via Wayscript
25:09 - Thanks for watching! :)

🤝 Connect with me 🤝
--------------------------------------
🔗 Github: 
       https://github.com/mariyasha
🔗 Discord: 
       https://discord.com/invite/wgTTmsWmXA
🔗 LinkedIn: 
       https://ca.linkedin.com/in/mariyasha888
🔗 Twitter: 
       https://twitter.com/mariyasha888
🔗 Blog: 
       https://www.pythonsimplified.org

🎯 Sources 🎯
--------------------------------------
⭐ Python unittest Documentation:
       https://docs.python.org/3/library/unittest.html
⭐ Professionalism and Test-Driven Development by Robert C. Martin:
       https://ieeexplore.ieee.org/document/4163026

💳 Credits 💳
----------------------
⭐ Beautiful animated graphics by:
       mixkit.co
⭐ Beautiful icons by:
       flaticon.com",,2022-11-08T15:30:10Z,31934,1082,,103,PT25M33S,hd,true
4,YfZqVmWq33o,Python Simplified,Ready for a Spooky Halloween! #shorts  #halloween #pumpkin,,,2022-10-31T15:55:46Z,1244,59,,6,PT14S,hd,false
5,o2FVs7DEP0c,Python Simplified,Hangout Stream - What's New? What I'm Working On? Ask me anything!,"Folks, it's been a while! In this stream I will tell you where I've been, what I'm currently working on and answering your questions - whatever they may be! :)

I'm mostly testing to see how many of you are available in the afternoons (compared to my morning streams).
I'm aiming to set a specific day and time for a weekly stream - your advice will be highly appreciated! 

Also, I wasted to ask you what you think about me starting a membership program on YouTube - are you members of other channels already? do you find it adds some interesting value to your YouTube experience?
I'm generally staying away from paid content, I find it frustrating when only some of the audience gets access to certain videos - but that's just me! what do you think? are we on the same page or do you think I'm being silly? 😅

If you have any interesting questions - please leave them in the chat ahead of the stream, no particular topic - anything you'd like to ask, it's just a hangout stream rather than an informative super educational session 😉",,2022-10-22T11:42:18Z,4324,237,,18,PT1H35M57S,hd,false
6,wmalqABbkXU,Python Simplified,Get Dynamic Bitcoin Data in REAL TIME with Python - Intro to Deephaven - LINUX OS!!!,"Today we will find a SIMPLE solution to one of the most complex data science problems - working with real-time dynamic live-streaming data! 
We will learn how to fetch data directly from the Coinbase cryptocurrency exchange, we will then manipulate it, reconstruct it and even plot it! (YES! a graph that keeps MOVING CONSTANTLY as new data comes in and updated within microseconds! 😱😱😱)
And the best part is - no need to have any prior experience with web sockets or setting up your own server! 🤩

If you're wondering how it's even possible - allow me to introduce you to Deephaven! A very powerful open-core framework that made this entire process 100% beginner friendly!
Find out more on Github:  https://github.com/deephaven
(Especially if you'd like to contribute to their open-source project 😉)

Or alternatively you can checkout their website for more info:
https://deephaven.io/

⏰ TIMESTAMPS ⏰
--------------------------------------
00:00 - intro
00:55 - install Deephaven and dependencies
04:12 - quickhook vs setting up your own websocket
04:50 - Coinbase data stream overview
05:25 - basic data manipulation (drop columns)
07:04 - split data (filter rows of interest)
08:18 - highlight large volume transactions
11:31 - plot dynamic data
15:31 - extract new data features
23:00 - next steps
24:10 - thanks for watching! :)

🎥 MORE DATA SCIENCE TUTORIALS OF MINE 🎥
---------------------------------------------------------------
⭐ Pandas Basics:
       https://youtu.be/zN2Hua6oII0
⭐ Line Graph with Pandas:
       https://youtu.be/P4F3PzCMrtk
⭐ Plot Graphs with Matplotlib:
       https://youtu.be/MJ1945J_W0c

🤝 Connect with me 🤝
--------------------------------------
🔗 Github: 
       https://github.com/mariyasha
🔗 Discord: 
       https://discord.com/invite/wgTTmsWmXA
🔗 LinkedIn: 
       https://ca.linkedin.com/in/mariyasha888
🔗 Twitter: 
       https://twitter.com/mariyasha888
🔗 Blog: 
       https://www.pythonsimplified.org

💳 Credits 💳
----------------------
⭐ Beautiful animated graphics by:
       mixkit.co
⭐ Beautiful icons by:
      flaticon.com",,2022-10-19T15:00:10Z,9851,564,,79,PT24M42S,hd,true
7,080kzsRv5UI,Python Simplified,Streaming Real Time Crypto Data Like a Pro with NO PRIOR EXPERIANCE 😱 #crypto #python #data,,,2022-10-18T19:19:48Z,5594,,,36,PT37S,hd,false
8,tZ1znMV-aXY,Python Simplified,Are you ready to apply for tech jobs? featuring Prakash from GeeksforGeeks,"In today's stream, Prakash and I will discuss the greatest question that every self-taught developer is facing - when are you ready to start applying for jobs in the tech industry? 🤔🤔🤔
Where do you draw the line between just learning programming and becoming a junior developer? can you get your first job opportunity without academic credentials? and most importantly - how many projects a solid portfolio should have? what type of projects?

I've invited my friends from GeeksforGeeks to help you answer all these questions and much much more! 
To those of you who are new to programming - GeeksforGeeks is a very popular computer science portal that covers almost any programming language you can think of. They provide well-written tutorials, online courses, interactive exercises and even connect talented developers with potential employers 😱

Make sure to check them out, if you haven't already:😉https://www.geeksforgeeks.org/

Also, do you have an inspiring story of how you got your first job in the tech industry? Do you have some tips for aspiring developers? Please tune in to share your experience in the chat, and who knows? maybe your input will motivate and help many others on their journey 😀

🤝 Connect with Prakash 🤝
--------------------------------------
linkedin.com/in/prakashsakari

🤝 Connect with me 🤝
--------------------------------------
🔗 Github: 
       https://github.com/mariyasha
🔗 Discord: 
       https://discord.com/invite/wgTTmsWmXA
🔗 LinkedIn: 
       https://ca.linkedin.com/in/mariyasha888
🔗 Twitter: 
       https://twitter.com/mariyasha888
🔗 Blog: 
       https://www.pythonsimplified.org","['programing', 'programming', 'coding', 'tech', 'techjobs', 'findjobs', 'apply', 'learnprogramming', 'jobsearch', 'technology', 'careers', 'socialnetworking', 'motivation', 'personaldevelopment', 'jobinterviews', 'personalbranding', 'education', 'bestadvice', 'python', 'pythonprogramming', 'softwaredesign', 'networking', 'hiring', 'jobseekers', 'recruiting', 'job']",2022-09-22T04:02:51Z,6341,294,,11,PT58M33S,hd,false
9,gKrRr8T6i08,Python Simplified,RTX 40 Series IS HERE! Specs are INSANE! All Hail Ada Lovelace! #rtx #nvidia #announcement #shorts,,,2022-09-20T19:06:16Z,9868,,,20,PT27S,hd,false
10,uDnm7nlodDk,Python Simplified,Software Design and Development - What I Learned So Far - Exam Practice,"In this stream I will share the (simplified) highlights of one of my favorite computer science courses - SOFTWARE DESIGN AND DEVELOPMENT 🤩🤩🤩
We will talk about a great set of practices that will take your programming skills to the next level! I will also share some free useful resources to get you up to speed.

So in this stream we will see how to reason about software components (such as modules), the strength of relationship between them, what security considerations we should keep in mind and how can we test and analyze our programs.

You can view my slides here: https://pitch.com/public/0746a3ca-e26e-4955-a204-7e15d2fa616b

Also - I'm excited to announce a brand new Discord server that our very own Josh and Badger just opened up! 
Come say Hi at TreehouseClub: https://discord.gg/d9kS5KFq5w
We're having conversations about all the topics in the world! gaming, cooking, design, 3d printing and anything else the floats your boat! see you there 😉

And lastly - will share a proper demo of the Vaporwave It sound and Audio application which won the recent code jam (we had technical difficulties in the last stream). Check out the project repository: https://github.com/audio-mixer/mixer-web 
And the live app: https://vaporwave-it.up.railway.app/

🤝 Connect 🤝
--------------------------------------
🔗 Github: 
       https://github.com/mariyasha
🔗 Discord: 
       https://discord.com/invite/wgTTmsWmXA
🔗 LinkedIn: 
       https://ca.linkedin.com/in/mariyasha888
🔗 Twitter: 
       https://twitter.com/mariyasha888
🔗 Blog: 
       https://www.pythonsimplified.org",,2022-09-05T19:19:53Z,10842,489,,17,PT1H44M6S,hd,false
11,7Iv6MRRdw5E,Python Simplified,this smiling dog will make your day! #shorts #funnydogs #dog #dogs,,,2022-08-27T21:14:52Z,3534,,,15,PT13S,hd,false
12,HjZ2xfRwHGI,Python Simplified,"Code Jam Winners and Social Media Ethics Featuring Badger, Persistent and Tom","You've seen them many times in live-chats, in the comments section and of course in our Discord community! Today you will finally meet them in real-time!!! 😃
Very excited to introduce you to Badger, Persistent and Tom representing my AMAZING team of mods! (Splaud is busy and Siam's microphone makes him sound like an alien 👽 but we'll make sure they join us in future streams)

We have 2 VERY IMPORTANT MISSIONS TODAY -
⭐ Announcing the winning team of our Sound and Audio Code Jam
⭐ Discussing the mess behind the Twitter deal, the recent whistleblower testimony and what it means in terms of the number of bots on the platform.

If you'd like to see more streams of this kind, please don't forget to like, comment and share as this is the best way to let us know you are enjoying what we do! 😃

 🖇️ SOURCES 🖇️
⭐Simple Music Player: https://github.com/diwacreation3/music
⭐KakaduFM: https://github.com/morgor/KakaduFM
⭐VaporWave It: https://github.com/audio-mixer/mixer-web
⭐Screen Reader: https://github.com/kopa7967/Screen-Reader

 🖇️ NEWS ARTICLE SOURCE 🖇️
https://www.theepochtimes.com/whistleblower-says-twitter-lied-to-musk-about-spam-bots-with-possible-implications-for-trial_4682624.html

🤝 Connect 🤝
--------------------------------------
🔗 Github: 
       https://github.com/mariyasha
🔗 Discord: 
       https://discord.com/invite/wgTTmsWmXA
🔗 LinkedIn: 
       https://ca.linkedin.com/in/mariyasha888
🔗 Twitter: 
       https://twitter.com/mariyasha888
🔗 Blog: 
       https://www.pythonsimplified.org",,2022-08-27T06:43:51Z,3565,163,,5,PT1H9M10S,hd,false
13,EEiqGjCNLRs,Python Simplified,Django QuickStart Web Application for Beginners,"Welcome to the QuickStart guide to Django Applications! 🤩
Where Django is a popular Python-based framework for web development and today we will set it up from scratch!

In this tutorial we will focus on some the main components of websites. We will:
1. Setup a Django development server using Python (01:46)
2. Render an HTML template (05:18)
3. Add some CSS Styling (13:26)
4. And last but not least - JavaScript client side interactions (20:24)

🛑 PLEASE KEEP IN MIND 🛑
-----------------------------------------------
This is a QUICKSTART guide with the sole purpose of connecting all the above components together! By the end of this tutorial you will have your very own template of a basic Django website and you will also learn which files and terms we use for different operations.
Or alternatively, you can just clone my code if you already have some background with Django:
https://github.com/MariyaSha/DjangoQuickstart

In the next few tutorials we will learn how to work with Django databases and templating engine! After we have all the basics covered - we will then move with creating a useful application and even hosting it online.

💻 RELATED TUTORIALS OF MINE 💻
--------------------------------------------------------------
⭐ Anaconda for Beginners:
      https://youtu.be/MUZtVEDKXsk
⭐ Flask Hello World Web App for Beginners:
      https://youtu.be/6plVs_ytIH8
⭐ Simple Calculator Web App with Anvil:
      https://youtu.be/NiQdsK3H57Y
⭐ Advanced Web App with Flask and SQLite:
      https://youtu.be/v3CSQkPJtAc

⏰ TIME STAMPS ⏰
-----------------------------------------------
00:00 - intro
00:45 - install Django
01:46 - create Django project
03:04 - run Django server
03:56 - customize port number
04:37 - create Django app
05:18 - create an HTML template
06:31 - setup a templates directory
07:46 - working with views
09:19 - working with routes
13:26 - create a CSS stylesheet
14:56 - setup a static directory
15:59 - HTML file structure
17:50 - link stylesheet with templating engine
20:24 - setup JavaScript
21:18 - link JavaScript with templating engine
22:34 - thanks for watching!

🤝 Connect with me 🤝
--------------------------------------
🔗 Github: 
       https://github.com/mariyasha
🔗 Discord: 
       https://discord.com/invite/wgTTmsWmXA
🔗 LinkedIn: 
       https://ca.linkedin.com/in/mariyasha888
🔗 Twitter: 
       https://twitter.com/mariyasha888
🔗 Blog: 
       https://www.pythonsimplified.org

💳 Credits 💳
----------------------
⭐ Beautiful animated graphics by:
       mixkit.co",,2022-08-24T15:34:55Z,27251,1389,,156,PT23M11S,hd,true
14,Xa9qIp6JCMI,Python Simplified,String Data Type - Python for Beginners - Lesson 2 #python #shorts #data #programming  #coding,,,2022-08-19T15:30:06Z,9866,,,18,PT53S,hd,false
15,SDVyGPDYgDE,Python Simplified,Basic Data Types - Python for beginners - Lesson 1 #python  #shorts #programming #coding #data,,,2022-08-16T14:30:10Z,8422,,,17,PT34S,hd,false
16,Otr6BW-uKFs,Python Simplified,Zip Vs Range - Which is Faster? Benchmarking YOUR code suggestions too!,"In my recent Dictionary Comprehension tutorial, I've asked you which of the two approaches you think is faster - zip or range? today we will empirically measure the speed of both algorithms within for loops and within comprehensions.
In addition, I've collected a few of YOUR code examples from the comment section (which is even more exciting to benchmark 😉)
Checkout my recent tutorial here for more information:
⭐ Dictionary Comprehension:
       https://youtu.be/khCzymLy_QE

For this stream, I'm borrowing Badger's benchmarking code. You can find it on Github and use it on your own functions 😀:
https://gist.github.com/JBraunsmaJr/c79d096626b84517fa29f817da39df58

Originally Badger's code was meant to check whether LIST comprehensions are faster than for loops and under which condition. It came up in the viewer comments of another recent tutorial:
⭐ List Comprehension:
https://youtu.be/SNq4C988FjU

In other words - this stream will introduce us to advanced concepts of analyzing algorithms and their running time. So it's not about just making things work, but making them work efficiently! 💪💪💪

Also, I figured out what to do with shorts! Will tell you all about it in this stream! See you soon! 😍

🤝 Connect with me 🤝
--------------------------------------
🔗 Github: 
       https://github.com/mariyasha
🔗 Discord: 
       https://discord.com/invite/wgTTmsWmXA
🔗 LinkedIn: 
       https://ca.linkedin.com/in/mariyasha888
🔗 Twitter: 
       https://twitter.com/mariyasha888
🔗 Blog: 
       https://www.pythonsimplified.org","['zip', 'range', 'python', 'python programming', 'coding', 'learnpython', 'faker', 'random', 'dictionary comprehension', 'for loop', 'list comprehension', 'algorithms', 'algorithms and data structures', 'ads']",2022-08-12T21:27:36Z,8822,382,,12,PT2H52M7S,hd,false
17,vNwQTzM2l_c,Python Simplified,Utilizing my spouse and Milly to help me film shorts... zero improvement though 😅😅😅,,,2022-08-10T19:55:56Z,7669,258,,30,PT30S,hd,false
18,khCzymLy_QE,Python Simplified,Dictionary Comprehension - Create Complex Data Structures Step by Step,"Welcome to the best tutorial I've ever filmed!!! 😍😍😍 
Today we will talk about Dictionary Comprehension which is a very clever technique to construct dictionaries from different collections of data. 
We will start with a 🐍 basic code example 🐍 (00:47 - 03:47) and we will move on to practice our new set of skills with 3 FUN and USEFUL exercises:
1. Superheroes exercise:
    correct a distorted dictionary (03:47)
2. Genetics exercise:
    create a random DNA sequence by pairing bases (08:26)
3. Authentication exercise: 
    create a dictionary of users with random passwords (14:55)

⭐ Get complete tutorial code ⭐
https://app.wayscript.com/lairs/6d18a957-46bd-4283-8b97-c323c9b0245d/public/

🎥 RELATED TUTORIALS 🎥
---------------------------------------------
⭐ Python For Loops for Beginners:
       https://youtu.be/dHANJ4l6fwA
⭐ List Comprehension:
       https://youtu.be/SNq4C988FjU

⏰ Time Stamps ⏰
--------------------------------
00:00 - intro
00:21 - tutorial plan
00:47 - create dictionary with for loops
     01:04 - zip function approach
     01:37 - range function approach
02:05 - dictionary comprehension with zip
02:47 - dictionary comprehension with range
03:17 - dictionary comprehension with tuples
03:27 - dictionary comprehension with Pandas Data Frames
03:47 - modify dictionary in place (exercise #1 - superheroes)
08:26 - create a dictionary of lists (exercise #2 - DNA)
14:55 - create a list of dictionaries (exercise #3 - user authentication)
     17:23 - create random passwords
20:46 - dictionary and list comprehension disadvantages
21:12 - outro and thanks for watching! :)


💻 Copy starter code 💻
----------------------------------------
⭐ EXERCISE 1:
my_dict = {
    ""Spider"": ""photographer"", 
    ""Bat"": ""philanthropist"", 
    ""Wonder Wo"": ""nurse""
}

⭐ EXERCISE 3:
keys = [""id"", ""username"", ""password""]
users = [""mariyasha888"", ""KnotAbot"", ""spongiBOBO"", ""IAMBATMAN""]

🤝 Connect with me 🤝
--------------------------------------
🔗 Github: 
       https://github.com/mariyasha
🔗 Discord: 
       https://discord.com/invite/wgTTmsWmXA
🔗 LinkedIn: 
       https://ca.linkedin.com/in/mariyasha888
🔗 Twitter: 
       https://twitter.com/mariyasha888
🔗 Blog: 
       https://www.pythonsimplified.org

💳 Credits 💳
----------------------
⭐ Beautiful icons by:
       flaticon.com
⭐ Beautiful animated graphics by:
       mixkit.co","['dictionary', 'dict', 'dict comprehension', 'dictionary comprehension', 'python', 'data science', 'data structures', 'complex data structures', 'ds']",2022-08-07T15:30:10Z,30363,1479,,150,PT21M58S,hd,true
19,H6SUfuBobh4,Python Simplified,Premiering a Brand New Dictionary Comprehension Tutorial on Sunday! See you soon! 😉,,,2022-08-06T15:00:18Z,8077,514,,27,PT27S,hd,false
20,9K4pkmM-EUk,Python Simplified,Another (failing? 😅) attempt at filming shorts. I'm not good at this. At all!,,,2022-08-02T20:08:23Z,13092,883,,71,PT27S,hd,false
21,bIxezhejGo0,Python Simplified,Do you Need a Tutor or Mentor for Programming?,"I've been getting lots of requests from viewers regarding one-on-one tutoring or mentoring sessions. 
In this live stream we will discuss why you DON'T need to pay somebody for such basic guidance and motivation!! 🙃

⭐ Reason 1 - I'll be dedicating entire stream sessions to do just that (not on a one-on-one basis though 😅). 
So if motivation is what you seek, you can get it free of charge!
 
⭐ Reason 2 - There are plenty of free learning resources! neat and organized courses in professional online academies, teaching computer science step by step. 
I will share with you all the courses I took recently, and you will see the magnitude of information available for you right here right now! 
Its there for you - you just need to grab it! 😀
You can find the slide with all the links I'm sharing here: https://docs.google.com/presentation/d/1DHgz-Hnq38NiwSDHsZY4zgskrT1XeMTVe0yGa9hE48A/edit?usp=sharing

Also - are you ready for the Sound and Audio Code Jam ?? Only 24 hours left to register - don't miss your chance to advance your skills and make valuable connections with other talented developers!
Beginners are welcome! don't worry about your level of experience, you need to start from somewhere!

⭐ More jam information here: 
      https://youtu.be/tRlEkCLQ-fk
⭐ Or in my blog: 
      https://www.mariyasha.com/post/sound-and-audio-code-jam
👾 Join our Discord community: 
      https://discord.com/invite/wgTTmsWmXA","['python', 'pythonprogramming', 'programming', 'coding', 'programmingtutor', 'tutor', 'mentor', 'programmingmentor', 'code', 'computer science', 'learnprogramming', 'learnpython']",2022-07-14T19:36:22Z,12749,574,,53,PT1H56M56S,hd,false
22,tRlEkCLQ-fk,Python Simplified,Brand New Code Jam Begins! Gain Hands On Programming Experience - Register today!,"It's the perfect time for a new code jam challenge, where teams of talented developers compete with one another! This time, we have an extra musical jam topic for you - SOUND AND AUDIO! 🤩🤩🤩
So are you looking for hands-on programming experience? are you looking to add an extraordinary project to your professional portfolio? are you looking to make valuable connections with people from you industry? or maybe you're much more interested in having fun and winning the grand prize?
In all cases - joining our jam would be the perfect opportunity to practice and improve your programming skills! you'll get to share and receive knowledge from you teammates and
gain a much better understanding of the processes involved in software design and development! 🤓

👾 Register Today! 👾
-----------------------------------------------------
Please join our Discord community, which is the main communication environment of the jam:
https://discord.com/invite/wgTTmsWmXA
Then, you can either follow the instructions given in the video, or you can follow this detailed blog post:
https://www.mariyasha.com/post/sound-and-audio-code-jam

⭐ Please note ⭐ 
before you can access the code jam requests channel, you'll need to add a reaction in the general code jam channel (preferably introduce yourself 😉)

🚨 VERY IMPORTANT 🚨 
please do not forget to confirm your registration 24 hours before the jam begins with ""/registration confirm"" 
This is how we know that everyone will show up for sure to support their team! if you don't do this - your registration will not be complete.

🏆 Grand Prize 🏆
-----------------------------------------------------
This code jam is brought to you by Apify, an incredibly powerful web scraping and automation platform!
Each member of the winning team is going to win a 6 month free subscription to Apify's personal plan 🥳🥳🥳
You'll be able to use it to automate hundreds of time consuming tasks, hide your ip with proxies, run multiple scrapers at once and even host and run your code on Apifys cloud!
For more details, checkout Apify: https://apify.com/

But that's not all! If your sound and audio project involves anything related to web scraping or automation - Apify will provide you with free plans and support for the entire duration of the jam! 😱😱😱 
Do you need to scrape music notes or lyrics? Do you need to automate some time consuming tasks? Please tag me on Discord in the private channel of your team @PythonSimplified with a brief description of what you'll need for your project and we will set you up with all the necessary tools! 🙂

Also, if you require any special assistance throughout the jam, you can always reach out to Apify directly via their Discord community: https://discord.com/invite/jyEM2PRvMU



🧑‍⚖️  Judging Criteria 🧑‍⚖️ 
-----------------------------------------------------
To win the code jam you'll need to impress our favorite team of moderators, this time myself included! 😉
We haven't changed the judging criteria from the last jam, so here are the general guidelines we'll take in consideration:

1. creativity - blow our mind and go as far as your imagination takes you!
2. code clarity - can somebody other than the team members understand the code? is it nice and neat with commentary?
3. innovation - has anybody ever seen something like this before? or was it implemented in such way?
4. functionality - does it work? 🤪 did you deliver what you intended to deliver?
5. user experience - how convenient is your app/service for the average user?
6. design - how appealing are the aesthetics? do you like how everything looks? (personal taste situation)
7. modularity and separation of concerns - different pieces of functionality are logically separated, your HTML is in a different file than your CSS or Python, etc.
8. teamwork - did all the active team members contributed to the efforts? did anybody leave the jam before the due date?
9. clear README documentation - please make sure you give us a briefing of your project along with the dependencies, authors and sources (if any).
10. clever control flow - smart use of conditional statements, loops, list comprehension, etc.
11. EFFORT!!! if you put lots of hard work in your project but something went wrong - we will take that into consideration.

💳 Credits 💳
-----------------------------------------------------
Beautiful titles by: https://mixkit.co/
Beautiful stock videos by: https://pixabay.com/videos/
Sound Icon by: https://flaticon.com
BadgerBot5000 Code Jam Bot by: https://github.com/JBraunsmaJr

🤝 connect with me 🤝
_______________________
- Github: https://github.com/MariyaSha
- Discord: https://discord.gg/wgTTmsWmXA
- LinkedIn: https://www.linkedin.com/in/mariyasha888/
- Twitter: https://twitter.com/MariyaSha888
- Blog: https://pythonsimplified.ca

⭐ BEST OF LUCK TO ALL THE JAMMERS ⭐
⭐ MAY THE CODE BE EVER IN YOUR FAVOUR ⭐","['code jam', 'codejam', 'coding jam', 'coding challenge', 'coding competition', 'programming competition', 'coding contest', 'programming contest']",2022-07-10T12:00:24Z,5594,276,,52,PT7M5S,hd,false
23,qbryHXYx_rE,Python Simplified,Harrison Lake Deep in the Wilderness - Backroad Camping Destination,,,2022-07-04T15:00:35Z,2674,188,,17,PT10S,hd,false
24,SNq4C988FjU,Python Simplified,List Comprehension - BEST Python feature !!! Fast and Efficient,"In this tutorial we will learn all about list comprehensions and how they can make our Python journey much easier and much more efficient!! 🤓🤓🤓
List comprehensions provide a shorter and faster alternative to ""for"" loops (especially when combined with conditional statements as well as append commands). And best of all - it takes only 1 LINE OF CODE! 😱
This video offers 3 separate coding exercises, various examples and colorful illustrations of the concepts involved. Please feel free to use my code and artwork, you can find it in the link below:

⭐⭐ clone my code: ⭐⭐
https://app.wayscript.com/lairs/a78142c1-8021-462d-8ee9-cc85dc3750c6/public/

And on a festive note...

🍁HAPPY CANADA DAY!!!🍁 
to all my fellow Canadians! (and other Earth dwellers who celebrate 😉)
Sending you lots of love from beautiful British Columbia! 💗💗💗

⏰ time stamps ⏰
____________________
00:00 - intro
00:17 - what is a list comprehension?
01:22 - for loop vs list comprehension
02:40 - coding example
06:07 - conditional list comprehension
06:27 - coding example 2
09:02 - list comprehension on strings
09:29 - coding example 3
12:09 - else if list comprehension
13:50 - coming soon: dictionary comprehension
14:12 - thanks for watching!

🐍🐍 related tutorials of mine 🐍🐍
_____________________________________
- For Loops: 
https://youtu.be/dHANJ4l6fwA

➡️➡️ starter code ⬅️⬅️
__________________________
fruits = [""apples"", ""bananas"", ""strawberries""]

for fruit in fruits:
    print(fruit)

💳💳 credits 💳💳
_______________________
- Beautiful Icons are by:
  https://www.flaticon.com/

- Beautiful Like/Share/Subscribe video graphics by:
  https://mixkit.co/

🤝 connect with me 🤝
_______________________
- Github: https://github.com/MariyaSha
- Discord: https://discord.gg/wgTTmsWmXA
- LinkedIn: https://www.linkedin.com/in/mariyasha888/
- Twitter: https://twitter.com/MariyaSha888
- Blog: https://pythonsimplified.ca","['list comprehension', 'list comprehensions', 'list comprahensions', 'comprahensions', 'comprihensions', 'list comprihensions']",2022-07-01T15:00:30Z,90824,3951,,360,PT14M51S,hd,true
25,Y_4RXB8B2II,Python Simplified,100k Subscribers Stream - Sharing YouTube tips - ASK ME ANYTHING!,"Yesterday evening it officially happened - 100,000 talented developers have joined our little Python community! Woohoo! 🤩🤩🤩
When I started this channel, I never imagined I'd find so many lovely programming and AI enthusiasts who share the same journey as myself.
Today I'm here to help you with anything you wanted to know about YouTube! Do you have any questions in regards to starting a channel, editing videos, editing thumbnails and even collecting and keeping up with viewer feedback?
In this stream - YOU CAN ASK ME ANYTHING!

Starting a YouTube channel seems quite simple at first, but it takes time before you can do it well, not to even mention - efficiently! If my advice can help you reach your goals faster, if sharing my mistakes can help you avoid them - I'd be incredibly happy! 😁

I'll go get ready for the stream now, see you soon folks! 😉",,2022-06-22T20:32:10Z,7913,490,,39,PT2H54M11S,hd,false
26,5qOnzF7RsNA,Python Simplified,Create GUI App with Tkinter and SQLite - Step by Step Python Tutorial for Beginners,"Today we will create a highly sophisticated Tkinter application, which is PERFECT for beginners and even intermediate Python developers!! 💻💻💻
In this tutorial, we will:
⭐ connect an SQLite database of recipes to our app.
⭐ create a BEAUTIFUL graphic user interface with Tkinter.
⭐ randomly shuffle recipes and display them on the app.
⭐ preprocess table records.
⭐ use CUSTOM FONTS with Tkinter (works with Windows only).

I will guide you step by step, explaining each command, the logic behind it and even different approaches we can take! 
This tutorial is designed especially for folks who are comfortable with Python but struggle to apply it in practice. Additionally, complete Python beginners will get all the instructions they need to keep up the phase! 😀

Download Starter Files (and Complete Project Files):
https://github.com/MariyaSha/RandomRecipePicker/blob/main/README.md

Install dependencies (Anaconda):
🐍 conda install -c anaconda tk
🐍 conda install -c anaconda pillow
🐍 conda install -c anaconda numpy
🐍 conda install -c conda-forge pyglet

Install dependencies (Pip):
🐍 pip install tkinter
🐍 pip install pillow
🐍 pip install numpy
🐍 pip install pyglet

Related Tutorials of Mine:
----------------------------------------------------------
⭐ Install Python with Anaconda:
       https://youtu.be/MUZtVEDKXsk
⭐ SQLite Basics:
       https://youtu.be/Ohj-CqALrwk
⭐ Web Scrape Databases with SQLite and Mechanical Soup:
       https://youtu.be/MkGQmZoMuRM
⭐ Create simple GUI app with Tkinter:
       https://youtu.be/itRLRfuL_PQ
⭐ Create advanced GUI app with Tkinter:
       https://youtu.be/y8PR4lTAh5E

⏰TIME STAMPS ⏰
----------------------------------------------------------
00:00 - intro
00:25 - starter files and wireframe
01:09 - create empty Tkinter window
01:33 - run Tkinter app
02:43 - set window title
02:58 - center window on the screen (Eval method)
04:00 - create Frame widget with custom width, height and background
05:32 - center window with Geometry method (alternative approach)
06:58 - create image widget
10:03 - center widgets in frame with pack propagate
11:01 - create Label widget
11:49 - fonts in Tkinter
13:20 - create Button widget
13:56 - change cursor to pointing hand
14:47 - button callback and why lambda is important
16:21 - add padding around widgets
17:05 - code refactoring
20:08 - connect SQLite database file
22:01 - database architecture walkthrough
23:54 - select all table names of a database with SQL
25:18 - fetch random database tables with SQL and NumPy
26:25 - fetch table records
27:56 - preprocess table name and records
30:09 - conditional list comprehension
34:45 - switch between frames
38:31 - remove widgets from frame
40:43 - sticky (remove white corners)
41:45 - label background in full window width
42:41 - use CUSTOM FONTS in Tkinter
43:24 - Pyglet
45:23 - Thanks for watching! :)
----------------------------------------------------------

🖇️ CREDITS  🖇️
Database web scraped from:
https://cosylab.iiitd.edu.in/recipedb/

Switch between frames on Stackoverflow:
https://stackoverflow.com/questions/7546050/switch-between-two-frames-in-tkinter

Beautiful Icons by:
flaticon.com","['tkinter', 'tk', 'gui', 'graphic user interface', 'ui', 'user interface', 'graphic interface', 'app', 'application', 'sqlite', 'sqlite3', 'sql']",2022-06-15T15:30:11Z,147852,3862,,279,PT45M54S,hd,false
27,8O_fU_qrDoY,Python Simplified,"Fun Python Exercise - Convert Numbers to Images with NumPy, OpenCV and Pillow","In this exercise we will use our NumPy skills to convert numbers into images 💪💪💪 We will see examples of 2 very useful Python image libraries: OpenCV (cv2) and Pillow (PIL). And also discuss the differences between them.

The purpose of this tutorial is to guide you step by step from creating the most simple greyscale image - all the way until drawing a complex structure of RGB windows! or even a smooth turquoise gradient image! 🤩

⭐ Clone Complete Tutorial Code ⭐
  https://app.wayscript.com/lairs/6dac2c5c-9285-4ef2-8f34-4cd16d106cea/public

--------------------------------------------------------------

🛑 If this is the first time you are working with NumPy,
I recommend watching the beginning of my Ultimate Guide to NumPy Arrays tutorial:
https://youtu.be/lLRBYKwP8GQ

🛑 If this is the first time you are working with RGB/BGR/Greyscale,
I recommend watching my Image into Matrix Tutorial:
https://youtu.be/mAMTXJJQBDI

⌚ TIME STAMPS ⌚
---------------------------------------
00:00 - intro
00:34 - import NumPy and OpenCv
00:58 - create empty array 
01:41 - save array as PNG image
02:30 - grayscale image - 50 Shades of Grey
03:26 - region of interest
04:27 - floor division
06:21 - smooth greyscale gradient image
---------------------------------------
06:43 - convert grayscale image to BGR
08:02 - red gradient BGR image
09:01 - turquoise/yellow gradient BGR images
---------------------------------------
09:35 - artistic RGB image with Pillow
11:29 - fill NumPy image background
11:40 - draw square with NumPy
13:15 - working with relative coordinates
15:17 - draw window pattern with NumPy
18:49 - apply random color
20:57 - thanks for watching!

👨‍👩‍👧 RELATED VIDEOS OF MINE 👨‍👩‍👧
---------------------------------------
⭐ Image into Matrix:
       https://youtu.be/mAMTXJJQBDI
⭐ Draw with OpenCV:
       https://youtu.be/PtvN8ad9N3g
⭐ Ultimate Guide to NumPy Arrays:
       https://youtu.be/lLRBYKwP8GQ
⭐ Ultimate Guide to NumPy Operations:
       https://youtu.be/E1IPJOd7dWQ

🐦 SOCIAL MEDIA 🐦
---------------------------------------
Share your NumPy Images with Me! 🤩🤩🤩
⭐ LinkedIn: 
       https://www.linkedin.com/in/mariyasha888/
⭐ Twitter: 
       https://twitter.com/MariyaSha888

* CREDITS *
---------------------------------------
Icons and Graphics by: flaticon.com","['opencv', 'open-cv', 'open cv', 'numpy', 'np', 'image to matrix', 'matrix to image', 'number to color', 'rgb', 'bgr', 'python', 'python programming']",2022-05-31T15:00:04Z,21353,866,,79,PT21M18S,hd,true
28,K4LAjQgsWUE,Python Simplified,Create Twitter Bot with Python - TO BE REFILMED! XD,"In todays tutorial we will learn how to automate Twitter processes, or in other words - we will create an extra friendly liking bot!  🤖🤖🤖
This live streaming tutorial is perfect for beginners! all you need is to have Python installed on your system (I'm using Python 3.9 in case you'd like to match versions 🤪) and we will take care of everything else together!

Complete tutorial code can be found on my Github:
https://github.com/MariyaSha/TwitterBot

The main purpose of this stream is to reflect on how easy it is to set up bots on social media platforms. Additionally, we will discuss whether you think it's good or bad - are extra layers of protection required? or do you like the current ""wild wild west"" situation? 🙃
And even though our bot is going to be fluffy and harmless - can you imagine what experienced black hats with malicious intents have been doing with this technology throughout the years? (hint: phishing, impersonating and other fraud-related issues)

So I propose this experiment - will Twitter ever detect our bots? and how soon will this happen? (if at all)

🛑 BEFORE THE STREAM BEGINS 🛑
_____________________________________
⭐ Please make sure you have Python installed on your computer! 
       If you're not sure how, please checkout my Anaconda installation tutorial:
       https://youtu.be/MUZtVEDKXsk
⭐ Please make sure you have a ⚠️ dummy Twitter account ⚠️ in advance!
       This cannot be your personal account!! don't risk it!

🛑 WILL WE GET IN TROUBLE? 🛑
_____________________________________
one way to avoid trouble is to use a dummy account that is not associated with your personal account. (with that said, I've used my personal social media accounts multiple times for scraping 😅😅😅 needless to say that nothing happened, but keep in mind that your account may be suspended or God forbid deleted if it's labeled as a bot... it's probably not worth the risk!)

Also, everything I cover in this tutorial can be easily found in the Selenium documentation:
https://www.selenium.dev/documentation/
Selenium is a popular tool that many developers use on a daily basis. I encourage you to do your own research and find out for yourself whether bot-making suits you or not 😀

⭐ AUTOMATE OTHER SOCIAL MEDIA PLATFORMS ⭐
_____________________________________
If you'd like to find out more about web scraping and automation - I have a full playlist of YouTube videos to get you up to speed: https://youtube.com/playlist?list=PLqXS1b2lRpYSkvxnk3quzKL08oRJiP9LA","['selenium', 'python', 'pythonprogramming', 'programming', 'webscraping', 'web scraping', 'bot', 'bot making', 'create bot', 'twitter bot', 'twitter bots']",2022-05-21T20:33:39Z,16390,664,,60,PT2H49M4S,hd,false
29,CsCPq02xQ8U,Python Simplified,My Twitter Bot is Ready - Upcoming LIVE STREAM tutorial web scraping with Python Selenium,,,2022-05-19T21:50:44Z,8273,429,,49,PT48S,hd,false
30,yrn1OYu9q0E,Python Simplified,PyScript First Impressions - Run Python in HTML Document - RIP JavaScript,"In this stream we will talk about a HUGE milestone for Python - The brand new PyScript framework! We will see a demonstration of how to use PyScript, how to combine it with HTML, CSS and JavaScript, and we will also test some of the features in this fun First Impressions tutorial.
Please keep in mind that PyScript is so new that they don't even have documentation at this point of time, so prepare to be extra creative and adventurous as we will try to figure everything out on our own.
After the demonstration I will of course stick around for some viewer questions and comments :)

PyScript Repository on Github:
https://github.com/pyscript/pyscript

List of Available Packages/Libraries with PyScript:
https://github.com/pyodide/pyodide/tree/main/packages","['python', 'py-script', 'pyscript', 'py', 'pyscript python', 'html python']",2022-05-17T19:58:52Z,56071,1864,,141,PT2H19M13S,hd,false
31,E1IPJOd7dWQ,Python Simplified,NumPy Operations - Ultimate Guide to Methods and Functions for Beginners!,"In this tutorial we will dive much deeper into NumPy - focusing on important array methods, functions and of course - math! 🤓
We will begin with a quick recap of the previous tutorial and we will then move on with lots of detailed examples and handy tricks!
You can find links to my previous tutorial (and other NumPy-related videos of mine) in the related videos section below.
📝 quick note:  at 24:18 - the floating point numbers originated from (b/a) and not from np.floor()

⭐ CLONE MY CODE ⭐
-------------------------------------------------------
https://app.wayscript.com/lairs/e0b34e70-4b3b-490f-95f5-b60d9bca2ccb/public

please note, I've included all the formulas and graphics inside the README document in the link above ⬆️⬆️⬆️ please feel free to save and use them as you wish 😊

🎥 RELATED VIDEOS 🎥
-------------------------------------------------------
⭐ Ultimate Guide to NumPy Arrays (PART 1 of this tutorial): 
       https://youtu.be/lLRBYKwP8GQ
⭐ Python Learning Roadmap:
      https://youtu.be/wFEC7VbWBZo
⭐ Train Basic Neural Network with NumPy and Pandas:
      https://youtu.be/xpPX3fBM9dU
⭐ Basic Guide to Pandas:
      https://youtu.be/zN2Hua6oII0

⏰ TIME STAMPS ⏰
-------------------------------------------------------
00:00 - intro
---------------♻️ RECAP ♻️----------------
00:30 - create 2D demo arrays
01:56 - dtype attribute
-------------------------------------------------------
02:52 - fill array with values
03:41 - assignment operators 
04:12 - NumPy is Python or C?
06:11 - sum of array
06:52 - sum of columns or rows only
08:36 - product of array
09:15 - average of array (mean)
09:31 - minimum and maximum values
10:02 - index of minimum and maximum values
10:33 - peak to peak method (ptp)
11:10 - size attribute
11:50 - flatten vs ravel methods
13:03 - repeat function
14:10 - non-flat repeat function
14:50 - unique function
15:20 - diagonal function
16:05 - convert array to list
16:38 - save array to file
17:12 - swap axes of array
17:56 - transpose method
18:27 - T attribute
19:02 - NumPy documentation
20:07 - simple operations on 2 matrices
21:12 - modulo
22:31 - floor division
24:26 - matrix multiplication
27:41 - thanks for watching! :)

🔗 LINKS AND CREDITS 🔗
-------------------------------------------------------
⭐ NumPy Documentation:
       https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html
⭐ Emoji from:
       https://www.flaticon.com/
⭐ Text Effects from:
       https://mixkit.co/free-premiere-pro-templates/titles/","['numpy', 'python', 'python programming', 'NumPy', 'np', 'array', 'ndarray', 'n dimensional array', 'nd-array', 'n-dimensional array', 'matrix', 'matrices']",2022-05-13T15:00:11Z,21514,792,,65,PT28M7S,hd,true
32,gIk_dayKX44,Python Simplified,did I just open a Twitter account??? 😰,,"['twitter', 'social media', 'open source']",2022-04-26T21:19:05Z,10081,485,,68,PT33S,hd,false
33,UsqJhrkvukU,Python Simplified,RTX 3080Ti Giveaway Stream - Good Luck Everybody!,"Joy of Joys Dream of Dreams!! 🤩🤩🤩
The very first live stream of Python Simplified is finally here!!! And the best part is - one of you is going to WIN an Nvidia RTX 3080Ti Graphics Card!!! 🥳
But wait - there's more! there's an additional runner up prize of 5 DLI credits which will take your programming skills to the next level!

So how this draw works? In the past month, you guys have registered to the giveaway by following the rules from my announcement video:
https://youtu.be/NVq2PDqwtnc
(the rules and privacy information can be found in the description of the video above)

I've read all your emails and personally checked each and every entry (I even notified folks who were missing files to correct their submission 😊 if you're noticing this only now - I will accept the missing files up until April 23rd 8am where the .csv file for the draw will be finalized!! I'm still waiting for a few people to respond, hopefully they will when they see this scheduled stream 😉)

I've entered the names of the participants in a special .csv file, and we will determine who wins with a random.shuffle() command! The name at index 0 is the winner of the GPU and the name at index 1 is the winner of the DLI credits!  😁😁😁

IMPORTANT NOTES: 
Since I don't know where you guys live - if the laws of Canada or your country of residence prevent me from shipping you the GPU, I will have to find another way to reward you.
If the problem is shipping the product itself - I'll design you a very nice custom apparel item with your name and a special dedication from myself.
If the problem is shipping in general - I'll come up with an online reward instead! 😀
The laws of your/my country are more important than my giveaway rules and there's only a handful or countries that Canada Post is not delivering to.

Once the stream is over, I will email the GPU winner and request their contact detail. In terms of the DLI credits - you will get them via email as well, right after the stream 😊

See you soon folks!",,2022-04-24T07:37:10Z,5655,329,,33,PT1H52M50S,hd,false
34,lLRBYKwP8GQ,Python Simplified,Ultimate Guide to NumPy Arrays - VERY DETAILED TUTORIAL for beginners!,"In this tutorial, we will learn about NumPy arrays in great detail! 🤓 
NumPy is one of the most popular Python libraries and just as it sounds - it deals with numbers! 
An array, on the other hand,  is a collection of items of the same type and it's the data structure that NumPy uses.
This video will give you the tools and demos to understand how NumPy manages data and how it approaches memory consumption. 

We will explore different functions and methods to:
⭐ create N-dimensional arrays
⭐ reshape arrays
⭐ sort arrays with different algorithms
⭐ filter and manipulate array values

The goal of this Ultimate Guide (and all the future Ultimate Guides I'll be filming for other libraries) - is to cover a HUGE part of the NumPy documentation. It's meant for all the folks who learn by example rather than by reading dry text and hopefully this will take your NumPy skills to an expert level! 🥼🥼🥼
You can find PART 2 of this tutorial here: https://youtu.be/E1IPJOd7dWQ

If you don't feel like coding along with me, you can always clone my code from Wayscript! 
It's the IDE I'm using in this video, and if you like what you see - you can sign up for free!! 😀
⭐ get complete tutorial code:
       https://app.wayscript.com/lairs/3a425743-cffa-43cb-8ab2-67a5630fc799/public/
⭐ what is Wayscript?
       https://wsxdocs.wayscript.com/

🛠️ Related Tutorials of Mine 🛠️
__________________________________________
⭐ PART 2 of NumPy The Ultimate Guide:
       https://youtu.be/E1IPJOd7dWQ
⭐ Convert Binary to Decimal Like a Pro:
       https://youtu.be/4IFq7_s9NEA
⭐ Train Basic Neural Network with NumPy and Pandas:
       https://youtu.be/xpPX3fBM9dU
⭐ Python Learning Roadmap:
       https://youtu.be/wFEC7VbWBZo
⭐ Anaconda Guide for Beginners:
       https://youtu.be/MUZtVEDKXsk

⏲️ TIME STAMPS ⏲️
__________________________________________
00:00 - intro
00:43 - install NumPy
01:02 - import NumPy
01:09 - create an array with NumPy arange
04:09 - create an array with NumPy array
04:27 - why arrays are better than lists
07:08 - NumPy data types
08:06 - 2 dimensional arrays
09:47 - shape attribute
10:38 - reshape arrays
12:33 - create empty arrays
14:14 - NumPy eye function
15:10 - change array values
18:41 - sort NumPy arrays
21:13 - difference between copy and view
23:50 - next NumPy tutorial and thank you for watching!

🐍 Install with Anaconda 🐍
__________________________________________
conda install -c anaconda numpy
* more details here: https://numpy.org/install/

🔗 Important Links 🔗
__________________________________________
⭐ NumPy Documentation:
       https://numpy.org/doc/stable/user/absolute_beginners.html

💳 CREDITS 💳
__________________________________________
⭐ Icons by: flaticon.com
⭐ Text Animations by: mixkit.co

THANK YOU SO MUCH FOR WATCHING! 💗","['numpy', 'python tutorial', 'python programming', 'python for beginners', 'numpy for beginners']",2022-04-22T15:00:11Z,42544,1636,,140,PT24M23S,hd,true
35,W-QOtdD3qx4,Python Simplified,Create a Simple Video Game with Pygame - Step by Step Tutorial for Python Beginners!,"Today we will learn the basics of Pygame by creating a simple car game from scratch! 🚗

⭐ This video is brought to you by Anvil ⭐
 Try it for free: https://anvil.works/pythonsimplified

📃 IMPORTANT NOTES 📃
This tutorial is a 100% beginner friendly! 💯💯💯
It's designed for folks with the most basic knowledge of Python (are you familiar with integers, lists, tuples, while loops, for loops and if statements? no need to be an expert, but as long as you have a basic understanding of these concepts - this tutorial is perfect for you! 😀)

So on today's menu, we will:
⭐ learn how to draw shapes in Pygame
⭐ learn how to work with images in Pygame
⭐ learn how to use relative coordinates
⭐ learn how to animate Pygame elements
⭐ learn how to create keyboard events
⭐ learn how to increase the game difficulty overtime

🐍 INSTALL PYGAME 🐍
____________________________________
FOR NEWER VERSIONS OF PYTHON
⭐ pip install pygame
FOR OLDER VERSIONS OF PYTHON (& ANACONDA)
⭐ conda install -c cogsci pygame

⚒️ RELATED TUTORIALS ⚒️
____________________________________
⭐ My ultimate guide to Anaconda:
       https://youtu.be/MUZtVEDKXsk

⭐ For Loops For Beginners:
       https://youtu.be/dHANJ4l6fwA

⭐ Convert Colours to Numbers:
       https://youtu.be/mAMTXJJQBDI

⭐ My Simple Calculator App with Anvil:
       https://youtu.be/NiQdsK3H57Y

⏰ TIME STAMPS ⏰
____________________________
00:00 - intro
00:54 - create Pygame window
03:13 - run Pygame app with Anaconda
04:02 - set background colour
04:51 - set window title
05:27 - what is relative coordinates?
06:35 - draw rectangles with Pygame
07:24 - use coordinates in Pygame
11:22 - relative coordinates example
12:00 - use images in Pygame
15:50 - keyboard events in Pygame
18:48 - animation in Pygame
20:46 - random events in Pygame
23:07 - end game logic in Pygame
25:13 - game levels logic
25:58 - introduction to Anvil
26:44 - increase game difficulty over time
28:32 - thanks for watching!

🔗 IMPORTANT LINKS 🔗
____________________________
⭐ Complete Tutorial Code: 
      https://github.com/MariyaSha/SimpleCarGame

⭐ Pygame Documentation:
      https://www.pygame.org/docs/

⭐Vehicle Images by:
      https://www.freepik.com/

😁 THANKS FOR WATCHING! 😁","['pygame', 'python game', 'python video game']",2022-04-12T15:30:10Z,50317,1781,,169,PT28M52S,hd,false
36,v7_tKr9PD4s,Python Simplified,Reviewing Your Projects!,"Today's video is dedicated entirely to YOUR projects! 😊
We will see 5 different applications created by viewers who participated in our recent code jam. We will visit their Github repositories, test the applications and discuss points of interest within their code. So if you're interested in Pygame, OpenCV, Dash, Next.js, React, Flask, ESDR, SQLAlchemy, Tkinter - you're definitely up for a treat!! 😀

So what projects are we dealing with??
⭐ VMagnify was able to mercilessly beat Photoshop's upscaling techniques by 
      using the ESDR algorithm!!! 😱
      In the video you will see a comparison between 2 of the most powerful 
      Photoshop algorithms (Bicubic Smoother and Preserve Detail 0.2) and VMagnify -
      prepare to be shocked!!! 😀😀😀
⭐ CyberSpider was able to seamlessly combine a news fetching API in their website and 
      rebelled against Python with an incredibly stylish Next.js and React application! 🥳🥳🥳
      They've applied professional Separation of Concerns principles to create an extra modular
      website providing articles which were automatically pulled from multiple sources! 
⭐ LockBox was able to beautifully combine Tkinter with a Sqlite and SQLAlchemy, 
      which is something many viewers were asking me about! 😀
      They've professionally handled password encryption using a Hash Function and the SHA256
      algorithm, along with database management techniques and real-time updates.
⭐ Fire Scan was able to combine HTTP/HTTPS requests in their web service, evaluate the
      headers of a given site and determine just how secure a given website is!
      They've also provided detailed information regarding each security risk, classifying its severity.
⭐ The Maze of the Navigation Team is fully utilizing randomness and mastering the Pygame grid.
       A new maze is generated each time the application reloads, along with 2 random entry and 
       exit points. Using OOP principles, the team provided the perfect game world setting which 
       can be expended into a full-blown maze or Pacman style game.

⌚ TIME STAMPS ⌚
----------------------------------------------------------
00:00 - Intro
00:26 - LockBox Password Manager 🏆
04:12 - VMagnify Image Upscaling 🏆
08:11 - Fire Scan Web Security 
11:07 - Maze Navigation
12:17 - CyberSpider Cyber Security News 🏆
14:45 - Thanks for Participating!

🧾 REPOSITORIES 🧾
----------------------------------------------------------
🏆LockBox using Tkinter & SQLAlchemy:
https://github.com/r3veal/LockBox

🏆VMagnify using ESDR, OpenCV & Dash:
https://github.com/VMagnify/VMagnify

🏆 CyberSpider with Next.js, React & Python Django For API:
https://github.com/CyberSpiders/cyberspider
Live on Vercel:
https://cyberspiders.vercel.app/

🥈 Fire Scan using Flask & SSL:
https://github.com/diwacreation3/firescan
Live on Heroku:
https://fire-scan.herokuapp.com/

🥈 Random Maze with Pygame:
https://github.com/Mxviil/codeJamNavigation

👾 JOIN OUR DISCORD 👾
----------------------------------------------------------
https://discord.gg/wgTTmsWmXA","['code jam', 'github', 'viewer projects', 'viewer code', 'code jam projects', 'react', 'next.js', 'flask', 'tkinter', 'dash', 'sqlalchemy', 'sql alchemy', 'sqlite']",2022-03-31T15:15:10Z,8613,405,,54,PT15M11S,hd,false
37,6c6NYPjO_rI,Python Simplified,OOP Class Inheritance and Private Class Members - Python for Beginners!,"Hi everyone! today we will do a quick classes and objects exercise!
We will practice everything we've learned in previous tutorials and we will also talk about:
🐍 class inheritance
🐍 private class members... and why they're not exactly private in Python 😅
🐍 in the very end - tips of how to avoid repetition!

In our exercise - we own a guitar store and we need to find a way to keep track of our inventory.
So through a verity of real-life examples we will discover all the qualities of classes along with their significance!
You can either follow along in your IDE or you can:

⭐ Clone My Tutorial Code ⭐
https://app.wayscript.com/lairs/55dfea4b-4f1e-4e70-a368-c1b1e3025963/public
(it's the same IDE I'm using in this tutorial - Wayscript!)

If you have any questions - please leave me a comment below and I'd love to help! 😊

🛑 PREVIOUS TUTORIALS 🛑
_____________________________
⭐ Objects and Classes for Beginners:
       https://youtu.be/f0TrMH9s-VE
⭐ Forest of Objects OpenCV Exercise:
       https://youtu.be/-LsuiVGO-88

⌚ TIME STAMPS ⌚
_____________________________
00:00 - intro
00:22 - init method
00:35 - attributes
01:26 - methods
01:49 - function vs method
02:57 - call method on object
03:13 - call method inside init
04:02 - class inheritance
05:09 - parent and child classes
06:15 - child methods
07:02 - replace child attributes
09:04 - private members
10:14 - bypass private members
11:42 - private methods
13:01 - tips to avoid repetition
15:52 - thanks for watching!

🙏 THANKS FOR WATCHING 🙏",,2022-03-22T15:00:11Z,41956,1962,,184,PT16M12S,hd,false
38,NVq2PDqwtnc,Python Simplified,Nvidia RTX 3080 Ti Giveaway!!! YOU CAN WIN the GPU of your dreams!!,"Welcome to the very fist giveaway of this channel! 🤩
I have some EXTRAORDINARY PRIZES for you which even Santa struggled to get this year!! 🎁🎁🎁 
I'm talking about one of the best graphics cards on the planet - ⭐ Nvidia GeForce RTX 3080 Ti ⭐which comes with 10,240 CUDA Cores and 12GB of GDDR5X memory 😱 (English translation: it's very powerful and fast! )
But that's not all! there's also a SECOND PLACE PRIZE of ⭐ 5 Deep Learning Institute Credits ⭐ which you can redeem for special workshops, courses and training on Nvidia's DLI (link below).

📝 GIVEAWAY CONDITIONS 📝
-------------------------------------------------------
1. You must register to the upcoming Nvidia GPU Technology Conference and you must 
     attend at least one session (link below).
2. You must be a subscriber of my channel.
-------------------------------------------------------
If both of these conditions are matched - please send me an email to:
3080tigiveaway@protonmail.com
with the following information:
1. your full name
2. your GTC registration invoice (or screenshot of the registration page)
3. a picture/screenshot of yourself attending a conference session 
    (it will NOT be posted anywhere, it's just for verification purposes - so no need to
    try to look extra pretty! well... only if you want to! 🥸)
4. a screenshot of my channel's homepage showing that you are subscribed.
-------------------------------------------------------
Once you've provided me ALL the above info - you will enter a draw!
The winner will be ⭐ announced live ⭐ and determined by the Gods of Python!! 
( as in - using a random shuffle command 🤪)

⚠️GTC STARTS: March 21st, 2022.
⚠️GTC ENDS (but you can watch it on-demand for 30 days): March 24th, 2022.
⚠️GIVEAWAY REGISTRATION ENDS ON: April 21st, 2022. 
      (which gives you a full month to attend all the sessions you'd like
      and collect all the screenshots).

PLEASE NOTE:
⚠️ Checkout the Legal Privacy Policy of this Giveaway:
   https://docs.google.com/document/d/1OxZB4x9LcLe1xwGsV0Na2pp8rdqa2Gx0cRtRSgY9MCw/edit?usp=sharing
⚠️ Entries that don’t comply with YouTubes Community Guidelines will be disqualified, more info here: https://www.youtube.com/howyoutubeworks/policies/community-guidelines/
⚠️ Please checkout YouTube's contest policy:  
     https://support.google.com/youtube/answer/1620498?hl=en
⚠️ YouTube is not a sponsor of this contest! it is not liable for anything related to my contest!
⚠️ I respect and follow the laws and regulations of Canada as well as your countries of residence.
     In case I am prevented by law to deliver to your country - I would have to follow the judicial laws,
     which are much more important than the rules of my giveaway.

🔗 Special Links 🔗
-------------------------------------------------------
1. Register to the GTC (🥇): 
    https://nvda.ws/3olmVrt
2. Checkout Nvidia's DLI (🥈):
    https://www.nvidia.com/en-us/training/

💪 Special Specs 💪
-------------------------------------------------------
GPU DIMENSIONS:
11.2"" (285 mm) long and 4.4"" (112 mm) wide

🙏 Thank you for watching! 🙏
-------------------------------------------------------
- GPU graphics from:
  https://nvidianews.nvidia.com/multimedia
- Video icons from:
  https://www.flaticon.com/","['GPU', 'graphics card', 'graphic card', 'nvidia', ""nvidia's"", 'rtx', 'ray tracing', 'ray-tracing', '3080ti', '3080 ti', 'geforce', 'geeforce', '3080']",2022-03-11T15:00:17Z,8434,499,,170,PT5M25S,hd,false
39,-AlFiS74aQg,Python Simplified,Ultimate Guide to Datetime! Python date and time objects for beginners,"Hi everyone! today we will talk about the Datetime module, which helps us load and manipulate date and time data in Python. The main reason why Datetime is so important is because Python doesn't really have a built-in data type for dates (and times) 🗓️⌚- but we can easily import them from the datetime module! 😀

So in this tutorial - we will discuss and experiment with the most important commands from the documentation, focusing on 3 different classes: date, datetime and time.
We will learn how to create and manipulate each of these and we will also convey them with different formatting methods.

⭐ Complete Tutorial Code: ⭐
https://app.wayscript.com/lairs/ac5fe2c7-3b0d-47f8-8b81-c53d530e96b8/public

⏰ TIMESTAMPS ⏰
----------------------------------------------------
00:00 - intro
00:27 - python date object
01:17 - date attributes
01:49 - date formatting
03:59 - replace date attributes
04:33 - countdown to date
05:44 - load date using attributes
06:18 - load date using string
07:03 - find weekday of date
07:40 - python datetime object
08:16 - datetime attributes
09:31 - load datetime using string
11:02 - advanced datetime formatting
12:14 - time zone attribute
12:35 - datetime time object
13:44 - convert 24 hour time to 12 hour time
14:28 - combine date and time objects into a datetime object
15:25 - thanks for watching!

🔗 LINKS FROM TUTORIAL 🔗
----------------------------------------------------
⭐ Classes and Objects Tutorial:
       https://youtu.be/f0TrMH9s-VE

⭐ Datetime Documentation - format codes:
       https://docs.python.org/3/library/datetime.html

👋 THANKS FOR WATCHING 👋
----------------------------------------------------
and thank you to flaticon.com for the icon!","['datetime', 'date and time', 'date & time', 'date&time', 'dateandtime', 'date data type', 'time data type', 'python date', 'python datetime']",2022-02-28T15:30:01Z,21228,1018,,149,PT15M50S,hd,false
40,qDdQ4HY7Q1g,Python Simplified,"Bridal Falls in Chilliwack, British Columbia 🤩",,,2022-02-21T23:41:51Z,4019,208,,40,PT15S,hd,false
41,iFADsRDJhDM,Python Simplified,Inference with Torch-TensorRT Deep Learning Prediction for Beginners - CPU vs CUDA vs TensorRT,"Hi everyone! 😀 In the last video we've seen how to accelerate the speed of our programs with Pytorch and CUDA - today we will take it another step further with Torch-TensorRT!
We will focus on a Machine Learning process called Inference (which is when the model is trained, perfected and ready to make a prediction). 
For this we will load a state-of-the-art artificial neural network and we will use it to classify a picture of my cat! 🙀🙀🙀
Specifically - we will borrow ResNet50 for our little Pytorch experiment! 😉 
We will also run a speed test comparing Pytorch models running on CPU, on CUDA and on Torch-TensorRT - which of these do you think is faster??

⏲️ TIMESTAMPS ⏲️
-----------------------------------
00:00 - intro
01:05 - clone Torch-TensorRT
01:40 - install and setup Docker
03:52 - install Nvidia Container Toolkit & Nvidia Docker 2
05:02 - Torch-TensorRT container (option #1)
07:22 - Torch-TensorRT Nvidia NGC container (option #2)
09:00 - import Pytorch
09:16 - load ResNet50
10:25 - load sample image
11:45 - sample image transforms
14:48 - batch size
16:19 - prediction with ResNet50
17:12 - softmax function
18:07 - ImageNet class number to name mapping
20:10 - predict top 5 classes of sample image (topk)
23:33 - speed test benchmark function
27:33 - CPU benchmarks
28:13 - CUDA benchmarks
30:09 - trace model
31:20 - convert traced model into a Torch-TensorRT model
33:02 - TensorRT benchmarks
34:32 - download Jupyter Notebook
34:50 - HOW DID I MISS THIS???
35:31 - thanks for watching!

🛑 REFERENCED TUTORIALS 🛑
----------------------------------------------------------------------
⭐ CUDA Parallel Computing for beginners: 
    https://youtu.be/r9IqwpMR9TE
⭐ Neural Networks for beginners:
    https://youtu.be/i1AqHG4k8mE
⭐ Machine Learning Databases:
    https://youtu.be/8z2oLfK2sIc
⭐ Gradient Descent:
    https://youtu.be/jwStsp8JUPU

⭐ INSTALLATION LINKS AND BASH COMMANDS ⭐
--------------------------------------------------------------------------------------
1. Clone Torch-TensorRT and change directory:
    $ git clone https://github.com/NVIDIA/Torch-TensorRT
    $ cd Torch-TensorRT

2. Docker installation guide: 
https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/install-guide.html#docker

    $ curl https://get.docker.com | sh \ && sudo systemctl --now enable docker
    $ sudo groupadd docker
    $ sudo usermod -aG docker $USER
    $ newgrp docker
    $ docker run hello-world

3. Nvidia Docker 2 installation:

    $ distribution=$(. /etc/os-release;echo $ID$VERSION_ID) \ && curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | sudo apt-key add - \ && curl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-dock er.list | sudo tee /etc/apt/sources.list.d/nvidia-docker.list
    $ sudo apt-get update
    $ sudo apt-get install -y nvidia-docker2
    $ sudo systemctl restart docker
    $ sudo docker run --rm --gpus all nvidia/cuda:11.0-base nvidia-smi

4. Official Torch TensorRT Container:

    $ docker build -t torch_tensorrt -f ./docker/Dockerfile .
    $ docker run --gpus=all --rm -it -v $PWD:/Torch-TensorRT --net=host --ipc=host --ulimit memlock=-1 --ulimit stack=67108864 torch_tensorrt:latest bash
    $ cd /Torch-TensorRT/notebooks
    $ jupyter notebook --allow-root --ip 0.0.0.0 --port 8888

5. Nvidia NGC Container (alternative to 4):
https://catalog.ngc.nvidia.com/orgs/nvidia/containers/pytorch

    $ docker pull nvcr.io/nvidia/pytorch:21.12-py3
    $ docker run --net=host --gpus all -it --rm -v local_dir:/container_dir nvcr.io/nvidia/pytorch:21.12-py3
    $ jupyter notebook --allow-root --ip 0.0.0.0 --port 8888

6. My cats picture:
    https://github.com/MariyaSha/Inference_withTorchTensorRT/blob/main/img1.jpg

7. Transforms Normalize - Pytorch Documentation:
    https://pytorch.org/vision/stable/transforms.html

8. ImageNet class to name mapping:
    https://github.com/pytorch/hub/blob/master/imagenet_classes.txt

9. Complete Notebook on Github:
    https://github.com/MariyaSha/Inference_withTorchTensorRT

---------------------------------------------------------------------------
💗 THANK YOU SO MUCH FOR WATCHING! 💗

- Sound effect by: https://www.zapsplat.com
- Icons by: https://www.flaticon.com/
- Resnet50 image by: https://commons.wikimedia.org/wiki/File:ResNet50.png","['trt', 'torch tensor rt', 'torch tensorrt', 'tensorrt', 'torch_tensorrt', 'pytorch', 'cuda']",2022-02-20T16:00:11Z,13982,527,,79,PT36M25S,hd,false
42,SVJYiMFQTZE,Python Simplified,"Code Jam Begins! Rules, Instructions And Everything Else You Need To Know!","Hi Everyone! It's already February 5th somewhere in the world - which means it's time to start jamming! 😀😀😀
In this video you will see instructions on how to join our Discord server, you can do it here: https://discord.gg/wgTTmsWmXA
You'll need to give a 👍 to our rules in the ""welcome-and-rules"" channel - then you can access the rest of the server and have lots of fun with us! 😊
To access your private team channel - please request it with:
/request role:TOPIC_NAME
for example: ""/request role:cyber-security-team-1""
We have a very nice bot that will approve you immediately - or one of us mods will 😉

⭐ Find Your Team ⭐ 
https://docs.google.com/spreadsheets/d/1xVPNepTG3ARjhesw4RuF7xrz3tY_IdKT3QnR5G0ecig/edit?usp=sharing

⭐ Free Logo Resources ⭐
https://www.flaticon.com/
https://www.freepik.com/

⚠️ TO WIN THIS CODE JAM ⚠️
you'll need to impress my lovely team of moderators! 😊
their marking criteria:
1. creativity
2. code clarity - can somebody other than the team members understand the code? is it nice and neat?
3. innovation - have you seen anything like this before? or was it implemented in such way?
4. functionality - does it work? 🤪
5. user experience - how convenient is your app/service for the average user?
6. design - how appealing are the aesthetics? do you like it? (personal taste kind of thing...)
7. modularity and separation of concerns - different pieces of functionality bundled in different functions, HTML in a different file than your CSS or Python, etc.
8. teamwork - did all the active team members contributed equally?
9. clear README documentation - please make sure you give us a briefing of your project along with the roles that each team member had (otherwise we can grade your teamwork at criteria 8 😉)
10. clever control flow - smart use of conditional statements and loops
11. EFFORT!!!

Thank you so much for my AMAZING moderators!!
Thank you to all the participants!

GOOD LUCK and I will see you on Discord!!! 😁",,2022-02-05T05:00:15Z,6734,280,,40,PT2M11S,hd,false
43,v3CSQkPJtAc,Python Simplified,"Flask SQLite Web Application Step by Step Tutorial - HTML, Jinja, CSS, JavaScript, Python","In this tutorial we will see how to create a web application using Flask and SQLite. Flask is a web framework using Python for the backend, HTML and Jinja for templating, CSS for styling and JavaScript for client side interactions.
So today, will not only connect databases to a Flask server - but we will also learn how to use all the perks of this framework.
And the crème de la crème?
We will deploy our application to production directly from our IDE! 😱😱😱

Speaking of my IDE, I'm using a brand new version of Wayscript, which is now available for the wide public. You can get here: https://app.wayscript.com

⭐ Clone Complete Groceries App: ⭐
https://app.wayscript.com/lairs/8efe30b2-17c0-4b0f-8c51-5852891b723c/public/

⭐ Clone Starter Files from Wayscript: ⭐
https://app.wayscript.com/lairs/3042f3c6-03ec-4afe-9a6c-bc8c8d981363/public/

⭐ Deployed Groceries App ⭐
https://splendid-serpent-island-dev.wayscript.cloud

⭐ Clone Starter Files from Github: ⭐
https://github.com/MariyaSha/groceriesList

⏰ TIME STAMPS ⏰
---------------------------------------------------------------
00:00 - Intro
00:48 - starter files walkthrough
02:31 - connect SQLite database to Flask
04:16 - deploy app to development environment
05:18 - preprocess database data
07:08 - HTML template
08:04 - Jinja2 templating
09:44 - database entries as form options
15:39 - database entries as checkbox elements
18:08 - Flask Session (global data)
24:48 - CSS styling
33:14 - connect JavaScript to Flask
34:46 - JavaScript client side interactions
38:43 - testing the app
39:26 - deploy app to production with Wayscript
41:01 - challenge!
41:17 - thanks for watching!

💻 run Flask locally on Windows machine 💻
---------------------------------------------------------------
⭐ navigate to project directory:
      cd path/to/my_directory
⭐ if the name of your Flask Python file is ""my_app.py""
      set FLASK_APP=my_app
      set FLASK_ENV=development
      flask run
⭐ in your browser navigate to:
      localhost:5000

💻 run Flask locally on Linux machine 💻
---------------------------------------------------------------
⭐ navigate to project directory:
      $ cd path/to/my_directory
⭐ if the name of your Flask Python file is ""my_app.py""
      $ export FLASK_APP=my_app
      $ export FLASK_ENV=development
      $ flask run
⭐ in your browser navigate to:
      localhost:5000

🔗 IMPORTANT LINKS 🔗
---------------------------------------------------------------
⭐ Github Logo from tutorial:
       https://raw.githubusercontent.com/MariyaSha/groceriesList/main/logo_black.png
⭐ my previous Flask tutorial:
       https://youtu.be/6plVs_ytIH8
⭐ my previous SQLite tutorial:
       https://youtu.be/Ohj-CqALrwk

🙏 THANK YOU 🙏
**********************************
Thank you so much for watching! 😀
Thank you to Flaticon for the notes icon: www.flaticon.com",,2022-02-03T16:30:26Z,39436,1229,,138,PT41M43S,hd,false
44,mTZ_dzcrV48,Python Simplified,Flask with Sqlite Web Application Preview - Upcoming Tutorial,,,2022-01-28T16:38:07Z,8143,443,,32,PT50S,hd,false
45,zN2Hua6oII0,Python Simplified,"Basic Guide to Pandas! Tricks, Shortcuts, Must Know Commands! Python for Beginners","🛑 Quick Correction to DATA MANIPULATION 🛑
data[""bmi""] = data[""weight""]/(data[""height""]**2)
No need for a ""for"" loop! it's slower and wastes resources - while the above example is perfect!

Hi everyone! Today we will talk about all the useful things we can do with Pandas! 🐼🐼🐼
Pandas is a Python library that's all about data structures and tables. In this video we will cover its important methods as well as all the tricks and shortcuts to get you to pro level within 20 minutes! 💪🤩

If you're curious about my IDE - I'm using Wayscript which is now available for the wide public! you no longer need an invitation, you can simply sign up with the following link: https://app.wayscript.com

⭐ Clone Complete Lesson Code: ⭐
https://app.wayscript.com/lairs/61300d18-58e7-4b8d-8889-74e22d70fe59/public

⭐ Wayscript X QuickStart Guide ⭐
https://wsxdocs.wayscript.com/quickstart

⏰ TIME STAMPS ⏰
**********************************
00:00 - intro
00:24 - install and import Pandas
00:38 - create a Data Frame
02:00 - add column name
02:37 - add new columns
03:52 - select column in Data Frame
04:17 - select value in Data Frame
04:37 - select row in Data Frame
05:30 - manipulate data
07:30 - save Data Frame to csv file
07:58 - comma delimited vs tab delimited
08:49 - save Data Frame to text file
09:11 - load Data Frame from file
10:33 - load SQL database to Data Frame
11:57 - head and tail methods
12:53 - filter data entries
14:00 - replace data entries
14:48 - remove columns
16:20 - add new rows to Data Frame
18:00 - remove duplicates
20:33 - thanks for watching!
**********************************

💻 IMPORTANT VIDEOS 💻
**********************************
⭐ Make SQLite Database of GTA games:
       https://youtu.be/Ohj-CqALrwk

⭐ Pandas Read HTML Web Scraping Method:
       https://youtu.be/oF-EMiPZQGA

⭐ Make graphs with Pandas:
       https://youtu.be/P4F3PzCMrtk

🙏 THANK YOU 🙏
**********************************
Thank you so much for watching! 😀
Thank you to Zapsplat for the ""swoosh"" sound effect: zapsplat.com
Thank you to Flaticon for the thumbnail icon: www.flaticon.com","['pandas', 'pd', 'python pandas', 'python data science']",2022-01-23T16:00:11Z,79188,2973,,180,PT20M52S,hd,false
46,we6ae9ivveo,Python Simplified,Code jam registration is over! official dates/teams announcement on Friday!,,,2022-01-18T22:46:45Z,5832,263,,32,PT35S,hd,false
47,szNOkNdMSjY,Python Simplified,Special Announcement : Code Jam 2022 is on the way! 🛑REGISTRATION IS OVER🛑,"Hi Everyone, this is a special announcement video!
My lovely team of Discord moderators and I are organizing our very first code jam!! 🥳🥳🥳

🛑 CODE JAM REGISTRATION IS OVER! OFFICIAL ANNOUNCEMENT ON FRIDAY JAN 21ST  🛑
Short Pre-Announcement: https://youtu.be/we6ae9ivveo

We welcome everybody to join us regardless of your level of programming experience. 
Our main goal is to mimic a start up company where people with different skillsets are working together towards the same goal. And we also want to experience all the different stages of application developments - starting from planning, design, development, production, etc.

If you would like to participate, please fill up the Google Form I'm including below - this will help us pair you with the perfect team! 😀

We really appreciate your help as it's the first time we're organizing such an event and without your input - we're not sure what to expect 😅

⭐ Sign up here (Google Forms) ⭐
 🛑 REGISTRATION IS OVER... SORRY, SEE YOU IN THE NEXT JAM! 🛑
        https://youtu.be/we6ae9ivveo

⭐ Join our Discord server ⭐
      https://discord.gg/WxDu2fNW3g

Thank you so much for watching and taking the time to fill the form! 😊
Also, thank you to flaticon.com for the icons!",['codejam'],2022-01-12T16:00:32Z,6315,405,,82,PT3M1S,hd,false
48,oF-EMiPZQGA,Python Simplified,Much Better Web Scraping with Pandas - Automatically Extract All Table Elements From a Web Page!,"In this video, I'll show you an INCREDIBLE shortcut for web scraping HTML tables!!!
This shortcut is a single command that skips the entire process of accessing the Developer Tools and finding specific elements on the page! 😱
We will use the 🐼 Pandas read_html method 🐼 - and extract a list of all the table elements found at a given URL (table headers, table data, table rows).
So with this single command - we actually end up solving a problem that took more than 15 minutes to solve in the recent Mechanical Soup tutorial!! 😵‍💫😵‍💫😵‍💫
(which can be found here: https://youtu.be/MkGQmZoMuRM)

But wait... it sounds too good to be true! where's the catch?? 🤪
Unfortunately, this method is restricted to table elements only and it can't be used for traditional web scraping perks such as logging in, filling forms or pressing on buttons. 
However, if scraping HTML tables is exactly what you seek - this tutorial will change your life!!! (well... maybe just slightly 😅)

***************************
⏰ TIME STAMPS ⏰
***************************
00:00 - intro
00:46 - install pandas and lxml
01:34 - read HTML method
02:22 - fix SSL Cert Verification Error and URL Error
03:08 - find a single table in read_html
04:26 - benefits and disadvantages of read_html over Mechanical Soup
05:01 - credits and thanks for watching!

📺 USEFUL TUTORIALS 📺
***************************
⭐⭐ web scraping databases with SQLite and Mechanical Soup:
       https://youtu.be/MkGQmZoMuRM

⭐ web scraping images with Mechanical Soup:
       https://youtu.be/drDdb1MBBfI
⭐ web scraping DOM elements with Beautiful Soup:
       https://youtu.be/ySNSY7iiBDY
⭐ interacting with LinkedIn using Selenium:
       https://youtu.be/7aIb6iQZkDw
⭐ web scraping entire Facebook image gallery with Selenium:
       https://youtu.be/SsXcyoevkV0
⭐ web scraping Instagram images with Selenium:
       https://youtu.be/iJGvYBH9mcY

🔗 USEFUL LINKS 🔗
***************************
⭐ complete code on Github:
       https://github.com/MariyaSha/WebscrapingDatabases/blob/main/scraper_Pandas.ipynb
⭐ URL used in video:
      https://en.wikipedia.org/wiki/Comparison_of_Linux_distributions
⭐SSL Certificate error fix:
     https://github.com/prisma-labs/python-graphql-client/issues/13

🙏 THANK YOU 🙏
***************************
Thank you so much for watching and for all your support! 
An extra special thank you to Ditto for suggesting the read_html method! 😀
Also, thanks to flaticon.com for the lovely icons at the end of the video

See you soon in a brand new Flask + Sqlite tutorial! 💟","['pd', 'pandas', 'read_html', 'read html']",2022-01-04T15:00:34Z,47248,2357,,162,PT5M29S,hd,false
49,r9IqwpMR9TE,Python Simplified,CUDA Simply Explained - GPU vs CPU Parallel Computing for Beginners,"In this tutorial, we will talk about CUDA and how it helps us accelerate the speed of our programs. Additionally, we will discuss the difference between processors (CPUs) and graphic cards (GPUs) and how come we can use both to process code.
By the end of this video - we will install CUDA and perform a quick speed test comparing the speed of our GPU with the speed of our CPU. We will create 2 extremely large data structures with PyTorch and we will multiply one by the other to test the performance.
Specifically, I'll be comparing Nvidia's GeForce RTX 3090 GPU with Intel's i9-12900K 12th-Gen Alder Lake Processor (with DDR5 memory).
I'll be posting some more advanced benchmarks in the next few tutorials, as the code I'm demonstrating in this video is 100% beginner-friendly!

⏲️ Time Stamps ⏲️
*****************************************
00:00 - what is CUDA?
00:47 - how processors (CPU) operate?
01:42 - CPU multitasking
03:16 - how graphic cards (GPU) operate?
04:02 - how come GPUs can run code faster than CPUs?
04:59 - benefits of using CUDA
06:03 - verify our GPU is capable of CUDA
06:48 - install CUDA with Anaconda and PyTorch
09:22 - verify if CUDA installation was successful
10:32 - CPU vs GPU speed test with PyTorch 
14:20 - freeze CPU with torch.cuda.synchronize()
15:51 - speed test results
17:55 - CUDA for systems with multiple GPUs
18:28 - next tutorials and thanks for watching!

🔗 Important Links 🔗
*****************************************
⭐ My Anaconda Tutorial for Beginners:
      https://youtu.be/MUZtVEDKXsk

⭐ My CUDA vs. TensorRT Tutorial for Beginners:
       https://youtu.be/iFADsRDJhDM

⭐ CUDA Enabled GPUS:
      https://developer.nvidia.com/cuda-gpus

⭐ Complete Notebook Code:
      https://github.com/MariyaSha/CUDA_speedtest

💻 Install with VENV instead of Anaconda (LINUX) 💻
*****************************************
❗install venv:
     $ sudo apt-get install -y python3-venv

🥇create working environment: 
     $ python3 -m venv my_env

🥈activate working environment: 
     $ source my_env/bin/activate

🥉install PIP3 and PyTorch+CUDA: 
     (my_env) $ sudo apt install python3-pip
     (my_env) $ pip3 install torch==1.10.1+cu113 torchvision==0.11.2+cu113 torchaudio==0.10.1+cu113 -f https://download.pytorch.org/whl/cu113/torch_stable.html

🏆more information about VENV:
https://docs.python.org/3/library/venv.html

🏆more information about installing Pytorch:
https://pytorch.org/get-started/locally/

🙏SPECIAL THANK YOU 🙏
*****************************************
Thank you so much to Robert from Nvidia for helping me with the speed test code!

Thank you to SFX Buzz for the scratched record sound:
https://www.sfxbuzz.com/

Thank you to Flat Icon for the beautiful icon graphics:
https://www.flaticon.com/","['cuda', 'cudatoolkit', 'cuda toolkit', 'parallel computing', 'parallel programming', 'multitasking', 'multiprocessing', 'multi processing', 'gpu', 'cpu', 'graphics card', 'graphic card', 'processor', 'computer hardware']",2021-12-25T16:00:12Z,117869,4356,,358,PT19M11S,hd,false
50,etvAL6iHRXw,Python Simplified,I've promised to capture the snowfall for all the folks living in warm countries! 😄,,,2021-12-20T18:27:15Z,4816,356,,71,PT26S,hd,false
51,yl7jGe5jkuQ,Python Simplified,"When ROG, Nvidia and Intel make a baby!! my 3090 12th gen DDR5 realness is officially ready! 😍😍😍",,,2021-12-10T16:50:35Z,5652,233,,58,PT28S,hd,false
52,MkGQmZoMuRM,Python Simplified,Web Scraping Databases with Mechanical Soup and SQlite,"Hi Everyone! In this step by step tutorial, we will extract a huge table of data from the internet and store it inside an SQLite database! 
To keep things simple I've chosen a Wikipedia table, but I highly encourage you to apply the same principles on data that updates a bit more frequently (for example weather forecasts) 😃

If you're curious about my IDE - I'm using Wayscript which is now available for the wide public! you no longer need an invitation, you can simply sign up with the following link: https://app.wayscript.com

⭐clone complete tutorial code⭐
https://app.wayscript.com/lairs/517c9eb3-a662-41ec-9fe8-c09b2a7559bc/public

⏰ TIMESTAMPS ⏰
***************************************
00:00 - intro
00:34 - imports and installs
01:42 - web scraping with mechanical soup
02:20 - select HTML table elements
03:47 - extract element attributes
06:11 - find the index value of a list item
07:13 - extract multiple columns of table data
09:44 - organize extracted columns
12:44 - enumerate function
14:02 - dictionary to data frame
14:53 - create SQLite database
15:36 - create SQLite table 
16:35 - insert Pandas data frame into SQlite table
17:26 - save data permanently inside database file
18:49 - thanks for watching!

💻 CODE AND IMPORTANT LINKS 💻
***************************************
⭐ URL used in the tutorial: 
      https://en.wikipedia.org/wiki/Comparison_of_Linux_distributions

⭐ complete code repository on Github:
     https://github.com/MariyaSha/WebscrapingDatabases

⭐install SQLite on Linux:
     sudo apt install sqlite3

⭐install SQLite on Windows:
     Download the Precompiled Binaries for Windows zip file from SQLite docs:
     https://www.sqlite.org/download.html

⭐install SQLite on MAC or Anaconda:
     no need to install - you already have it! 😁

⭐ code used in the tutorial:
column_names = [""Founder"", 
                ""Maintainer"", 
                ""Initial_Release_Year"", 
                ""Current_Stable_Version"", 
                ""Security_Updates"", 
                ""Release_Date"", 
                ""System_Distribution_Commitment"", 
                ""Forked_From"", 
                ""Target_Audience"", 
                ""Cost"", 
                ""Status""]

📽️ RELATED TUTORIALS📽️
***************************************
🌞 Much Better HTML table Web Scraping with Pandas:
       https://youtu.be/oF-EMiPZQGA

🌞 SQLite Databases for Beginners:
       https://youtu.be/Ohj-CqALrwk

🌞 Web Scraping Images with Mechanical Soup:
      https://youtu.be/drDdb1MBBfI

🌞 Web Scraping Text with Beautiful Soup:
      https://youtu.be/ySNSY7iiBDY","['sqlite', 'sqlit', 'sq lite', 'sqlite3', 'mechanicalsoup', 'mechanical soup', 'ms', 'python', 'python programming', 'webscrape', 'web scrape', 'automate', 'automation']",2021-12-05T16:00:12Z,72122,2525,,198,PT19M19S,hd,false
53,X5vRKLuVp58,Python Simplified,My Story of Assembling a Brand New PC Despite Part Shortage - Vlog 5,"In this video, I will tell you all about my PC assembly adventures and how I got my hands on the equipment you see in the background! 😍😍
I went for a brand new 12 gen built (yes, with DDR5!!! I found 32GB of it!!! 😱) with my dream RTX 3090 GPU (which was the component that started this whole assembly journey!)

In the next vlog, I will of course show you this beast after assembly and I will talk in much more detail about each of the parts, how they relate to one another, their specs, as well as exactly why I went for an Asus Rog build! 😀
This vlog is more about overcoming the current semi-conductor supply shortage and NOT GIVING UP!!! 💪💪💪
Keep hustling, keep visiting retailers, keep calling companies across your country and checking for stock arrival ETAs!! (Mid-January is what many companies say - however, I see that some parts have already arrived!)

⏰ Timestamps ⏰
**********************************
00:00 - Intro
00:40 - Nvidia RTX 3090 Graphic Card
02:14 - 12th generation hardware
02:31 - DDR5 Random Access Memory
04:28 - Police Vehicle Adventure
07:14 - Upcoming CUDA Tutorials
07:46 - Thanks for Watching! :)
**********************************

So what were the most difficult parts to get?? 
and 🤩 HOW CAN YOU GET THEM?? 🤩

⭐⭐ DDR5 Memory (RAM) - no online stock anywhere!!! and no backorders!!!
What worked for me: try visiting local retailers AS MUCH AS POSSIBLE! 
They get small quantities of these DDR5 sticks regularly but they end up selling them before they even appear in the inventory!
Also, always ask to speak to a manager as regular employees will most likely not be able to help you! 

⭐⭐ Geforce RTX 3090 GPU - finally available online! 😱😱😱
however, unfortunately - NOT THE FOUNDERS EDITION! 
You can find many other kinds on 🚨Newegg.com🚨 though! They currently have the Rog Strix Edition, MSI Edition, Gigabyte Edition, etc... 
I got mine directly from Nvidia and it will feature in a few upcoming 🐍CUDA and TensorRT 🐍tutorials as a result (both are Machine Learning tools to accelerate the processing time of your code). But I checked the stock on Newegg on the evening of Nov 27th - and there are no shortages!!!! yeeeey! 😀

⭐⭐ Rog Ryujin ii 360 Liquid Cooler - Backordered!
🚨 Please note 🚨 the Rog Ruygin 360 (without ii) appearing in this video is incompatible with my specific build! it doesn't support an LGA 1700 socket which is required by the Maximus motherboard! So ordering a bracket will not help! you'll need a full upgrade kit which I don't believe exists yet! 🙃
You can backorder it through many different retailers, not much stock yet, but you can reserve a spot! It's not semi-conductor related so the shortage is probably not gonna last for long, don't worry! 😁

🎵 Thank you notes 🎵
**********************************
Thank you Nvidia!!
Thank you to the Linus Tech Tips team!!
Thank you to the staff in Canada Computers, Port Coquitlam!!
Thank you to the Police officers for keeping us safe!!
Thank you guys so much for watching and I hope you enjoyed this vlog!! 😊
If you're struggling with parts - comment below and I will try to help!","['DDR5', 'DDR 5', 'DDR5 RAM', 'DDR5 Memory', 'Nvidia RTX 3090', 'RTX3090', 'RTX 3090', 'Geforce RTX 3090', '3090', 'Rog', 'Rog Maximus', 'LGA1700', 'LGA 1700', 'semi conductor', 'semi-conductor', 'part shortage', 'supply shortage', 'hardware shortage', 'canada computers']",2021-11-28T15:00:24Z,9710,505,,159,PT8M3S,hd,false
54,Ohj-CqALrwk,Python Simplified,SQLite Backend for Beginners - Create Quick Databases with Python and SQL,"🛑 PLEASE NOTE 🛑 we need to add connection.commit() after each data insertion command!!!
This will store all the rows permanently inside ""gta.db"", otherwise you might have trouble selecting from external files!!
Find out exactly how to do it in my follow-up SQLite tutorial: https://youtu.be/MkGQmZoMuRM

Today we will talk about Sqlite, which is a library known for its quick and simple databases. 
It is a database engine using the SQL language, which is probably even more intuitive and closer to plain English than Python (can you believe I'm saying that??? 😱😱😱)
With the help of Python, we will cover all the basics of creating databases, tables, inserting data into those tables, selecting and fetching database rows, searching data within the database and manipulating this data inside our code. All this - in less than 15 minutes!!! 🤩
(no wonder Sqlite is considered to be an incredibly easy library!)

If you're curious about my IDE - I'm using Wayscript which is now available for the wide public! you no longer need an invitation, you can simply sign up with the following link: https://app.wayscript.com

⭐ Clone the Complete Lesson Code ⭐
https://app.wayscript.com/lairs/536eeab2-7b37-43d4-a604-12373397680b/public/

Learn more about my Wayscript X:
https://wsxdocs.wayscript.com/

Request an invitation to join Wayscript X:
https://wayscript.com/wsx

📝 Starter Code 📝
**************************
release_list = [
    (1997, ""Grand Theft Auto"", ""state of New Guernsey""),
    (1999, ""Grand Theft Auto 2"", ""Anywhere, USA""),
    (2001, ""Grand Theft Auto III"", ""Liberty City""),
    (2002, ""Grand Theft Auto: Vice City"", ""Vice City""),
    (2004, ""Grand Theft Auto: San Andreas"", ""state of San Andreas""),
    (2008, ""Grand Theft Auto IV"", ""Liberty City""),
    (2013, ""Grand Theft Auto V"", ""Los Santos"")
]    

⏰ TIMESTAMPS ⏰
**************************
00:00 - Intro
00:27 - Starter Code Overview
00:51 - Create Empty Sqlite Database with Python
02:37 - SQL Cursor Object
03:02 - Create Database Table
03:42 - Sqlite Data Types
04:14 - Insert Multiple Rows of Data Into a Table
06:03 - Select and Print All Database Rows
06:47 - Select Specific Rows with Specific Values
08:29 - Combine Multiple Database Tables
11:06 - Manipulate Data Fetched from Database
13:04 - Coming Soon and Thanks for Watching! :)

🔔 Important Links 🔔
**************************
🐱‍🏍 Complete Code on Github:
       https://github.com/MariyaSha/sqliteBasics
🐱‍🏍 Sqlite3 Documentation: 
       https://docs.python.org/3/library/sqlite3.html
🐱‍🏍 Icons used in the video: 
       flaticon.com","['sqlite', 'sql', 'mysql', 'database', 'databases', 'sq lite']",2021-11-22T16:00:12Z,86636,3064,,245,PT13M32S,hd,false
55,wFEC7VbWBZo,Python Simplified,Python Learning Roadmap for Beginners - This is how I learned! - Vlog 4,"In this vlog, I will share my roadmap of learning Python along with examples and links to some relevant tutorials on my channel! 🙂
Please keep in mind that I didn't cover all the topics just yet... so an official fancy roadmap tutorial will follow! this one is just a warm-up, but I'm sure you will find it helpful as well, especially if you're not sure which topics to tackle first! 😵😵😵

⏰ TIMESTAMPS ⏰
**********************************
00:00 - big thank you to Mike for requesting this video! 😀
00:18 - data types and variables
01:25 - methods and operators
02:04 - control flow operations
02:40 - functions
03:03 - classes
03:57 - Numpy, Pandas, Matplotlib
04:31 - advanced Python libraries
05:19 - learning tips and motivation! 💪

📺 TUTORIAL LINKS 📺
**********************************
⭐ For Loops:
      https://youtu.be/dHANJ4l6fwA
⭐ Functions:
      https://youtu.be/aftw0WX4oCc
⭐ Classes and Objects:
      https://youtu.be/f0TrMH9s-VE
⭐ Forest of Objects Code Along - Practice Classes:
      https://youtu.be/-LsuiVGO-88
⭐ Basic Guide to Pandas - All you need to know!:
       https://youtu.be/zN2Hua6oII0
⭐ Ultimate Guide to NumPy Arrays:
      https://youtu.be/lLRBYKwP8GQ
⭐ Ultimate Guide to NumPy Operations:
      https://youtu.be/E1IPJOd7dWQ
⭐ Graphs with Pandas:
      https://youtu.be/P4F3PzCMrtk
⭐ Graphs with Pandas and Matplotlib:
      https://youtu.be/MJ1945J_W0c
⭐ Train Basic Neural Network with Numpy and Pandas ONLY!
      https://youtu.be/xpPX3fBM9dU
⭐ Machine Learning Databases with Pytorch:
      https://youtu.be/8z2oLfK2sIc
⭐ Web Scraping Linkedin with Selenium:
      https://youtu.be/7aIb6iQZkDw
⭐ Web Scraping with Beautiful Soup:
      https://youtu.be/ySNSY7iiBDY
⭐ Simple Greeting App with Kivy:
      https://youtu.be/YDp73WjNISc
⭐ Simple Mobile App with KivyMD:
      https://youtu.be/ah3JeHAfM0M
⭐ Web Application with Flask:
      https://youtu.be/6plVs_ytIH8
⭐ Extract Text from PDF with Tkinter:
      https://youtu.be/itRLRfuL_PQ
⭐ Trivia Game with PyQt5:
      https://youtu.be/9iZLDnW_vwU",,2021-11-15T14:30:18Z,52550,2979,,270,PT6M47S,hd,false
56,MUZtVEDKXsk,Python Simplified,Anaconda Beginners Guide for Linux and Windows - Python Working Environments Tutorial,"In this video, we will talk about the Anaconda toolkit and how we can use it to make our Python journey a bit more convenient.
🐍 We will talk about working environments and how we can create them on our computer.
🐍 We will also install different versions of Python inside these environments and combine them with a few popular packages.
🐍 We will discuss all the must-know conda commands.
🐍 We will install a conde editor named Jupyter Notebook.

The goal of this tutorial is:
a. to show the convenience of working environments.
b. to answer why I'm using conda in most of my videos 😜

🛑 PLEASE NOTE 🛑
*******************************
I didn't mention it in this tutorial - but you can still install Pygame with Python 3.5 (up to 3.5, newer versions will not work with conda!)
You'll just need to figure out which version of Pygame works with your version of Python!
So is Python 2.7 really a requirement? NO! I shouldn't have phrased it that way... but you might run into issues if you go for a later version! I got lots of questions about it and 2.7 seems to work great for everybody!
So if you got the following error:

UnsatisfiableError: The following specifications were found
to be incompatible with the existing python installation in your environment:
Specifications:
  - pygame - python[version='2.7.*3.5.*']
Your python: python=3.9

Just try combining it with an older version of Python and it should do the trick! 😉

⏰Time Stamps ⏰
*******************************
00:00 - Intro to Anaconda Toolkit
00:23 - What is a working environment?
01:52 - Install Anaconda on Linux Ubunbtu 20.4
03:35 - Create conda working environments
04:02 - conda: command not found ERROR FIX
04:52 - conda install Pytorch
05:15 - conda list packages
06:00 - install Pygame
06:56 - conda remove package
07:25 - conda env list
07:47 - conda update package
08:14 - update conda
08:49 - search for install commands
10:18 -  Jupyter Notebook
11:35 - Install Anaconda on Windows
14:20 - thanks for watching!

⭐ Anaconda Cheat Sheet ⭐
*******************************
https://docs.conda.io/projects/conda/en/4.6.0/_downloads/52a95608c49671267e40c689e0bc00ca/conda-cheatsheet.pdf

⭐ Learn more about Jupyter Notebook (old video of mine)⭐
https://youtu.be/jp_3NOKHn9c

⭐ My Simple Video Game with Pygame Tutorial ⭐
https://youtu.be/W-QOtdD3qx4

⭐ My Pytorch Databases Tutorial ⭐
https://youtu.be/8z2oLfK2sIc

⭐ My Web App with Flask Tutorial ⭐
https://youtu.be/6plVs_ytIH8","['conda', 'anaconda', 'anaconda python', 'conda install']",2021-11-09T16:00:12Z,74041,2668,,210,PT14M39S,hd,false
57,aftw0WX4oCc,Python Simplified,Learn Python Functions - Quick Python Project For Beginners,"In this tutorial, we will talk about Python functions and how we can use them to change the text colours in our terminal/console! 
We will begin with an overview of functions and we will finish with a quick (but useful! 💪💪💪) code project!

If you're curious about my IDE - I'm using Wayscript which is now available for the wide public! you no longer need an invitation, you can simply sign up with the following link: https://app.wayscript.com

Complete Code for Random Console Text Colour Generator:
https://github.com/MariyaSha/ChangeConsoleTextColour

⭐ Related Tutorials ⭐

What is RGB and how images can be represented with numbers:
https://youtu.be/mAMTXJJQBDI

Create RGB Images with OpenCV:
https://youtu.be/PtvN8ad9N3g

******************************
⏰ TIME STAMPS ⏰
******************************
00:00 - intro
00:14 - what are functions?
00:41 - Python functions
01:04 - local variables
01:24 - return statement
02:30 - function call
02:47 - function parameters
03:37 - function arguments
04:09 - coding Python functions
05:37 - randomly change console text color
06:09 - RGB color mode
09:24 - function primary goals
09:48 - thanks for watching! 😊

******************************","['python', 'python programming', 'python functions', 'functions', 'def', 'define function', 'parameters', 'arguments', 'python for beginners']",2021-10-30T15:00:02Z,41688,2104,,163,PT10M4S,hd,false
58,8z2oLfK2sIc,Python Simplified,Machine Learning Databases and How to Access them with Pytorch - MNIST Tutorial,"In this tutorial, we will talk about popular Machine Learning databases and how we can easily access them with Pytorch. 🔥🔥🔥
In particular, we will focus on MNIST, which is a handwritten digits database with 70,000 different images. We will load it with a very simple Pytorch command and we will have a closer look at its content, as well as its feature + label structure.
We will also discuss data transforms, why we need them and how do we decide which transforms work better for what kind of data. 

Other computer vision databases we will briefly discuss are CIFAR-10, FashionMNIST and HMDB51. You can find the full list of available databases and transforms at the very bottom of the description ⬇⬇⬇

Have you seen the previous ML tutorial I refer to in this video?
https://youtu.be/i1AqHG4k8mE

New to Google Colab? 
In my following video, I show you how to set it up for the first time:
https://youtu.be/P4F3PzCMrtk

**************************************
⏰Time Stamps ⏰
00:00 - intro
00:23 - load MNIST with Pytorch
02:01 - MNIST features and targets
03:20 - Pytorch Databases
04:14 - data transforms
07:55 - in the next tutorial

**************************************
⭐ IMPORTS ⭐
(starter code for the entire project- not just this video) 
**************************************
import torch
from torch import nn, optim
from torch.utils.data import DataLoader
from torchvision import datasets, transforms, models
from torchvision.transforms import ToTensor, Lambda, Compose
import matplotlib.pyplot as plt

**************************************
⭐ INSTALL DEPENDENCIES ⭐
⭐ ANACONDA - RECOMMENDED! ⭐

conda install -c pytorch pytorch
conda install -c pytorch torchvision

**************************************
⭐ INSTALL DEPENDENCIES ⭐
⭐ PYPI - ONLY IF THERE'S NO OTHER CHOICE! ⭐

pip install torch
pip install torchvision

**************************************
⭐ IMPORTANT LINKS ⭐

🤩 All Available Torchvision Datasets:
https://pytorch.org/vision/stable/datasets.html

🤩 All Available Pytorch Transforms:
https://pytorch.org/vision/stable/transforms.html

🤩 Complete Colab Notebook for loading MNIST, FashionMNIST and CIFAR-10:
https://colab.research.google.com/drive/1SYS4N7b0uknJwk-wFzqHRplzxLCYRIMq?usp=sharing

🤩 Complete Notebook for Next Lesson (Neural Network Training on MNIST Data):
https://colab.research.google.com/drive/1r8lLYD-4KfPsOoFgmQVEPRh3IZMNX7Nc?usp=sharing

* Please keep in mind that the next lessons notebook doesn't include testing and validation!!
**************************************

🔊 My apologies for the sound quality 🔊 
I'm trying different recording solutions and this one is definitely NOT THE ONE! 😅

😍 Beautiful Icons used in this video and thumbnail are by: flaticon.com 😍","['pytorch', 'torchvision', 'tourchvision', 'pytourch']",2021-10-24T15:00:11Z,16771,753,,131,PT8M23S,hd,true
59,jModaLYQ9w8,Python Simplified,"Lights, Camera... Action? 🤔",,,2021-10-22T16:17:50Z,6156,189,,21,PT9S,hd,false
60,HILN1eau84M,Python Simplified,HOW and SINCE WHEN my computer has these powers?? is this CUDA magic?,,,2021-10-20T14:00:10Z,10973,363,,70,PT34S,hd,false
61,i1AqHG4k8mE,Python Simplified,Neural Network Simply Explained - ML for Beginners,"In this video, we will talk about neural networks and some of their basic components! 🧠🧠🧠
Neural Networks are machine learning algorithms (sets of instructions) that we use to solve problems that traditional computer programs can barely handle! 🤯
For example Face Recognition, Object Detection and Image Classification.
We will take a very close look inside a typical classifier neural network and we will follow an input image from start to finish. The concepts we will cover are: NN, labels, computer vision, weights, hidden layers, training, narrow AI.

Have fun!!! and please don't forget to share if you find it useful! 💙💛💙

*************************
🤓 Further Learning  🤓
*************************
How Computers See Images: https://youtu.be/mAMTXJJQBDI
Draw Images with Open CV: https://youtu.be/PtvN8ad9N3g
Supervised Learning and more: https://youtu.be/mMc_PIemSnU

*************************
⏳ Timestamps ⏳
*************************
00:00 - What is a Neural Network
00:55 - How Computers See Images
02:20 - What is a Label
02:44 - Hidden Layers
03:48 - Training
04:10 - Weights
04:42 - Optimization
05:27 - Narrow AI
06:03 - Input Data
06:18 - Thanks for Watching!
*************************

IN THE NEXT TUTORIAL:
We will learn how to use Pytorch to train neural networks on popular computer vision databases!
We will implement with Python all the concepts we have learned in this video and it's gonna be really really fun! I promise!! 😊

All the beautiful icons in this video and thumbnail are by freepik.com and flaticon.com! 🤩","['ml', 'ai', 'machine learning', 'artificial intenligence', 'artificial inteligence', 'artificail intelligence']",2021-10-16T15:00:10Z,21642,1357,,164,PT6M38S,hd,true
62,OgFmBhucQNM,Python Simplified,What Happened to My Instagram Account?? Vlog #3,"Hi everyone! 
Some of you were asking if I'm still on Instagram and I definitely owe you an explanation! So in this vlog, we will talk about my account and why it's inactive.
Also, I'm starting to prepare for live lessons where I can help with all your Python-related inquiries on the spot! (at least, I hope I can 😅 hahahaha)
I only went live once and it was on We Are Growth Hackers on YouTube, you can check out this webinar at the link below:
https://youtu.be/XnEgVZsZgco

Please let me know in the comments below if you agree with me regarding Instagram's new functionality/content/policies - I'm not sure if I'm overreacting or if things are indeed as bad as I imagine - your feedback is highly appreciated! 😵😵😵  
I will see you guys very soon in a new ML tutorial! Thanks for watching! 😀",,2021-10-13T15:00:11Z,8455,538,,141,PT5M49S,hd,false
63,m1Fjdnj_Mds,Python Simplified,Recursion Simply Explained with Code Examples - Python for Beginners,"In this tutorial, we will talk about recursion and how we can use it to divide and conquer! 💪💪💪
We will also see which is faster - recursive functions or for loops?? we will compare between the two by recreating the Fibonacci Sequence and running a speed test!

⭐Complete Tutorial Code:⭐
https://wayscript.com/script/aiTg-SoJ

Have you already seen my recursion tutorial?? 😜
https://youtu.be/m1Fjdnj_Mds
(I've embraced pvics' joke from the recent community post 😉 hahaha)

***************************
⏰ TIME STAMPS ⏰
***************************
00:00 - Intro
00:15 - What is Recursion
01:03 - Python Recursive Function Code Example
02:43 - Fibonacci Sequence 
03:49 - Fibonacci Recursion Code Example
05:21 - Fibonacci Iteration Code Example
06:56 - Is Python Recursion Faster than Iteration?
08:25 - Divide and Conquer 
08:48 - Thanks for Watching!
***************************

⭐ My For Loops Tutorial⭐
https://youtu.be/dHANJ4l6fwA

⭐ My Classes and OOP Tutorial⭐
https://youtu.be/f0TrMH9s-VE","['fibonacci', 'fibonachi', 'fibbonachi', 'fibbonacci', 'recursion', 'python recursion', 'recursive functions', 'recurssive', 'recurssive functions']",2021-10-05T15:00:09Z,58900,2587,,220,PT9M7S,hd,true
64,NiQdsK3H57Y,Python Simplified,Simple Calculator with Anvil - Python Web App Tutorial for Beginners,"In this tutorial, we will create a Simple Calculator GUI Web Application with Anvil 🤩🤩
You can sign up for a free account here: https://anvil.works/pythonsimplified

This is the second episode of ""The Battle of the App Frameworks"" where we focus on pure Python web applications! 🐍🐍🐍 
And what do I mean by ""pure Python""?? 
NO HTML! 😱 NO CSS! 😱 NO JAVASCRIPT! 😱😱😱
We will ONLY use PYTHON to create our web app! 😍

We will design our calculator both with a drag-and-drop tool as well as with code and we will of course publish/deploy our application to the web, this time - directly from Anvil! No need to use Heroku or other third parties! 😎

🛑HAVE YOU WATCHED MY CLASS TUTORIALS? 🛑
1. OOP and Classes:
https://youtu.be/f0TrMH9s-VE
2. Draw a forest of classes and objects:
https://youtu.be/-LsuiVGO-88

⏰ TIME STAMPS ⏰
**************************************
00:00 - intro
00:42 - create a blank web page with Anvil
01:24 - image component
02:06 - set background colour
02:20 - textbox component
03:27 - button components
05:29 - grid panel
07:47 - button callback
11:08 - eval function
13:14 - style buttons
18:13 - publish app
19:00 - thanks for watching!
**************************************

⚡Battle of the App Frameworks - Episode 1 - Flask ⚡:
https://youtu.be/6plVs_ytIH8

👋 Create a ""Hello World"" App with Anvil:
https://youtu.be/t_cF3Wr1g3A

**************************************
Thank you for watching!
See you soon in another tutorial! 😁","['anvil', 'python gui', 'gui', 'ui', 'graphic user interface', 'user interface', 'python user interface', 'python web app', 'web framework', 'python web framework']",2021-09-28T15:00:12Z,31513,1234,,146,PT19M19S,hd,false
65,6plVs_ytIH8,Python Simplified,Simple Web App with Flask and Heroku - Python GUI for Beginners,"In this tutorial, I will show you how to create a Web Application with Flask!
This video the also the first episode of The Battle of the App Frameworks, where 🤩🤩 YOU GET TO CHOOSE THE WINNER! 🤩🤩

Today we will create a simple ""Hello World"" Application with Flask, which includes:
* an HTML template containing the structure of a web page
* a CSS stylesheet containing design instructions
* a Python backend that communicates with a web server
And we will also 🚀DEPLOY🚀 this application for free with Heroku!  😁

This tutorial covers all the basics of Flask, from start to finish! (excluding Javascript interactions, which we will leave for later 😜)

⏰ TIME STAMPS ⏰
00:00 - Battle of the App Frameworks
00:25 - Flask Overview
01:17 - Flask Directory Structure
01:52 - HTML Structure
06:52 - Python Backend
09:31 - Warning: this is a development server ⛳
09:42 - Message Flashing
11:04 - A secret key is required
13:38 - CSS Styling
18:05 - CSS doesn't update - Clear Cache!
20:14 - Procfile and Requirements
22:42 - Deploy Flask App with Heroku
24:43 - Thanks for watching! :)

*********************************
🐍 IMPORTANT NOTES/LINKS 🐍

Install Flask 🌶
* Anaconda:  conda install -c anaconda flask
* PyPI:  pip install flask

Install Green Unicorn 🦄
$ pip install gunicorn

Change Production Server to Development Server: ⛳
$ export FLASK_APP=sayHello
$ export FLASK_ENV=development
$ flask run

Complete project on Github:
https://github.com/MariyaSha/greetingApp_FLASK

Link to logo from my Kivy App:
https://github.com/MariyaSha/SimpleGreetingApp/blob/main/logo.png

Beautiful icons are by:
https://www.freepik.com/
https://www.flaticon.com/","['flask', 'gui', 'ui', 'python programming', 'python gui', 'python ui', 'python flask', 'flask gui']",2021-09-25T15:00:33Z,123572,3984,,269,PT25M7S,hd,false
66,-LsuiVGO-88,Python Simplified,Draw a Forest of Random Tree Objects with Python OpenCV - Classes and OOP Practice for Beginners,"In this tutorial, we will practice the principles of Object-Oriented Programming and draw a forest of unique tree objects.
We will first create a Tree class and then we will replicate it in different locations, sizes and colours. We will also include a very large degree of randomness in our code, so that each time our program runs - a brand new forest with brand new trees is created! 🤩🤩🤩

🛑🤚 HAVE YOU WATCHED ✋🛑
*******************************************
1. My OOP and Classes Tutorial:
https://youtu.be/f0TrMH9s-VE

2. My Draw Shapes with OpenCV Tutorial:
https://youtu.be/PtvN8ad9N3g
*******************************************

⏰ TIMESTAMPS ⏰
00:00 - intro
00:16 - starter code overview
01:01 - create a class
01:22 - class attributes
02:07 - class methods
03:40 - call class
05:40 - relative coordinates
06:22 - draw object
09:04 - scale object
13:35 - fancy design tricks
14:40 - draw step repeat objects
16:04 - draw objects at random location
19:47 - draw with random colors
24:14 - coming soon and thank you!

🐍 STARTER CODE 🐍
************************************************
import numpy as np
import cv2 as cv
import random

# general parameters
width = 900
height = 600
n_trees = 30
ground_level = height-100

# colours
green, light_green, brown = (40,185,40),(25,220,0),(30,65,155)

# blank image
bg = np.zeros((height, width, 3), dtype=np.uint8)

# draw background
cv.rectangle(bg,(width,0), (0, ground_level), (255,225,95), -1)
cv.rectangle(bg,(width, ground_level), (0, height), green, -1)

# ***************
# YOUR CODE GOES HERE
# ***************

#display image
cv.imshow('forest of objects', bg) 

cv.waitKey(0)
cv.destroyAllWindows()
************************************************
 🐍 END OF STARTER CODE 🐍

Didn't feel like coding along? 🙃
Get the complete code from my Github: https://github.com/MariyaSha/OpenCV_DrawImages/blob/main/completeCode_OpenCVForest.ipynb

Thanks for watching!
Find me on:
LinkedIn - https://linkedin.com/in/mariyasha888/
Discord -  https://discord.gg/WeTz5A2FfS","['openCV', 'open cv', 'cv2', 'cv']",2021-09-06T15:00:13Z,26103,964,,98,PT24M36S,hd,false
67,igi1dhgOszo,Python Simplified,a sneak peek into the upcoming OOP with OpenCV tutorial!,,,2021-09-03T21:58:36Z,21168,1031,,68,PT33S,hd,false
68,PtvN8ad9N3g,Python Simplified,Draw with OpenCV - No more Photoshop! Graphic Design with Python!,"In this tutorial, you'll find out how to draw basic shapes with OpenCV - which is a very popular computer vision library, not only for Python!  🔴🟢🔵
We will create a drawing of some trees on a sunny background, we will add some text and we will save it as a ""png"" file to our computer.

⭐ Image Into Matrix - Convert Like a Pro!! ⭐
https://youtu.be/mAMTXJJQBDI

*******************************
Want to learn more about ⭐Computer Vision?⭐

🎥 Stream Videos with OpenCV 🎥
 https://youtu.be/UdCSiZR8xYY

😴 Image Processing with Pillow 😴
https://youtu.be/NSHsaG2a4WU

Also, if you don't feel like coding along, you can still access my script:
https://github.com/MariyaSha/OpenCV_DrawImages

*******************************
⏰ timestamps ⏰
*******************************
00:00 - Intro
00:26 - import OpenCV / import cv2
00:41 - image data type overview
01:06 - create blank image with Numpy / np.zeros()
02:30 - show image with OpenCV
02:50 - cv.waitKey(0)
03:16 - cv.destroyAllWindows
04:01 - draw rectangle with OpenCV
05:24 - fill rectangle with OpenCV
06:19 - draw circle with OpenCV
07:11 - outline line thickness with OpenCV
07:46 - draw line with OpenCV
08:50 - draw triangle with OpenCV and Numpy
10:36 - write text with OpenCV
12:32 - repetition with classes (coming soon)
13:17 - save image with OpenCV / imwrite
13:56 - thanks for watching!

*******************************
See you in the next tutorial, where we will create an entire forest of tree objects!
Thanks for watching ♥","['opencv', 'open cv', 'cv2', 'cv']",2021-08-26T16:15:12Z,21428,1100,,131,PT14M23S,hd,false
69,xpPX3fBM9dU,Python Simplified,Train Basic Neural Network with Numpy and Pandas - AI programming for beginners,"Today we will create and train a basic artificial neural network using Numpy and Pandas ONLY! 🤖
We will practice the code (and the math 😅) behind all the ML concepts we have learned on this channel, so we can fully understand what we're doing!
We will break down the training algorithm into Python functions and work with random data, which we will generate within seconds! 
For this code along, please make sure you watched the 🛑previous tutorials🛑:

ML Episode 1 - Perceptron 🤖:
https://youtu.be/-KLnurhX-Pg

ML Episode 2 - Cross Entropy Loss 🤖:
https://youtu.be/EJRFP3WmS6Q

ML Episode 3 - Gradient Descent 🤖:
https://youtu.be/jwStsp8JUPU

**********************************
👾 Clone the complete code from Wayscript: 👾
https://wayscript.com/script/2OiJ6e7-

**********************************
📈📊 Plotting Graphs Tutorials: 📊📈
With Wayscript: https://youtu.be/2g-hdk2wwvU
With Google Colab: https://youtu.be/P4F3PzCMrtk

**********************************
⭐ SKIP TO TIMESTAMP ⭐ 
00:00 - Intro
00:41 - Import Numpy and Pandas
00:58 - Generate Random Data with Numpy
04:06 - Random Choices with Numpy
05:03 - Create a Pandas Data Frame
06:36 - Create functions.py File
07:59 - Weighted Sum Function
09:55 - Select DataFrame Row
10:48 - Remove DataFrame Column
11:52 - Sigmoid Activation Function
12:54 - Cross Entropy / Log Loss Function
14:08 - Gradient Descent: Update Weights
15:46 - Gradient Descent: Update Bias
18:04 - Training Function for Basic Artificial Neural Network
21:45 - Plot Training Data
22:22 - Analyze Training Data","['ml', 'ai', 'machine learning', 'artificial intelligence', 'neural network', 'artificial neural network', 'train neural network', 'training function', 'train ai', 'train ml', 'ml training', 'ai for beginners', 'ml for beginners', 'basic neural network', 'python ai', 'python', 'python programming', 'wayscript', 'data science', 'plot training loss', 'cross entropy loss', 'sigmoid', 'prediction', 'target', 'update weights', 'update bias', 'gradient descent', 'gradient descent programming', 'gradient descent alrogithm', 'learn ai', 'learn ml']",2021-08-20T15:00:18Z,27068,1220,,148,PT24M41S,hd,false
70,rZJ2Z7SxU6c,Python Simplified,Please help a fellow viewer with her Kivy Android App! her project is almost due! 😱 #Shorts,,,2021-08-13T15:19:43Z,11699,546,,57,PT25S,hd,false
71,jwStsp8JUPU,Python Simplified,Gradient Descent - Simply Explained! ML for beginners with Code Example!,"In this video, we will talk about Gradient Descent and how we can use it to update the weights and bias of our AI model. We will learn how to minimize the average loss of our model, and get a warm introduction to ""epochs"" and ""learning rate""!
We will of course also see a working example of the math behind Gradient Descent, and learn how to implement it with code by using our superior Python skills! 🐍🐍🐍
Before we dive in, make sure you are proficient with the previous topics of my AI series - Perceptron, Weights, Input, Weighted Sum, Target, Prediction, Activation Function, Loss Function & Cross-Entropy Loss.
If you are 🆕 new 🆕 to these concepts, please watch my other tutorials first (links below):

🛑✋ HAVE YOU WATCHED? ✋🛑

⭐ My Cross-Entropy Loss Tutorial ⭐:
https://youtu.be/EJRFP3WmS6Q

⭐ My Perceptron Tutorial ⭐:
https://youtu.be/-KLnurhX-Pg

⭐ My Introduction to ML Tutorial ⭐
https://youtu.be/mMc_PIemSnU

*****************************************
⭐ time stamps ⭐
*****************************************
00:00 - what is gradient descent?
00:37 - gradient descent vs perception
01:04 - sigmoid activation function
01:45 - bias and threshold
02:06 - weighted sum - working example
02:37 - sigmoid - working example
03:03 - loss function - working example
03:32 - how to update weights
04:17 - what is learn rate?
05:06 - how to update bias
05:37 - gradient descent - working example
07:13 - what is epoch?
07:38 - average loss per epoch
08:37 - gradient descent code example
12:13 - thank you for watching! stay in touch!

*****************************************
👩‍💻 Clone Exercise - Starter Code:
https://wayscript.com/script/tIAFNG83

👩‍💻 Clone Exercise - Complete Code:
https://wayscript.com/script/30CTn-nR
*****************************************

All the beautiful icons used in the video are by: freepik.com
Thank you! 🤩","['ml', 'machine learning', 'gradient descent', 'update weights', 'update bias', 'artificial intelligence', 'python', 'python programming', 'python ml', 'python ai', 'python artificial intelligence', 'neural network', 'python tutorial', 'perceptron', 'cross entropy loss', 'loss function', 'error function', 'ml prediction', 'ai prediction', 'ai for beginners', 'ml for beginners', 'simple gradient descent', 'weights', 'bias', 'epoch', 'epochs', 'loss over epochs', 'average loss', 'training loss', 'mean', 'log loss', 'log loss function']",2021-08-09T16:00:13Z,22420,892,,144,PT12M35S,hd,false
72,VsTaM057rdc,Python Simplified,Convert Python to Android with WINDOWS & LINUX + Fix Common Bugs,"In this tutorial, I will show you how to convert your Python projects into Android applications - USING WINDOWS! 😎
We will Create a Windows Subsystem for Linux (WSL), Learn about Android's Debug Bridge (adb) and use Buildozer to compile our .py files into .apk.
By the way, I'm extra annoying in this video so my apologies in advance! 🤪 I've detected a few crazy cat lady moments while editing... I don't know why I was shouting at the keyboard 😅

ANYHOW... For this project, we will first need to learn about 🥝Kivy or KivyMD🥝, which are Python GUI libraries that are responsible for the interface of the app.
🛑 If you're not yet familiar with Kivy or KivyMD - check out any of my quick tutorials:

⭐ Mobile App with KivyMD ⭐
https://youtu.be/ah3JeHAfM0M

⭐ Expand Mobile App with KivyMD ⭐
https://youtu.be/2aRBkAA1_9o

⭐ Simple App with Kivy ⭐
https://youtu.be/YDp73WjNISc

⭐ EXTRA: Python Classes and OOP ⭐
https://youtu.be/f0TrMH9s-VE
(will help with understanding the App Class)

*********************************************
⏰ Time Stamps: ⏰
00:00 - intro
00:30 - Install Windows Subsystem for Linux (WSL)
05:14 - Install Buildozer and Dependencies
06:52 - Android Debug Bridge (adb)
09:53 - Developer Options on Android Device
10:38 - buildozer.spec requirements
12:06 - Start Windows adb server
12:44 - Operation not permitted FIX
13:34 - Convert Python to Android
15:45 - Icons not displayed on Android FIX
18:05 - Thanks for watching! see you soon! 😊

*********************************************
Special thank you to Delphi Niki and WinTush 
for sharing your code with me on Github! 😁
*********************************************

My Github:
https://github.com/MariyaSha

Windows Subsystem Docs:
https://docs.microsoft.com/en-us/windows/wsl/install-win10

Android Platform Tools:
https://developer.android.com/studio/releases/platform-tools#downloads

Buildozer Documentation:
https://buildozer.readthedocs.io/en/latest/installation.html

Icons Not Displaying Issue on Github:
https://github.com/kivymd/KivyMD/issues/257","['python for android', 'python programming', 'python to android', 'py to apk', 'kivy tro android', 'kivy', 'kivymd', 'gui', 'python gui', 'convert python to android', 'convert py to apk', 'mobile app', 'android app', 'apk', 'adb', 'wsl', 'windows subsystem for Linux', 'Android Debug Bridge', 'adb for windows', 'adb server', 'buildozer', 'kivy buildozer', 'buildozer windows', 'buildozer wsl', 'ubuntu wsl', 'python tutorial', 'python on phone', 'python on mobile', 'python mobile app', 'python android app', 'p4a', 'kivy gui', 'kivymd app', 'compile']",2021-08-05T15:30:12Z,119292,3719,,369,PT18M59S,hd,false
73,itF6jr7IiUw,Python Simplified,Re-Uploaded: It's ALIVE!!! Our KivyMD GUI Base Converter App is running on Android like a boss!,"Compiled on a Windows 10 machine with Ubuntu's WSL and ADB connection 🤩
Running on Sansung S20+ without any issues!
Filming this tutorial on Tuesday and hopefully will Premiere it on Wednesday ‎@Python Simplified  😎😎😎
See you guys soon! I'm having a long weekend  as it's BC day here tomorrow 🍁 but back to work right after, I hope you didn't miss me much 😉

Also a special thanks to everybody who helped with debugging, I will definitley mention you guys in the upcoming video! 😃

Enjoy the rest of your weekend! ❤

#python #pythonprogramming #gui #ui #kivy #kivymd #android #graphicuserinterface #userinterface #widgets #pythongui",,2021-08-01T20:51:25Z,4370,180,,69,PT30S,hd,false
74,lM7jWaTg7cE,Python Simplified,Great news everybody!!! Compiling Kivy .py files into .apk is doable even on a Windows machine!! 🥳🥳🥳,,,2021-07-30T00:20:27Z,20123,956,,124,PT30S,hd,false
75,2aRBkAA1_9o,Python Simplified,Expand KivyMD GUI App - Convert Binary Fractions with Python - PART 2,"In this tutorial, we will expand our KivyMD Mobile App to convert bases of floating-point numbers and handle exceptions. We will first focus on the conversion algorithm (set of instructions) and implement it with a conditional statement.
We will then combine this algorithm in our Base Converted Mobile App which we started building in part 1 of this project:

⭐ PART 1 - KivyMD Mobile App ⭐
https://youtu.be/ah3JeHAfM0M

⭐ PART 3 - Convert Python App to Android .apk ⭐
https://youtu.be/VsTaM057rdc

If you'd like to hear a detailed explanation about the 🤓 math 🤓 behind the conversion, check out my other tutorial:
⭐ Convert Binary to Decimal - Math Tutorial ⭐
https://youtu.be/4IFq7_s9NEA

Also featuring an Editing Oopsie at - 14:38 - 14:41 🤪
My colour correction got out of control!!! 🤣🤣🤣

*************************************************
⏰ Time Stamps ⏰
00:00 - intro
00:55 - convert binary fractions to decimal with Python
05:01 - convert decimal fractions to binary with Python
10:07 - combine conversion algorithm with KivyMD Mobile App
13:40 - handle Value Error exceptions 
15:47 - thanks for watching! and what's next...

 🐍 Special Functions and Methods 🐍
01:25 - split method
02:56 - enumerate function
06:07 - bin function
03:30 - slicing strings
09:04 - join method
13:56 - try / except statement
*************************************************
Thanks for Watching! 🤩🤩🤩","['gui', 'python gui', 'python ui', 'ui', 'ui app', 'gui app', 'kivy', 'KivyMD', 'KivyMD tutorial', 'python programming', 'python tutorial', 'binary to decimal', 'python binary to decimal', 'convert number base', 'KivyMD app', 'python mobile app', 'mobile app', 'mobile gui', 'android python app', 'android KivyMD', 'android kivy', 'mobile kivy', 'mobile app tutorial', 'create mobile app', 'python android app', 'python program', 'kivy md', 'graphic user interface', 'enumerate python', 'join python', 'split python', 'enumerate', 'fractions']",2021-07-28T15:30:13Z,8648,365,,97,PT16M4S,hd,false
76,4IFq7_s9NEA,Python Simplified,Binary to Decimal - Convert Numbers and Fractions Like a Pro!,"In this tutorial, we will go over a very important computer science concept - number base conversion!
And more particularly - converting binary numbers to decimals and vice versa! 🤓
We will learn how to convert both whole numbers and fractions, with almost zero effort!

⭐ Timestamps ⭐
**********************************
00:00 - Intro
00:09 - Decimal System Overview
01:11 - Binary System Overview
01:36 - Convert Binary to Decimal
02:33 - Convert Decimal to Binary
04:16 - Convert Decimal Fraction to Binary
06:47 - Convert Binary Fraction to Decimal
07:55 - Thanks for watching!

****************************************************
⭐ My Base Converter Simple GUI App Tutorial ⭐
https://youtu.be/ah3JeHAfM0M

****************************************************
Thank you for watching! 😁
And a special thank you to Videezy for the beautiful Stock Video ♥
https://www.videezy.com","['binary', 'decimal', 'base 10', 'base 2', 'base conversion', 'convert bases', 'number base', 'number bases', 'binary system', 'decimal system', 'binary to decimal', 'decimal to binary', 'base2 to base 10', 'convert floating point numbers', 'convert fractions', 'binary fractions', 'binary floating point numbers', 'binary fraction', 'decimal float', 'binary float', 'convert floating point', 'math', 'math tutorial', 'computational math', 'programming', 'programming math', 'number systems', 'mathematics', 'computer science', 'cs math']",2021-07-27T14:30:12Z,7490,520,,105,PT8M35S,hd,false
77,f0TrMH9s-VE,Python Simplified,Python Classes and Objects - OOP for Beginners,"In this tutorial, we will learn about Python Classes & Objects in great detail!
I've been promising this for a while now, but we're finally diving into Object-Oriented Programming!
In Python, almost everything is an object! (including lists, strings, integers, dictionaries and etc.)
With classes can create new kinds of objects and define their own methods and attributes.
Where attributes represent data about the object such as: name, colour, speed, size. And methods represent functionality or tasks associated with the objects, such as: drawing the object to the screen, changing its speed or size.
After you watch this - you'll be much more comfortable with using classes in your GUI projects 💪
So if you're ready to step up your programming game - this video is a great starting point! 😉

🛑 RELATED TUTORIALS 🛑
**********************************
⭐ Super Init, Class Inheritance and Private Class Members:
      https://youtu.be/6c6NYPjO_rI

⭐ Practice everything you've learned in this video in my Forest of Objects code along:
      https://youtu.be/-LsuiVGO-88

⌚ Time Stamps ⌚
***********************
00:00 - Python Objects
00:32 - Attributes
01:44 - Parameters
02:20 - Methods
03:35 - Local Variables
04:37 - Init Method
05:25 - Self Parameter
06:08 - JavaScript Constructor
06:17 - Object-Oriented Programming (OOP)
06:42 - Terminology 
07:14 - Up Next & Thank You 
07:55 - Connect with Me

*************************
🐍 My Python Installation Tutorial 🐍
https://youtu.be/FZ5baopI_mo

➰ My Python For Loops Tutorial ➰
https://youtu.be/dHANJ4l6fwA

*************************
The beautiful icons used in this video are from:
https://www.flaticon.com/
Thank you! 😀","['classes', 'class', 'python class', 'object', 'object oriented programming', 'object oriented', 'oop', 'methods', 'method', 'attribute', 'attributes', 'objects', 'python objects', 'python methods', 'python attributes', 'class tutorial', 'python', 'python programming', 'programming', 'coding', 'programming class', 'object class', 'constructor', 'constructor function', 'python constructor', 'learn programming', 'oop tutorial', 'oop lesson', 'oop for beginners', 'python for beginners', 'methods vs functions', 'self', 'this', 'self parameter', 'self keyword']",2021-07-16T15:00:12Z,217328,9465,,699,PT8M1S,hd,false
78,ah3JeHAfM0M,Python Simplified,Mobile App with KivyMD - Python GUI for Android - Binary to Decimal Converter,"In this step by step tutorial, we will create a Binary to Decimal / Decimal to Binary converter app - with the help of Python and KivyMD 🥝🥝🥝
This tutorial is a bit more advanced than the rest as it involves classes, but don't worry - I will post a tutorial about classes shortly! so if there's anything you didn't understand, you'll get a proper detailed and simplified explanation very soon  😉

🥝 Part 2 - Fraction Conversion & Exceptions Tutorial 🥝:
https://youtu.be/2aRBkAA1_9o

🥝 PART 3 - Convert Python App to Android .apk 🥝
https://youtu.be/VsTaM057rdc

You also might find these tutorials helpful:

My Binary to Decimal Math Tutorial:
https://youtu.be/4IFq7_s9NEA

My Python Classes & Objects Tutorial:
https://youtu.be/f0TrMH9s-VE

⭐ time stamps: ⭐
*******************************************
00:00 - intro
00:38 - MD toolbar Widget
00:23 - Icon button for MD toolbar
03:47 - View the full list of icons
04:18 - Image Widget
05:25 - Text Input Widget (MD Text Field)
07:21 - MD Label Widget
09:15 - MD Button with ROUNDED CORNERS
10:29 - Convert Binary to Decimal
13:43 - Conversion Flip and State
16:20 - Convert Decimal to Binary
18:38 - Change KivyMD Theme
20:21 - What's left to do?
21:37 - Thanks for watching! 😀

PLEASE NOTE:
Both flip() and convert() can be done in fewer lines of code!
Check out the complete app on Github (link below) to see the shorter version

⭐ starter code: ⭐
*******************************************
from kivymd.uix.screen import MDScreen
from kivymd.app import MDApp
from kivy.uix.image import Image
from kivymd.uix.button import MDFillRoundFlatIconButton, MDFillRoundFlatButton
from kivymd.uix.textfield import MDTextField
from kivymd.uix.label import MDLabel
from kivymd.uix.toolbar import MDToolbar

class ConverterApp(MDApp):
    def build(self):
        screen = MDScreen()
        #UI Widgets go here
        return screen

if __name__ == '__main__':
    ConverterApp().run()
*******************************************

Github Repository:
https://github.com/MariyaSha/BinarytoDecimal

All available KivyMD icons:
https://kivymd.readthedocs.io/en/latest/themes/icon-definitions/index.html

Thank you so much for watching! 🤩

Beautiful Kiwis in the background are from:
freepik.com","['gui', 'python gui', 'python ui', 'ui', 'ui app', 'gui app', 'kivy', 'KivyMD', 'KivyMD tutorial', 'python programming', 'python tutorial', 'binary to decimal', 'python binary to decimal', 'python int', 'python bin', 'number base converter', 'KivyMD app', 'python mobile app', 'mobile app', 'mobile ui', 'mobile gui', 'android python app', 'android KivyMD', 'android kivy', 'mobile kivy', 'mobile app tutorial', 'create mobile app', 'python android app', 'python program', 'kivy md', 'user interface', 'ui widgets', 'graphic user interface']",2021-07-12T16:00:13Z,57882,2207,,227,PT22M15S,hd,false
79,wo7LGYAPdvE,Python Simplified,"Updates, Tips for YouTube Beginners and Other Viewer Questions - Vlog #3","I had a very busy week finalizing 2 midterm projects, so instead of a Python video - here's a vlog! 😜
We'll talk about the upcoming KivyMD project and I will answer some ❓frequently asked viewer questions❓:

1. 02:34 - Where are you originally from?
2. 02:56 - What software are you using for editing?
3. 04:07 - Why don't you try singing?
4. 05:20 - How your channel grew that fast?

If you have any other unrelated to Python questions - please leave them in the comments below and I'll answer them in the next vlog 😉","['tips for youtube', 'youtube tips', 'vlog', 'python project', 'viewer questions', 'answering viewer questions', 'blog', 'frequently asked questions', 'faq', 'editing software', 'singing', 'about me', 'grow youtube audience', 'grow audience', 'adobe creative cloud', 'adobe premiere', 'video editing software', 'nationality', 'Mariya Sha', 'video blog', 'channel updated', 'upcoming projects']",2021-07-06T14:30:14Z,9543,513,,112,PT9M42S,hd,false
80,EJRFP3WmS6Q,Python Simplified,Cross Entropy Loss Error Function - ML for beginners!,"In this lesson we will simplify the binary Log Loss/Cross Entropy Error Function and break it down to the very basic details.
I'll show you all kinds of illustrated and fun examples and even implement everything with code! 🤩
Before you watch this tutorial 🛑please make sure you watch the first episode in this series🛑 where we discuss the Perceptron model:
https://youtu.be/-KLnurhX-Pg

⭐ Clone the complete code via Wayscript ⭐
https://wayscript.com/script/Vr5xqHfR

⭐ Clone the Perceptron code from the previous episode⭐
https://wayscript.com/script/VlHE0uL8

🤖 Watch my Introduction to AI & Machine Learning 🤖
https://youtu.be/mMc_PIemSnU

➰ Watch my Python ""For"" loop tutorial ➰
https://youtu.be/dHANJ4l6fwA

****************************
⏰ TIMESTAMPS ⏰
****************************
00:00 - Perceptron Recap
00:33 - Target vs Prediction
01:16 - Error Function
01:52 - Cross Entropy Loss / Log Loss Data Preprocessing
03:19 - Cross Entropy Loss on a single data entry
04:31 - Cross Entropy Loss Properties
05:19 - Cross Entropy Loss on all data entries
06:17 - Coding Cross Entropy Loss with Python
****************************

Sorry guys, no subtitles this time as they would cover substantial parts of the graphics 😥

The beautiful icons used in this video are by:
https://www.flaticon.com
https://www.freepik.com

Thank you so much for watching! ❤","['machine learning', 'artificial intelligence', 'ai', 'ml', 'python', 'cross entropy', 'cross entropy loss', 'log loss', 'error term', 'error function', 'binary', 'binary cross entropy', 'binary log loss', 'math', 'python programming', 'python tutorial', 'python machine learning', 'statistics', 'mean', 'weights', 'input', 'data science', 'mathematics', 'machine learning for beginners', 'artificial intelligence for beginners', 'perceptron', 'logarithm', 'loss function', 'cost function', 'cost', 'label', 'prediction', 'target', 'y hat', ""y'"", 'ai for beginners']",2021-06-25T16:00:12Z,19932,900,,129,PT11M15S,hd,false
81,dHANJ4l6fwA,Python Simplified,Python For Loops - Programming for Beginners,"A For loop statement is a basic control flow tool in Python.
In this tutorial I will show you how and why we use them in our code (hint: saves lots of time! ⌚) 
We will look at a few code examples of different use cases, and we will also utilize our new knowledge of For loops by recreating lyrics of famous songs! 🎵🎵🎵

Please note, I'll be uploading new Python Basics videos by order of importance rather than a learning sequence.
I'll be organizing the videos in a special playlist and will fill in the blanks as we go 😉

If you want to see my first few Python Basics lessons (I've filmed them a very long time ago so you may notice some differences 😅)

Python Variables and Data Types :
https://youtu.be/xUhPxj8if0U

Naming Python Variables:
https://youtu.be/3YUfWCjCcko

Coding Software:
https://youtu.be/jp_3NOKHn9c

⭐ TIMESTAMPS ⭐
*******************************
00:00 - What is a For loop?
00:14 - Why use For loops?
00:42 - For Loop Syntax
02:11 - Iteration Example
03:16 - Repetition and Range
03:55 - Repetition Example
04:42 - Thanks for watching!
*******************************

In the iteration code example, I cited:
Bootylicious, Destiny's Child, Survivor, Columbia, 2001

In the repetition code example, I cited:
Smells Like Teen Spirit, Nirvana, Nevermind, DGC, 1991

A huge thank you to flat icon for the lovely icons in the slides:
https://www.flaticon.com/

Big thank you to freepik for the loop vector on the thumbnail:
https://www.freepik.com/free-vector/circular-swirls-set_9649224.htm","['python', 'python programming', 'python for beginners', 'pythin basics', 'python baisc', 'python for loop', 'for loop', 'for loop statement', 'programming', 'coding', 'python coding', 'learn python', 'python course', 'loop', 'iteration variable', 'control flow', 'control instruction', 'loop control', 'loop control variable', 'indentation', 'indent', 'iteration', 'repetition', 'python repetition', 'list iteration', 'code example', 'code lesson']",2021-06-14T16:00:12Z,58232,3219,,372,PT5M19S,hd,true
82,UdCSiZR8xYY,Python Simplified,Stream Live Video from Mobile Phone Camera with Python and Open CV,"In this step by step tutorial I'll show you how to steam live video feed from your mobile phone camera - straight into your Python code.
For this we will use an Android app named ""Ip Webcam"", and we will combine it with the most popular computer vision library - open CV!
I will show you how to access your camera feed on your computer and how to display it in your Python file.
You will also learn a few basic transformations to videos, in case you'd like to manipulate the filters and general appearance of your stream.

Keep in mind that we will use this incredible functionality in our upcoming 🥝 KivyMD GUI Mobile project 🥝 so please pay extra attention to the first few steps! 😉

⭐ TIME STAMPS ⭐
00:00 - introduction
00:14 - install Ip Webcam
00:32 - render live camera feed in browser
01:13 - broadcast live mobile camera feed with Open CV
04:46 - convert video to greyscale
05:31 - mirror/flip video horizontally
06:25 - thanks for watching!

📜 OpenCV Documentation (Python): 📜
https://docs.opencv.org/master/d6/d00/tutorial_py_root.html

🧐 My Image Processing with Pillow (PIL) Tutorial 🧐
https://youtu.be/NSHsaG2a4WU

*********************************

Thank you Flat Icon for the lovely icons on the thumbnail! 🤩
www.flaticon.com","['python', 'python programming', 'python for beginners', 'python tutorial', 'android', 'ip webcam', 'ipwebcam', 'python web cam', 'python video', 'live video python', 'opencv', 'open cv', 'cv2', 'python cv2', 'python open cv', 'mobile phone camera', 'cellphone camera', 'phone camera', 'render video python', 'computer vision', 'stream video to python', 'stream video to code', 'stream camera video to python', 'phone camera to python', 'mobile phone video stream', 'mobile phone to python', 'phone camera to open cv', 'ip webcam to code']",2021-06-08T16:00:15Z,36744,1998,,221,PT6M47S,hd,true
83,-KLnurhX-Pg,Python Simplified,Perceptron Algorithm with Code Example - ML for beginners!,"In this video we will talk about the perceptron and code it together! 🧠 
Perceptron is single node in an artificial neural network 🤖
It's an an algorithm (a set of instructions) 📃 that's meant to mimic a neuron inside a human brain! We will discuss all the different components of perceptron and in the very end - we'll of course implement what we have learned with Python 🐍 to fully understand the math and logic behind the concepts! 

💻 Get the complete perceptron code! 💻
https://wayscript.com/script/VlHE0uL8

(the above script runs on the cloud - no need to install Python 😉)

🛑 BEFORE YOU WATCH THIS VIDEO 🛑
Watch my Simple Introduction to Artificial Intelligence: 🤖🧠
https://youtu.be/mMc_PIemSnU

🛑 AFTER YOU WATCH THIS VIDEO 🛑
Watch my Error Function - Cross-Entropy Loss Tutorial:
https://youtu.be/EJRFP3WmS6Q

****************************************
              🧐 TIMESTAMPS 🧐
****************************************
00:00 - perceptron definition
00:33 - real life example
01:40 - perceptron example
             02:04 - perceptron input
             02:15 - perceptron weights
             02:45 - weighted sum
             03:00 - threshold / bias
             03:20 - activation function (step function)
03:58 - key notes
05:04 - python perceptron
08:36 - thanks for watching!
****************************************

All the beautiful icons in the video are from:
https://www.flaticon.com/","['artificial intelligence', 'ai', 'machine learning', 'ml', 'perceptron', 'neuron', 'neural network', 'input', 'output', 'activation function', 'step function', 'threshold', 'ai for beginners', 'artificial intelligence for beginners', 'machine learning for beginners', 'basic neural network', 'basic perceptron', 'perceptron example', 'ai tutorial', 'artificial intelligence tutorial', 'simple ai', 'simple machine learning', 'python ai', 'python perceptron', 'python step function', 'python machine learning', 'python', 'bias', 'weighted sum']",2021-06-03T17:00:13Z,57788,2767,,228,PT8M55S,hd,true
84,YDp73WjNISc,Python Simplified,Simple Python App with Kivy - Step by Step GUI Tutorial,"Since so many of you guys have voted for Kivy Mobile App as our next GUI project - I thought it would be great to film a quick introduction to Kivy while you're waiting for the advanced project to be completed! 😁
In this tutorial, we will create a Simple Greeting App, where we collect a name and return a ""Hello"" greeting!
We will first place the all widgets on the interface, connect a callback function to our button and lastly we will add some styling to our app.

***********************************************
👩‍💻  STARTER CODE  👨‍💻
***********************************************
from kivy.app import App
from kivy.uix.gridlayout import GridLayout
from kivy.uix.label import Label
from kivy.uix.image import Image
from kivy.uix.button import Button
from kivy.uix.textinput import TextInput

class SayHello(App):
    def build(self):
        self.window = GridLayout()
        #add widgets to window

        return self.window

if __name__ == ""__main__"":
    SayHello().run()

***********************************************
⭐ Timestamps ⭐
***********************************************
00:00 - Intro
00:26 - Install Kivy
02:12 - GridLayout columns
02:39 - Kivy Image Widget
03:25 - Kivy Label Widget
03:57 - Kivy Text Input Widget
04:44 - Kivy Button Widget
05:25 - Kivy Button Callback Function
07:21 - Change Window Size
08:27 - Label Widget Font and Color
09:09 - Text Input Padding and Height
10:30 - Button Height, bold text and background color
11:12 - Fix darker button background color
11:52 - Testing the App
***********************************************

Simple Greeting App Github Repository:
https://github.com/MariyaSha/SimpleGreetingApp

Kivy Documentation:
https://kivy.org/doc/stable/

***********************************************
🐍 Install Anaconda & Python 🐍
https://youtu.be/FZ5baopI_mo
***********************************************

Kiwi Background image came from freepik :
https://www.freepik.com/free-vector/coloured-summer-sale-brochure-template_895190.htm#page=2&query=kiwi&position=10
Thank you very much for the beautiful graphic! 🤩","['python', 'python gui', 'python programming', 'kivy', 'kivi', 'kivy gui', 'python kivy', 'kivy app', 'kivy tutorial', 'python app', 'python gui app', 'gui app', 'python project', 'simple app', 'simple kivy app', 'textinput', 'label', 'button', 'button widget', 'callback', 'callback function', 'kivy callback', 'app class', 'kivy app class', 'build method', 'create gui', 'code gui', 'graphic user interface', 'graphic interface', 'python graphic interface', 'kivy graphic interface', 'application', 'python application', 'python program']",2021-05-27T17:00:14Z,285567,9284,,578,PT13M11S,hd,false
85,mMc_PIemSnU,Python Simplified,"Machine Learning FOR BEGINNERS - Supervised, Unsupervised and Reinforcement Learning","What do you guys think about an Artificial Intelligence Simplified series?? 🤖🤖🤖
I got so many requests, but since it's not directly related to Python I thought I should test the ground with an Introduction video before we dive any deeper!
Please let me know in the comments below what you think 😊

In this introduction to the topic, we'll talk about a few Machine Learning approaches (more commonly known as paradigms, but I try to avoid fancy words 😋). I will illustrate the concepts behind each approach with colourful graphics and real life examples.

We'll discuss:
00:39 - Supervised Learning
04:12 - Unsupervised or Self Supervised Learning
05:50 - Reinforcement Learning

⭐ NEXT EPISODE - Machine Learning Perceptron ⭐
https://youtu.be/-KLnurhX-Pg

⭐ NEXT NEXT EPISODE - Binary Cross Entropy Loss ⭐
https://youtu.be/EJRFP3WmS6Q

⭐ ADVANCED DEMO - Create a Neural Network With Pytorch - My Step by Step Tutorial⭐ 
https://youtu.be/mzbJd0NhW2A

Just a quick reminder 📍 
I'm not a teacher, but I'm a very very good student! in my family - scores below 90 are unacceptable! (it's a Russian parents thing I believe) 🤣
Everything I share with you guys is what I learn on my own, I am not a University professor and I am not a genius - I'm just a really good learner and hopefully I can help other lovely people with my findings 🤓

#ai #artificialintelligence #machinelearning #ml #supervisedlearning #unsuprevisedlearning #reinforcementlearning

All the beautiful vectors and icons are from:
https://www.freepik.com
https://www.flaticon.com
Thank you so much for the artists who worked hard on these graphics, I only assembled them 😉

The robot head in the thumbnail image is from:
https://www.istockphoto.com

Thank you for watching and please let me know if you like this style of video lessons, as well as if you have any remarks regarding the AI topic,
See you soon! 😁","['artificial intelligence', 'ai', 'machine learning', 'ml', 'supervised learning', 'unsupervised learning', 'self supervised learning', 'reinforcement learning', 'neural network', 'prediction', 'training', 'ai for beginners', 'introduction to ai', 'machine learning for beginners', 'machine learning paradigms', 'image classifier', 'image classification', 'ai model', 'ai concepts', 'artificial intelligence lesson', 'artificial intelligence basic', 'self-supervised learning', 'reinforcement', 'unsupervised']",2021-05-19T16:00:17Z,24294,1288,,225,PT8M48S,hd,true
86,f0B6RdVGcM8,Python Simplified,Is Web Scraping Legal? My Take on Automation and Fair Use,"I got so many viewer comments asking me whether web scraping is legal or not so I thought it would be best to reply with a video! 🎥
Web Scraping is the practice of extracting information from websites with the use of code only. It is widely used for automation testing, marketing, HR, data science (generating databases) and many more!
And even though so many of us use web scraping on a daily basis - there are still many others claiming it's forbidden 🙃 

So who's right and who's wrong? Can you get in trouble for it? What is the difference between extracting the same information manually with your mouse and keyboard and programming a bot to scrape it instead?
Click play and find out what I think about it! 😉

In the meanwhile - check out my Web Scraping tutorials! 

WEB SCRAPING INSTAGRAM:
https://youtu.be/iJGvYBH9mcY

WEB SCRAPING LINKEDIN:
https://youtu.be/7aIb6iQZkDw

WEB SCRAPING FACEBOOK:
https://youtu.be/SsXcyoevkV0

WEB SCRAPING GOOGLE:
https://youtu.be/drDdb1MBBfI

And I guess judging by the links above you can probably guess what I'm about to say! 🤪

*******************************
       ⭐ TIMESTAMPS ⭐
*******************************
00:00 - Intro
00:46 - Disclaimer: I'm not a lawyer!
01:07 - Is Web Scraping Legal?
02:30 - Does Web Scraping Violate Terms Of Use?
05:38 - Copyrights and Fair Use
*******************************

Thank you so much for watching and for your wonderful support! 🥰
Please like, comment, and share my videos if you find them useful as it really really helps with growing this channel! 😀

MUCH LOVE ♥♥♥
Mariya","['web scraping', 'webscraping', 'automation', 'automate', 'webscraping legal', 'web scraping legal', 'automation legal', 'automation illegal', 'web scraping illegal', 'terms of use', 'webscraping terms of use', 'web scraping terms of use', 'web scraping instagram', 'instagram terms of use', 'instagram bot', 'fair use', 'copyrights', 'copyright', 'webscraping copyrights', 'web scraping copy rights', 'web scraping fair use', 'copyrights fair use', 'dummy account', 'bot', 'bots', 'webscraping wrong', 'web scraping forbidden', 'crawler']",2021-05-15T16:00:17Z,13444,729,,99,PT7M47S,hd,true
87,7aIb6iQZkDw,Python Simplified,LinkedIn Contacts Automation with Selenium - Step by Step Bot,"🛑 IMPORTANT NOTE! 🛑
Please use a DUMMY ACCOUNT when adding so many contacts!!! 
DO NOT use your personal account to avoid being flagged by LinkedIn!!!

In this tutorial we will build a connecting bot with Python & Selenium! We will send connection invitations to as many LinkedIn members as we choose with nearly 0 effort on our end and a 100% automation!
By the end of this tutorial, you will have your own connecting bot and if you choose to combine it with my commenting bot from part 1 & part 2 of this project - you'll have an even more powerful growth marketing tool!

Create LinkedIn Message Bot - Part 1:
https://youtu.be/XdFUpFUDt88

Improve LinkedIn Message Bot - Part 2:
https://youtu.be/TXdgMkf9gP0

This project is ⭐ PERFECT FOR BEGINNERS! ⭐
But before we move on - please make sure you:

************************************
🛑🐍 INSTALL PYTHON 🐍🛑
https://youtu.be/FZ5baopI_mo
**************************************************
🛑🤖 INSTALL SELENIUM & WEBDRIVER 🤖🛑
https://youtu.be/iJGvYBH9mcY
************************************

Once you have Python, Webdriver and Selenium installed -
You can proceed with the tutorial without much background
in Python, as most of the commands are in plain English! 😉 
Just create a new file with any code editing software and paste the starter code to it!

************************************
⭐ STARTER CODE ⭐
************************************

from selenium import webdriver
import time

driver = webdriver.Chrome('C:/Users/Mariya/chromedriver.exe')
driver.get('https://www.linkedin.com')
time.sleep(2)

#********** LOG IN *************

username = driver.find_element_by_xpath(""//input[@name='session_key']"")
password = driver.find_element_by_xpath(""//input[@name='session_password']"")

username.send_keys('my_username')
password.send_keys('my_password')
time.sleep(2)

submit = driver.find_element_by_xpath(""//button[@type='submit']"").click()

#***************** ADD CONTACTS ***********************

************************************
⭐ TIMESTAMPS ⭐
************************************
00:00 - Intro
00:30 - starter code walk-trough
02:21 - run starter code
02:55 - find and inspect web page
04:44 - select and click on connect buttons
07:04 - send invitation to connect
09:04 - bypass users with strict privacy settings
09:26 - dismiss email input div
11:03 - run connecting bot
************************************
⭐ Github Project Repository ⭐
https://github.com/MariyaSha/WebScraping_Linkedin

#python #pythonprogramming #pythonforbeginners #selenium #seleniumbot #bot #linkedin #linkedinbot #linkedinautomation #seleniumautomation #webscraping #webscrapinglinkedin","['python', 'python programming', 'python for beginners', 'python project', 'linkedin automation', 'selenium', 'selenium webdriver', 'selenium automation', 'selenium bot', 'linkedin bot', 'web scraping linkedin', 'webscraping linkedin', 'connect on linkedin', 'linkedin connections', 'free linkedin connections', 'connect', 'connection', 'python bot', 'python automation', 'webscraping', 'web scraping', 'automation', 'automate', 'unlimited linkedin contacts', 'get linkedin contacts for free', 'generate leads', 'generate linkedin leads']",2021-05-11T16:30:19Z,17097,729,,151,PT12M7S,hd,true
88,Y0HN9tdLuJo,Python Simplified,Convert py to exe - from code to software,"In this quick tutorial you will learn how to convert Python files to fully functional Executable Programs!
We will use Auto-Py-To-Exe for to do this and ConvertICO.com to generate an icon for our Program.
From now on - you can turn all your Python apps into desktop software in 5 minutes!

Did you like my Trivia Game? 🤩
Want to learn how to create it step by step?

⭐ Create a Python Trivia App with PyQt5 - PART 1 ⭐
https://youtu.be/9iZLDnW_vwU

⭐ Create a Python Trivia App with PyQt5 - PART 2 ⭐
https://youtu.be/r2ZN0mTDnPc

⭐ Download my Trivia Game from Github ⭐
https://github.com/MariyaSha/TriviaGame

🐍 INSTALL PYTHON 🐍
https://youtu.be/FZ5baopI_mo

************************************************

If you found this video helpful - please like, comment, subscribe and share it with your friends! 😀
If you have any questions or if anything fails in the conversion of your app - please let me know in the comments below!

************************************************

convert png images to icons:
https://convertico.com/

read more about auto-py-to-exe:
https://pypi.org/project/auto-py-to-exe/

************************************************
                          TIME STAMPS
************************************************
00:00 - intro
00:27 - install auto py to exe
00:46 - select main py file
00:56 - one directory vs one file
01:31 - console based vs window based
01:55 - create and set icon
03:05 - additional files
03:38 - advanced section use
04:02 - select output folder
04:13 - convert py to exe
04:39 - play computer science Trivia
05:28 - thanks for watching! ♥

#python #pythonapp #pythongui #pytoexe #convertpython #convertpytoexe #codetoprogram #guiicon #gui #graphicuserinterface","['python', 'python programming', 'python gui', 'gui', 'graphic user interface', 'user interface', 'convert py to exe', 'converty python to exe', 'convert python to executable', 'executable', 'exe', '.exe', 'convert .py to .exe', 'auto py to exe', 'auto-py-to-exe', 'icons', 'icon', 'generate icons', 'convert png to ico', '.png to .ico', 'create ico', 'create .ico', 'create icon', 'from code to software', 'python file to app', 'application', 'gui app', 'gui application', 'python app', 'python application', 'python app icon', 'software', 'program']",2021-05-06T16:00:17Z,286102,11644,,863,PT5M55S,hd,false
89,r2ZN0mTDnPc,Python Simplified,Open Trivia Database for PyQt5 GUI App - PART 2,"In the previous PyQt5 tutorial we've learned how to create an interface for a Trivia game application - Who Wants to Be a Programmer?

🤩 Watch PART 1 of this project 🤩
https://youtu.be/9iZLDnW_vwU

In this video, we will turn the blank interface into a fully functional Trivia game! We will:

1. connect a JSON database to out Python code
2. process the data and extract the questions and answers
3. populate widgets with extracted data
4. track the score
5. practice debugging
6. create other useful functionalities for our app

*************************************************
⭐ CHARECTER FOTMATTING CODE ⭐
*************************************************
🛑 PLEASE note 🛑 
Youtube doesn't allow angled brackets (less than or equal to symbols) in video descriptions, therefore you would have to replace it where SYMBOL is indicated the code below
*************************************************
    formatting = [
        (""#039;"", ""'""),
        (""&'"", ""'""),
        (""&quot;"", '""'),
        (""&lt;"", ""less than SYMBOL""),
        (""&gt;"", ""greater than SYMBOL"")
        ]

    for tuple in formatting:
        question = question.replace(tuple[0], tuple[1])
        correct = correct.replace(tuple[0], tuple[1])

    for tuple in formatting:
        wrong = [char.replace(tuple[0], tuple[1]) for char in wrong]

*************************************************
⏰ TIME STAMPS ⏰
*************************************************
00:00 - intro
00:47 - download Open Trivia Database
02:02 - starter files walktrough
03:25 - read json from url with Python
04:43 - manipulate and extract data
10:24 - replace widget placeholders with data
13:14 - correct answer evaluation function
27:55 - clear parameters function
29:49 - test the app
31:09 - a riddle
31:41 - thank you for watching!

😍 please let me know which GUI library you want to learn about next! 😍

********************************************
⭐ GITHUB TRIVIA GAME REPOSITORY ⭐
https://github.com/MariyaSha/TriviaGame
********************************************
🛑🐍 INSTALL PYTHON 🐍 🛑
https://youtu.be/FZ5baopI_mo
********************************************
🧐 GUI SIMPLIFIED PLAYLIST 🧐
https://youtu.be/2RocXKPPx4o
********************************************
📑 PyQt5 Documentation 📑
https://doc.bccnsoft.com/docs/PyQt5/index.html
********************************************
💡 Open Trivia Database 💡
https://opentdb.com/
********************************************
🙋‍♀️ Connect with me on Social Media 🙋‍♀️

Github: https://github.com/MariyaSha
LinkedIn: https://www.linkedin.com/in/mariyasha888/
Instagram: https://www.instagram.com/mariyasha888/

Thanks for watching, please share if you found this video helpful! 😊","['python', 'python gui', 'pyqt5 python', 'pyqt5', 'python for beginners', 'python programming', 'database', 'databases', 'data', 'JSON', 'json data', 'python json', 'trivia', 'trivia game', 'trivia python', 'gui', 'graphic user interface', 'user interface', 'python user interface', 'qt', 'pyqt', 'pyqt5 database', 'pyqt5 app', 'python app', 'python application', 'pyqt5 application', 'qt app', 'gui tutorial', 'interface tutorial', 'coding', 'open trivia database', 'widgets', 'widget', 'qt widget', 'manipulate data', 'api json python', 'api database']",2021-05-01T16:00:17Z,21360,777,,136,PT32M14S,hd,false
90,TXdgMkf9gP0,Python Simplified,LinkedIn Custom Message Automation with Selenium,"In this tutorial we will expand our LinkedIn bot to:
- Message multiple pages of contacts
- Create a unique customized message for each contact, including their name and personalized greetings
- Introducing a degree of randomness to our code

🛑 VERY IMPORTANT!!! 🛑
***************************************************
Please remember to create a dummie/fake account for your bot!
DO NOT message hundreds of people from your personal account, do it the smart way! 😎
***************************************************
Get ⭐ Tabnine ⭐ for FREE: 
https://www.tabnine.com/now?utm_source=youtube.com&utm_medium=Ins&utm_campaign=Mariya
***************************************************

Check out the first part of this project:
🤖 Create a LinkedIn Message Bot 🤖
https://youtu.be/XdFUpFUDt88

Get your webdriver installed:
🤖 Web Scraping Instagram with Selenium Bot 🤖
https://youtu.be/iJGvYBH9mcY

🛑🐍 Install Python on your computer 🐍🛑
https://www.youtube.com/watch?v=FZ5baopI_mo

***************************************************
                      🕒 TIME STAMPS 🕒
***************************************************
00:00 - intro
01:42 - message multiple pages of LinkedIn contacts
03:26 - extract names of Linkedin contacts
07:49 - generate custom message for each Linkedin contact
10:17 - replace static message with custom message
12:56 - run bot and message all contacts
13:46 - thanks for watching! see you in part 3 ♥
***************************************************

#python #pythonprogramming #selenium #pythonbot #seleniumbot #linkedinbot #linkedin #linkedinautomation #seleniumautomation #pythonautomation #jupyter #tabnine","['python programming', 'python', 'selenium', 'selenium automation', 'custom message', 'custom string', 'python string', 'python automation', 'python selenium', 'webdriver', 'selenium webdriver', 'linkedin selenium', 'linkedin message automation', 'automate linkedin', 'linkedin bot', 'linkedin message bot', 'advertise on linkedin for free', 'free linkedin message', 'automation', 'tabnine', 'jupyter notebook', 'python project', 'python for beginners', 'tutorial', 'python tutorial', 'selenium tutorial', 'automated browser']",2021-04-20T16:00:27Z,7030,295,,91,PT14M8S,hd,false
91,XdFUpFUDt88,Python Simplified,Linkedin Message Automation with Selenium,"⭐ Check out Tabnine for FREE here⭐ https://www.tabnine.com/now?utm_source=youtube.com&utm_medium=Ins&utm_campaign=Mariya

In this step by step tutorial you will learn how to automate mass messaging on Linkedin! 😎😎😎
We will create a bot that will log in to our Linkedin account, find many of our contacts and send them whichever message we choose!

We will also learn how to bypass 3 types of blockers:
- blank elements
- inactive elements
- ""element not interactable"" exceptions

⭐ PART 2 of this tutorial: https://youtu.be/TXdgMkf9gP0
⭐ PART 3 of this tutorial: https://youtu.be/7aIb6iQZkDw

by the end of this 3 part project, you won't need your InMail service ever again! you can just simply use your 100% FREE bot anytime you choose for as many contacts as you'd like!
Remember, anything that can be achievable with a mouse click or keypress inside a browser window - can also be done with automation! We are simply letting Python do the hard work for us!

For this video, I've partnered up with Tabnine, who created a really cool AI powered code completion tool! It is available for all popular IDEs including Pycharm, VScode, Jupyter and Atom and you can get it for by signing up for a FREE account.
Tabnine has great privacy features and it's available for many programming languages, not just Python!

*******************************************
INSTALLS  |   IMPORTS  |  LEARN MORE
*******************************************

⭐ Install Tabnine in Jupyter ⭐

pip3 install jupyter-tabnine --user
jupyter nbextension install --py jupyter_tabnine --user
jupyter nbextension enable --py jupyter_tabnine --user
jupyter serverextension enable --py jupyter_tabnine --user

read more on Github:
https://github.com/codota/jupyter-tabnine

********************************************
 ⭐ Module Imports ⭐

from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.by import By
from selenium.webdriver.support.wait import WebDriverWait
import time 

********************************************
🤩 Web Scraping Instagram with Selenium 
       https://www.youtube.com/watch?v=iJGvYBH9mcY

🤩 Web Scraping Facebook with Selenium 
       https://youtu.be/SsXcyoevkV0

🤩 Web Scraping with Mechanical Soup 
       https://www.youtube.com/watch?v=drDdb1MBBfI

🤩 Web Scraping with Beautiful Soup 
       https://youtu.be/ySNSY7iiBDY

*******************************************
🛑🐍 INSTALL PYTHON & JUPYTER 🐍🛑
https://youtu.be/FZ5baopI_mo​

*******************************************
⭐ TIME STAMPS ⭐
*******************************************
00:00 - Intro
01:21 - Install Tabnine in Jupyter
02:35 - Log in to Linkedin with Selenium
08:27 - Message Linkedin Contacts
11:29 - Blank DOM Element Blocker
14:17 - Hidden / Not Active DOM Element Blocker
20:39 - Element Not Interactable Exception Blocker
22:16 - Activate Bot

*******************************************
#python #pythonprogramming #coding #automation #linkedin #bot","['python', 'python programming', 'web scraping', 'web scrape', 'selenium', 'selenium webdriver', 'webdriver', 'tabnine', 'jupyter', 'jupyter notebook', 'python tutorial', 'python simplified', 'selenium python', 'web scraping with python', 'web scraping linkedin', 'linkedin bot', 'automation', 'linkedin automation', 'message automation', 'linkedin message automation', 'python bot', 'python projects', 'programming', 'coding', 'selenium automation', 'step by step', 'python programmer', 'bot', 'create bot', 'create a bot', 'programmer girl']",2021-04-14T16:00:17Z,16399,652,,159,PT23M7S,hd,false
92,PV_e3TmuJuA,Python Simplified,I Bought an Alienware PC $2000 off!!! VLOG 2,"It turns out that assembling a computer for your needs is not nearly as fun as buying the pre built of your dreams!! 
Especially when the price is $2,000 off!!! 🤩🤩🤩
Here's an update on the extraterrestrial beast I ended up getting, mostly from the value and savings perspective, but I'll make sure to film a benchmarks video as well (yes, I have Cyberpunk for that 😉).
If you're in the same situation as I was - checking out some pre-builts is a great way to go! and if you're checking in the right place - you might even find the computer of your dreams for the price of your dreams, just like me! 😁
In this video, I'll share my story and hopefully this might help some lovely people!

If you guys want to find out what happened to my old laptop, check out my vlog about it:
https://youtu.be/obNlpLF4HW4

If you guys want to learn how to build a Python GUI Application, checkout my Tkinter tutorial:
https://youtu.be/y8PR4lTAh5E

**************************************************
         THIS VIDEO IS NOT SPONSORED!!!
**************************************************

#alienware #dell #alienwarepc #aurora #alienwareaurora #discount #refurbishedcertified #girlprogrammer","['alienware', 'dell', 'pc', 'alienware pc', 'dell pc', 'pc discount', 'alienware discount', 'alienware sale', 'good pc deals', 'pc deals', 'savings', 'refurbished', 'Refurbishment', 'Certified Refurbished', 'Certified Refurbished PC', 'Certified Refurbished Products', '$2000 off', 'alienware 30% off', 'alienware aurora r11', 'aurora r11', 'alienware aurora', 'girl programmer', 'vlog', 'computer deal', 'save on computer', 'Pre Built PC', 'Pre Built', 'computer discount', 'good value computer', 'best buy']",2021-03-26T16:30:16Z,8940,372,,101,PT8M53S,hd,false
93,9iZLDnW_vwU,Python Simplified,Create GUI App with PyQt5 - PART 1,"In this video we'll use PyQt5 to create the graphic interface of ""Who Wants to be a Programmer???"";
a computer science trivia game, which determines who is truly worthy of the title!
We'll design the first two frames of this game and learn how to switch from one to the other effortlessly.
We'll also discuss in detail all the important widgets (text, image, button) , we'll go over styling and layout commands, as well as adding interactivity to clickable elements (this is probably my favourite part of PyQt5 - it allows you to create hover events and utilize your pro CSS skills to their full extent!).

This is PART 1 of the complete project, where we focus on creating the GUI.
In the upcoming PART 2, we will load a database of trivia questions and connect all its functionality to our interface.

😍 WATCH PYQT5 TRIVIA APP - PART 2 😍
https://youtu.be/r2ZN0mTDnPc

********************************************

DOWNLOAD STARTER FILES:
https://github.com/MariyaSha/TriviaGame/tree/main/Trivia%20-%20Starter%20Files

PyQt5 Documentation:
https://www.riverbankcomputing.com/static/Docs/PyQt5/index.html

COMPLETE PROJECT:
https://github.com/MariyaSha/TriviaGame

MY NEW BLOG:
https://www.mariyasha.com/
(also pythonsimplified.ca)

CONNECT ON LINKEDIN:
https://www.linkedin.com/in/mariyasha888/

FOLLOW ON INSTAGRAM:
https://www.instagram.com/mariyasha888/

************************************
⭐⭐⭐  TIMESTAMPS  ⭐⭐⭐
************************************
00:00 - Intro
00:59 - Starter files walkthrough
************************************
1. CREATE WINDOW OBJECT
************************************
01:15 - initialize GUI app
01:31 - create QWidget window
01:46 - set window title
02:09 - set window width
02:22 - set window background color
02:58 - open window
03:05 - terminate app
************************************
2. RUN APP WITH TERMINAL
************************************
03:25 - open Anaconda or other terminal
03:29 - activate working environment
03:35 - change directory
03:57 - run app
04:12 - initialize grid layout
04:23 - apply grid layout
************************************
3. CREATE LOGO WIDGET
************************************
04:36 - load png image
05:00 - create label widget
05:10 - place image inside label
05:23 - place logo on grid
05:48 - set window position (fix)
06:36 - align label to center
06:56 - set label margin
************************************
4. CREATE BUTTON WIDGET
************************************
07:33 - create button widget
07:53 - set button cursor
08:32 - set button CSS style
10:05 - place button on grid
11:09 - set button padding and margin
12:02 - mouse hover event
************************************
5. CREATE FRAME FUNCTION
************************************
13:10 - create frame function
13:39 - call frame function
13:52 - create global dictionary of empty lists
14:40 - append local widgets to global dictionary
15:12 - place global variables on the grid
************************************
6. DESIGN FRAME 2
************************************
15:55 - define frame 2 function
16:09 - create text widget
16:53 - create wrapping text widget
17:36 - set word wrap
18:45 - place label on grid
19:26 - set column span
19:58 - fix typos and parameters
************************************
7. CREATE IDENTICAL BUTTONS
************************************
20:28 - create a button widget
21:05 - store button widget in a function
21:51 - return button from function
22:09 - add buttons to global dictionary
22:18 - call button function many times
23:17 - customize parameters for each button
24:20 - update function call with new parameters
************************************
8. SWITCH FRAMES
************************************
26:02 - define callback function
26:13 - hide all widgets
26:43 - reset global dictionary
27:49 - button callback
28:23 - switch frames continuously
************************************
29:54 - THANKS FOR WATCHING!
************************************

#python #pythonprogramming #learnpython #creategui #gui #graphicuserinterface #pythontutorial #programming #createapp #createpythonapp #interface #designinterface","['python', 'python programming', 'gui', 'pyqt5', 'python gui', 'create interface', 'create gui', 'gui tutorial', 'python tutorial', 'trivia game', 'pyqt5 widget', 'create widget', 'make widget', 'widget', 'interactive ugi', 'change frames', 'switch frames', 'gui frame', 'button widget', 'style widget', 'design gui', 'design application', 'create app', 'create application', 'atom', 'anaconda', 'girl programmer', 'coding', 'coding tutorial', 'css', 'css styling', 'codealong', 'pyqt5 introduction', 'graphic user interface']",2021-03-12T18:00:17Z,142533,3971,,417,PT30M25S,hd,false
94,y8PR4lTAh5E,Python Simplified,Create GUI App with Tkinter -  Part 2,"In this step by step tutorial we will upgrade our existing PDF Extract Application from Part 1, and extract images from a given PDF file rather than just its' text.
If you haven't had a chance to view Part 1 yet, I highly recommend to click on the link below and get up to speed:
https://youtu.be/itRLRfuL_PQ

For this project, you'll need to download a new set of starter files:
https://github.com/MariyaSha/PDFExtract

You don't have to use my test files, but make sure you're selecting test files that include BOTH an image and a text character. If only one of these exists - then your app might not behave as expected.

Tkinter Documentation:
https://docs.python.org/3/library/tkinter.html

Code for Extracting Images from PDF Files - Solved by Sylvain on Stack Overflow:
https://stackoverflow.com/questions/2693820/extract-images-from-pdf-without-resampling-in-python

************************************************
⭐⭐⭐ Time Stamps ⭐⭐⭐
************************************************
1. INTRO:

00:00 - Introduction
00:54 - Starter Files Walk-through
04:01 - Designing Wireframes
************************************************
2. CREATING AND PLACING WIDGETS

05:30 - Create Frame Widget and Place it on the Grid
07:59 - Create Button Widget
09:18 - Place Button Widgets on the Grid (inline)
10:39 - Discussing the Image Menu on Row 2
11:04 - Create a Frame and Text Widgets
12:32 - Create Icon Button Widget
15:09 - Align Buttons with the Sticky Property
16:04 - Extract and Display Image
19:07 - Resize Displayed Image
22:44 - Organize Code
************************************************
3. ADDING CALLBACKS AND FUNCTIONALITY

24:10 - Copy Text Button Functionality
26:54 - Save All Images Button Functionality
30:24 - Convert Images to RGB Mode
31:15 - Save Displayed Image Button Functionality
33:35 - Dynamically Change the Displayed Image
************************************************
4. LAST TOUCH-UPS

40:01 - Clear Global Variables for Each New PDF File
41:38 - Hide the Currently Displayed Image for Each New PDF File
41:58 - Clear Global List of Images for Each New PDF File
42:38 - Left Arrow Button Functionality
44:05 - Dynamically Change the Text of a Widget with StringVar()
47:18 - Thanks for Watching! 
************************************************

On another note, this was one of the most difficult projects to build as Tkinter was misbehaving each step of the way!!! 😵😵😵
If you guys are running into any issues with understanding the code or some of the processes - please let me know!! We can do a live session where I answer questions regarding this project, and of course keep an eye on my Gihub for new commits or resolved issues:
https://github.com/MariyaSha

Connect on Linkedin:
www.linkedin.com/in/mariyasha888

Follow on Instagram:
https://www.instagram.com/mariyasha888

#python #pythonprogramming #pythontutorial #pythonlesson #learnpython #tkinter #gui #tkintertutorial #guitutorial #pypdf2 #extractimages #pdf #programming #coding #stepbystep #tutorial #codealong","['python', 'python programming', 'gui', 'gui app', 'gui program', 'create gui', 'create a python app', 'gui with python', 'tkinter', 'tkinter gui', 'advanced gui app', 'graphic user interface', 'atom', 'anaconda', 'create widgets', 'create widget', 'widget', 'extract images', 'extract pdf images', 'extract pdf text', 'extract pdf', 'tkinter interface', 'python application', 'tkinter application', 'girl programmer', 'learn python', 'learn tkinter', 'build gui', 'python simplified', 'textvariable', 'stringvar', 'display image', 'pypdf2']",2021-02-14T04:06:27Z,64241,1819,,239,PT47M42S,hd,true
95,SsXcyoevkV0,Python Simplified,Web Scraping Facebook with Selenium - AUTOMATED BOT,"In this tutorial you will learn how to create a web scraping bot that can download an entire Facebook image gallery, both tagged and personal photos at once.
With the help of Python, Jupyter Notebook, Selenium and Chrome Driver - you will achieve 100% automation and obtain all the tools to adjust your code in the future, should Facebook change anything on their end.

Web Scraping Instagram with Selenium CODE ON GITHUB:
https://github.com/MariyaSha/WebscrapingInstagram/blob/main/WebscrapingInstagram_completeNotebook.ipynb

Web Scraping Instagram with Selenium VIDEO TUTORIAL:
https://youtu.be/iJGvYBH9mcY

Web Scraping Instagram with Selenium ARTICLE ON MEDIUM:
https://medium.com/analytics-vidhya/web-scraping-instagram-with-selenium-b6b1f27b885

Web Scraping Facebook with Selenium COMPLETE NOTEBOOK:
https://github.com/MariyaSha/WebscrapingFacebook/blob/main/FB_Scraper.ipynb

ARE YOU NEW TO PYTHON?
************************************
the tutorial below will show you how to:
a. quickly install Python
b. quickly install Jupyter Notebook

https://youtu.be/FZ5baopI_mo
************************************

TIMESTAMPS:
************************************
00:00 - 2:23 intro
************************************
a. preparation steps
         02:23 - Install Selenium   
         03:07 - Install Wget
         03:39 - Download Chrome Driver
         04:44 - Launch Jupyter Notebook
b. coding
         05:29 - Imports and Intro
         06:10 - Webdriver get command
         07:09 - Developer Tools Guide
         08:12 - Login: Username, Password, Submit
         09:26 - Dismiss Alerts: Stackoverflow
         10:59 - Shortcut to get Photo Gallery
         11:58 - Loop over tagged and personal photos
         13:12 - Scroll to the end of the page: Loop
         15:41 - Target all anchor elements on the page
         17:21 - Target specific anchor elements
         20:04 - Target all image elements on the page
         22:16 - Target a specific image element
         24:11 - Create a new directory at the root
         25:06 - Download all the photos 
         25:53 - Last Automation Step
         26:52 - Run the bot
         27:04 - Test the bot
************************************
#python #pythonprogramming #pythontutorial #learnpython #webscraping #webscrape #selenium #webscrapefacebook #extractimages","['python', 'python programming', 'coding', 'selenium', 'code', 'tutorial', 'web scraping', 'scraping', 'web', 'dom', 'bot', 'jupyter notebook', 'facebook', 'instagram', 'web scrape facebook', 'web scraping facebook', 'extract images', 'download facebook photo gallery', 'download tagged facebook photos', 'tagged photos', 'save tagged photos', 'save photos', 'save facebook photos', 'download facebook photos', 'facebook scraper', 'girl programmer', 'selenium tutorial', 'webdriver', 'web driver', 'scroll down selenium', 'bottom of the page scroll']",2021-01-30T05:00:13Z,86785,2119,,266,PT27M57S,hd,true
96,2eD8PK4VBCI,Python Simplified,Web Scraping Facebook Time Lapse,"Hi everyone, here's a quick screen capture of the automated Facebook Scraping Bot I've build to extract all your personal images and save them on your computer. 
This code also includes tagged images (hosted on other peoples' FB profiles) as well as your personal photos from all your albums and posts. 
I will film a tutorial on this as soon as my new computer arrives next week! (my old computer is no longer with us 😅)
In the meanwhile, feel free to use/adjust any piece of code you need from this .ipynb notebook on my Github: https://github.com/MariyaSha/WebscrapingFacebook
If you want to learn about some of the Selenium commands, checkout my Web scraping Instagram with Selenium article:
https://medium.com/analytics-vidhya/web-scraping-instagram-with-selenium-b6b1f27b885
Or wait for the step by step code-along tutorial, where we can build it together and talk about the reasoning behind all the loops and commands ;)
It was highly requested, so enjoy! 😄

Connect on Linkedin:
https://www.linkedin.com/in/mariyasha888/

#webscraping #web #scraping #scrape #bot #createbots #buildbots #createabot #selenium #facebook #webscrapefacebook #scrapefacebook #seleniumwebscraping #python #pythonprogramming","['python', 'python programming', 'time lapse', 'timelapse', 'webscraping', 'web scraping', 'facebook', 'web scraping facebook', 'webscraping facebook', 'web scrape facebook', 'web scrape', 'selenium', 'selenium scraping', 'selenium webscraping', 'girl programmer', 'jupyter notebook', 'screencapture', 'automate', 'automated', 'bot', 'create a bot', 'create bot', 'build bot', 'scraping bot', 'scraper bot', 'python bot', 'web scraping bot', 'automated bot']",2021-01-19T20:00:02Z,7267,108,,32,PT47S,hd,false
97,obNlpLF4HW4,Python Simplified,Where was I??? and why I'm considering building my own scavenging bot?? : VLOG #1,"Hey Y'all! 
It's been a while since I've filmed anything and I sure owe you guys an explanation! (I have great excuses, don't worry 🤣)
I'll explain what happened to my computer and why I'm considering doing the worst thing ever - scavenging for new computer parts (only for my own comp of course, but it's still a nasty nasty practice which I highly oppose!)
So to bot to not to bot - that is the question!
Let me know what you guys think I should do, I'm running out of time and hoping to find any other solution under the sun.
Peace and love to everybody, will see you soon in a Tkinter tutorial! ❤
#vlog #bots #scavengingbots #scavengers #computerparts #programmer","['programming', 'programmer', 'vlog', 'scavengers', 'scavaging bots', 'scavenger bot', 'computer parts', 'computers', 'girl programmer', 'bot', 'bots']",2021-01-14T20:30:05Z,11273,374,,81,PT3M47S,hd,true
98,P4F3PzCMrtk,Python Simplified,Professional Pandas Line Graph Plot in less than 10 Minutes,"In this video, you will learn how to make professional and high-quality line graphs in less than 10 minutes! 
NO NEED TO KNOW PYTHON!
You only need to have a Google Drive account and a very basic knowledge of English - I will explain everything else in detail, step by step!

Complete Notebook:
https://colab.research.google.com/drive/1rV-qKQ1T_vJhlJsiRb1gCsnB5zEtX1V0?usp=sharing

Read more about Pandas Plots:
https://pandas.pydata.org/docs/getting_started/intro_tutorials/04_plotting.html#min-tut-04-plotting

Get Inkscape (open-source Vector Graphics Editor) for touch-ups:
https://inkscape.org/

*********************************************************
⭐Timestamps:⭐
*********************************************************

00:00 - Intro
00:23 - Install Google Colab
00:58 - Create a new Colab Notebook
01:06 - Import Pandas
01:25 -  Choose domain and co-domain sets
01:44 -  Plot a basic graph
02:58 - Add a function name f(x) to the graph
03:51 - Add a grid to the graph
04:09 - Add a title to the graph
04:32 - Add a title to the axis of the graph
05:02 - Plot 2 functions on the same graph
05:40 - Save graph inside your Google Drive
06:09 - Mount Google Drive
07:02 - Prepare the plot for saving
07:43 - Save figure inside your Google Drive
08:52 - Set limits on the x axis (xlim)
09:40 - View and discuss results
10:23 - Thank you for watching!

*********************************************************
🤩 More graphs with Matplotlip & Pandas 🤩
https://youtu.be/MJ1945J_W0c
*********************************************************
🛑🐍 INSTALL PYTHON 🐍🛑
https://youtu.be/FZ5baopI_mo
*********************************************************

#python #pythonprogramming #coding #googlecolab #googlecollaboratory #plotgraphs #graphs #graph #plotgraph #drawgraph #creategraph","['graph', 'graphs', 'make a graph', 'plot a graph', 'python', 'python programming', 'pandas', 'google colab', 'google collaboratory', 'mount drive', 'install google colab', 'create a graph', 'make graphs', 'create graphs', 'line graphs', 'line graph', 'make a line graph', 'tutorial', 'step by step', 'girl programmer', 'plot pandas', 'functions', 'f(x)', 'axis', 'domain', 'codomain', 'math', 'plot functions', 'plot function graph', 'make function graph', '10 minuts', 'fast graph', 'professional graph', 'pandas line graph', 'pandas graph']",2020-12-19T03:30:11Z,26173,1413,,115,PT10M50S,hd,false
99,2RocXKPPx4o,Python Simplified,Create a Python App with Dear PyGui - Graphic User Interface,"*** IMPORTANT NOTES ***


finishedProject/app.py is now updated with global pred= []
Please avoid initializing it at check_spam(pred=[]), but initialize it earlier on a global scope and only then pass it to check_spam(pred). Complete + Updated Code on Github:
https://github.com/MariyaSha/SimpleSMSspamFilter_GUI/blob/main/finishedProject/app.py

If you had any issues with the code presented in this video - please check out the link above to see if it resolves is!


*** VIDEO DESCRIPTION ***

Learn how to create a fully-functional Python app step by step!
In this project, we will build a graphic user interface with the brand new Dear PyGui library!
We will connect this interface to my Simple SMS Spam Filter, which we've built together in a previous project. 
We will learn how to display images, text, user input, buttons, and separators, as well as hiding widgets and ""click"" event callback functions.

Starter Files:
https://github.com/MariyaSha/SimpleSMSspamFilter_GUI



******************************************
Time Stamps:
******************************************
00:00 - Intro
00:39 - Starter files walkthrough
01:03 - Open app.py in Code Editor
01:24 - Set widow size
01:43 - Set font size
02:00 - Set a theme
02:24 - Initialize window object
03:32 - Run Python file from command line
04:37 - Adjust position on secondary window
05:21 - Display an image
07:14 - Set padding
07:52 - Add separator
08:10 - Add Vertical Spacing
08:27 - Add a text widget
09:02 - Change text widget color
09:57 - Add a text input widget
11:02 - Add a button
11:19 - Attach a callback function to the button
11:43 - Define callback function
12:45 - Discussing the logic behind the callback function
13:39 - Access window object from inside the callback function
14:04 - Collecting user input
16:11 - Importing functions from a different Python file
17:04 - Learn more about these functions in my Simple SMS Spam Filter video tutorial!
17:19 - Adding widgets inside callback function
17:42 - Pre-Process the input
18:16 - Predict if the input is spam or not
19:13 - Adding a dynamic text widget inside callback function
20:17 - Hide widget
20:47 - Replace hidden widget with a new one
21:04 - Test the application
22:34 - Thank for watching!
******************************************

DearPy GUI Documentation:
https://hoffstadt.github.io/DearPyGui/index.html



#python #pythonprogramming #gui #graphicuserinterface #app #application #dearpygui #dearpy #programming #atom","['python', 'python programming', 'gui', 'graphic user interface', 'user interface', 'application', 'create an app', 'create an application', 'python program', 'dear pygui', 'dear py gui', 'simple sms spam filter', 'spam filter', 'spam', 'ham', 'atom', 'anaconda', 'python tutorial', 'python project', 'programming', 'coding', 'code-along', 'ui']",2020-11-27T01:00:09Z,318725,8085,,600,PT22M39S,hd,false
100,itRLRfuL_PQ,Python Simplified,Create a GUI app with Tkinter - Step by Step Tutorial,"#gui #tkinter #python
In this tutorial, we'll build a PDF extracting program that fetches text from a user-selected file.
We'll create a graphic interface with Tkinter, manipulate PDF files with PyPDF2 and present the logo of our app with Pillow/PIL.

STARTER FILES:
https://github.com/MariyaSha/PDFextract_text/tree/main/starterFiles

PART 2 OF THIS PROJECT:
https://youtu.be/y8PR4lTAh5E

Tkinter Documentation:
https://docs.python.org/3/library/tkinter.html

**********************************
⭐⭐⭐ Timestamps! ⭐⭐⭐
**********************************
00:00 - Intro
01:23 - Import modules
02:02 - Save as a Python file
02:30 - Run Python file in the terminal
03:43 - Create a Window/Root object with Tkinter
04:48 - Create a Tkinter Canvas Widget
06:14 - Tkinter Image Widget
08:35 - Add Text with a Tkinter Label Widget
10:10 - Discuss ""Browse"" Button Functionality
10:25 - Change the Text of a Button Widget
12:34 - Tkinter Widget Rowspan
12:57 - Stylize Button Widget
13:38 - Add Vertical Margins in Tkinter
14:18 - Attach Command Function to Button Widget
16:00 - Open Browse File Dialog
16:52 - Limit File Dialogue to Browse only for PDF files
17:48 - Read PDF file with PyPDF2
18:11 - Select a PDF page
18:25 - Extract Text from PDF file
19:36 - Create a Tkinter Text Widget
20:01 - Padding with Tkinter Widgets
20:12 - Insert Text into a Text Widget
21:08 - Justify Widget Text to the Center
22:35 - Test the App
22:54 - Thanks for Watching!
**********************************

Check out my Github:
https://github.com/MariyaSha

Follow me on Facebook:
https://www.facebook.com/MariyaSha888/

Connect on Linkedin:
https://www.linkedin.com/in/mariyasha888/

Follow on Instagram:
https://www.instagram.com/mariyasha888/","['python', 'python programming', 'tkinter', 'gui', 'graphic user interface', 'application', 'app', 'gui app', 'gui application', 'PyPDF2', 'Pillow', 'PIL', 'PDF', 'extract text from PDF', 'create gui', 'build gui', 'create python gui', 'atom', 'anaconda', 'python file', 'command prompt', 'gui program', 'gui software', 'codealong', 'code-along', 'code along', 'python project', 'python project for beginners', 'build a gui', 'tk', 'browse dialog box', 'mainloop']",2020-10-30T17:30:29Z,523049,13196,,855,PT23M56S,hd,true
101,iJGvYBH9mcY,Python Simplified,Web Scraping Instagram with Selenium,"*** IMPORTANT NOTES ***

⭐Struggling with some of the commands?⭐
Watch my live webinar about Automating Instagram Comments:
https://youtu.be/XnEgVZsZgco

It's much more detailed, with slower phase and room for questions!

The ⭐new⭐ and improved article is now available on my blog:
https://www.mariyasha.com/post/web-scraping-instagram-thumbnails-with-selenium

Also, please refer to an ⭐ UPDATED VERSION ⭐ of the code on Github with wider functionality and error fixes:
https://github.com/MariyaSha/WebscrapingInstagram/blob/main/ImageExtracting_bot.ipynb

*** VIDEO DESCRIPTION ***

Struggling with scraping dynamic language websites? No need to worry! I got you covered
with this super simple web scraping with Selenium tutorial!
In this video, we'll create a database of cat photos, which we'll extract from Instagram by searching for ""#cat"".
We'll work closely with the Developer Tools, target specific elements and discuss the best selectors to use depending on the situation.
We'll also talk about the common errors when scraping React and the best way to tackle them.

Starter Notebook:
https://github.com/MariyaSha/WebscrapingInstagram/blob/main/WebscrapingInstagram_starterNotebook.ipynb

Complete Notebook:
https://github.com/MariyaSha/WebscrapingInstagram/blob/main/WebscrapingInstagram_completeNotebook.ipynb

UPDATED ENHANCED Notebook (most recent!):
https://github.com/MariyaSha/WebscrapingInstagram/blob/main/ImageExtracting_bot.ipynb

Tutorial on Medium:
https://medium.com/analytics-vidhya/web-scraping-instagram-with-selenium-b6b1f27b885

**********************************************
Timestamps:
**********************************************
00:00 - Introduction
01:08 - Download Chrome Driver
02:21 - Set up Chrome Driver
03:07 - Open web page with Selenium
03:41 - Log in to Instagram with Selenium
09:39 - Dismiss pop up messages
12:19 - Search for a keyword
15:49 - Scroll down along the page
16:48 - Select all the images
18:25 - Create a directory on your computer
20:10 - Save images inside the directory
22:42 - Thanks for watching!
**********************************************

Checkout my Github:
https://github.com/MariyaSha

Connect on Linkedin:
https://www.linkedin.com/in/mariyasha888/

Follow on Instagram:
https://www.instagram.com/mariyasha888/

#webscraping #selenium #instagram #bot #createbot #webscrape","['web scraping', 'selenium', 'dynamic language', 'react', 'instagram', 'webscraping', 'python', 'python programming', 'python web scraping', 'jupyter notebook', 'webpage life cycle', 'scrape a webpage', '#cat', 'Selenium log in', 'web driver', 'Chrome driver', 'download Chrome driver', 'Python simplified', 'python tutorial', 'web scraping tutorial', 'web scrape', 'bot', 'Selenium bot', 'automation', 'automate', 'python coding', 'python lesson', 'hashtag']",2020-10-10T01:00:10Z,168996,4036,,647,PT22M56S,hd,true
102,mzbJd0NhW2A,Python Simplified,Build a Neural Network with Pytorch - PART 1,"In this lesson, I will demonstrate how to build your own neural network with Pytorch and word embedding!
This network is designed to create a story based-off several books that I've trained it on, and therefore I named it StoryTeller.
In this video, you will learn how to manually batch data, create a neural network class, and define the structure of your model.
I'll explain my trail of thought and the considerations when building such a model, and I'll also introduce you to Pytorch, which is a very powerful tool for Machine Learning and AI.
This is just an introduction, as I didn't include validation or pre-processing of our dataset, which are also very important steps that I've skipped to save some time (YES, it takes more than 35 minutes to build a proper model!) 
I highly recommend downloading/copying the starter notebook from my Google Drive, and proceeding to Part 2 of this lesson once you're done structuring your model.
#pytorch #python #neuralnetwork #ai

⭐Train a Neural Network - StoryTeller PART 2 ⭐
https://youtu.be/GTyTG3XzPq8

********************************************************************************
LEARN ABOUT BASIC AI CONCEPTS - FOR MACHINE LEARNING BEGINNERS:
********************************************************************************

⭐My Perceptron Tutorial - a single node in a Neural Network ⭐
https://youtu.be/-KLnurhX-Pg

⭐My Error Function Tutorial - Binary Cross-Entropy Loss ⭐
https://youtu.be/EJRFP3WmS6Q

Starter Notebook and Files:
https://drive.google.com/drive/folders/1J9Am97Kyeviofr7wEDSpCiv3bSxZ60Tg?usp=sharing

Timestamps:
0:00 - Introduction
1:41 - Convert dataset from strings to integers
3:00 - Word to Index 
4:58 - Batch Data / Train Data Structure
7:47 - Neural Network Structure
8:44 - __init__ Function
11:32 - Forward Function
14:52 - Print Model Structure
15:47 - See you in part 2!

Connect on LinkedIn:
https://www.linkedin.com/in/mariyasha888/

Follow me on Facebook:
https://www.facebook.com/MariyaSha888/

Follow me on Instagram:
https://www.instagram.com/mariyasha888/

Check out my Github:
https://github.com/MariyaSha","['pytorch', 'python', 'ai', 'artificial intelligence', 'neural network', 'pytorch model', 'model', 'build a neural network', 'create a neural network', 'word embedding', 'n-gram', 'n-gram modelling', 'word to index', 'word mapping', 'python programming', 'machine learning', 'batch data', 'dataloader', 'coding', 'google colab', 'learn python', 'learn ai', 'code example', 'code-along']",2020-09-28T17:30:23Z,24497,570,,52,PT16M4S,hd,false
103,GTyTG3XzPq8,Python Simplified,Train a Neural Network with Pytorch - PART 2,"In this part of the lesson, we'll learn how to define the training function for our model, as well as connecting to a GPU engine FOR FREE!
I've also included lots of helpful code inside the starter notebook to account for checkpoint saving, checkpoint loading, loss plotting, and prediction, so please make sure you copy/download it from the link below!
Even though the model is not nearly as accurate as it can be, we will test it at the end of the video and check how logical our predicted story is.
Feel free to experiment with different weights, batch size, embedding dimensions, linear transformations, activation functions, losses, optimizers and etc. as I'll be doing this on my end as well.
Once I reach a great accuracy with my StorryTeller, we'll go over this model in much more detail and tackle all the functions we didn't have a chance to build together (including validation and pre-processing).
In the meanwhile, you can use this code to troubleshoot your own models or build new models based-off the same principles and hopefully, this will give you a good idea about some of the processes involved in AI.
#pytorch #python #neuralnetwork #ai #gpu #cuda

Starter Notebook and Files:
https://drive.google.com/drive/folders/1J9Am97Kyeviofr7wEDSpCiv3bSxZ60Tg?usp=sharing

Timestamps:
0:00 - Introduction
0:36 - Train Function
1:19 - Check if GPU is available / Cuda
3:21 - Iterating over epochs
4: 25 - Iterating over the features and target
4:40 - Convert data to tensors
5:43 - Set gradients to zero
5:53 - Step Forward
6:30 - Calculating Loss
6:55 - Backpropagation
7:04 - Update the parameters/weights  
7:13 - Update Running Loss
7:41 - Print epochs and running loss while training
10:21 - Fix indentation and typos
11:07 - Set up training parameters
11:35 - Set the loss / criterion
11:59 - Set the optimizer
12:45 - Set the epochs
13:05 - Set the device
13:33 - Call the training function
14:18 - Fixing Errors
14:57 - Training on CPU
15:36 - Save the checkpoint
15:59 - Connect to GPU
16:40 - Training on GPU
17:03 - Load Checkpoint
17:40 - Plot a graph of the loss
17:55 - Prediction
18:36 - Prediction Results
19:53 - Thanks for watching!

Connect on LinkedIn:
https://www.linkedin.com/in/mariyasha888/

Follow me on Facebook:
https://www.facebook.com/MariyaSha888/

Follow me on Instagram:
https://www.instagram.com/mariyasha888/

Check out my Github:
https://github.com/MariyaSha","['pytorch', 'python', 'neural network', 'ai', 'artificial intelligence', 'machine learning', 'train ai', 'train model', 'train neural network', 'train function', 'gpu', 'cpu', 'cuda', 'epochs', 'python programming', 'train with pytorch', 'predict', 'prediction', 'storyteller', 'story teller', 'n-gram', 'n-gram modelling', 'word embedding', 'word mapping', 'word to index', 'backpropogation', 'feedforward', 'python simplified', 'mariya sha']",2020-09-28T17:30:00Z,7370,283,,36,PT20M39S,hd,false
104,FZ5baopI_mo,Python Simplified,Install Python with Anaconda,"Hi everyone! I've recently upgraded to a new SSD drive and as a result - I need to install Python once again, as my computer was formatted in the process.
In this video, I will walk you through the installation step by step, and by the end of this video - not only that you'll have Python installed - but you will also process your first line of code with Jupyter Notebook.
#installpython #python #anaconda

Timestamps
0:00 - Intro
0:30  - Download Anaconda and Python
1:23 - Setup Python
1:53 - Setup Anaconda
3:00 - Open Anaconda Prompt
3:21 - Create an Anaconda environment
4:00 - Activate Anaconda environment
4:20 - Install Python with Conda
4:54 - Install Numpy with Conda
5:19 - Install Pandas with Conda
6:04 - Install Matplotlib with Conda-Forge
6:55 - Install Jupyter Notebook 
7:42 - Open Jupyter Notebook
7:58 - Create a new Jupyter Notebook document
8:14 - Print ""Hello World!"" in Jupyter Notebook
8:36 - Thanks for watching!

Connect on LinkedIn:
www.linkedin.com/in/mariyasha888/

Check out my Github:
www.github.com/MariyaSha

Follow on Facebook:
www.facebook.com/MariyaSha888/

Follow on Instagram:
www.instagram.com/mariyasha888/

Stock Images by:
www.freepik.com/","['install python', 'python', 'install anaconda', 'anaconda', 'install numpy', 'numpy', 'install pandas', 'pandas', 'install matplotlib', 'matplotlib', 'install Jupyter Notebook', 'install Jupyter', 'Jupyter Notebook', 'Anaconda Environment', 'Conda', 'conda-forge', 'download python', 'download anaconda', 'windows 10', 'install python on windows 10', 'install python with anaconda', 'python programming', 'programming']",2020-09-11T17:24:25Z,40104,926,,111,PT8M57S,hd,false
105,NSHsaG2a4WU,Python Simplified,Image Processing with Pillow - a Python Code-Along,"In this lesson, we'll focus on the Pillow Python library, also known as PIL.
I'll show you a few basic functions and useful tricks to manipulate each and every pixel on a given image. 
By the end of this video, you'll know how mathematical operations affect images and you'll be comfortable with exploring Pillow further on your own!
#imageprocessing #python #pillow #PIL #computervision

Project files & code: 
https://github.com/MariyaSha/ImageProcessingPILLOW

Timestamps:
00:00 - Intro
01:15 - Import PIL functions
01:35 - Load an image and display it
2:17 - Image attributes: size and mode
3:16 - Plotting 2 images inline (Matplotlib)
3:36 - Multiply / Merge Images ImageChops.multiply()
4:36 - Adding Images / Finding the common area with ImageChops.add()
5:13 - Change color mode to Greyscale and Binary
6:34 - Mapping pixels / Creating image coordinates
6:59 - Accessing individual pixel values
7:44 - Converting an RGB image into Binary with a nested ""for"" loop
9:06 - Converting a Greyscale image into Binary with a nested ""for"" loop
10:19 - Selecting image regions with row and column conditions
11:30 - Invert image with ImageChops.invert()
12:30 - Rotate image with PIL.rotate()
13:18 - Gaussian Blue and Edge Detection with ImageFilter
15:10 - Outro, thanks for watching! :)

Pillow documentation:
https://pillow.readthedocs.io","['Python', 'Pillow', 'PIL', 'Image Processing', 'Image', 'Processing', 'Process Images', 'manipulate images', 'computer vision', 'python images', 'pillow image', 'PIL image', 'image rotation', 'image merging', 'multiply images', 'invert image', 'save PIL image', 'python programming', 'code-along', 'code along', 'codealong', 'Pillow library', 'Pillow module', 'simple image processing', 'pixels', 'mapping pixels', 'image coordinates', 'edge detection', 'Gaussian blur']",2020-09-03T03:45:11Z,37305,967,,85,PT15M28S,hd,false
106,mAMTXJJQBDI,Python Simplified,Convert Image into Matrix - Like a Pro!,"Have you ever wondered how computers perceive raster images?
In this video, I will show you how to understand the math and structure behind digital pictures.
We'll learn all about pixels and the system of coordinates we use to select specific regions in an image.

We'll focus on 2 types of images:
1. Binary Image (Black & White)
2. Grayscale Image
3. Colorful RGB Image
And by the end of the video, you'll be able to convert all of these into matrices in no time!

00:00 intro
00:42 what is a pixel?
01:21 binary/black and white image conversion to a matrix
02:49 grayscale/monochromatic image conversion to a matrix
05:43 RGB image conversion to a matrix

#computervision, #image, #matrix, #pixel","['images', 'convert images', 'convert image into matrix', 'matrix', 'math', 'computer vision', 'image analysis', 'rgb', 'rgb image', 'greyscale', 'grayscale', 'binary', 'black and white image', 'binary image', 'photos', 'convert photo to matrix', 'photo into matrix', 'image into math', 'image to math', 'pixel', 'pixels', 'coordinates']",2020-08-23T18:15:12Z,50041,1262,,99,PT11M16S,hd,false
107,MJ1945J_W0c,Python Simplified,Plotting Google Trends Graphs with Matplotlib & Pandas,"In this lesson, we'll find out once and for all - which programming language is the most popular. Using Pytrends, we'll extract data from Google Trends and learn how to present it in the form of graphs and charts.
We'll plot line graphs and bar charts using Matplotlib and Pandas, and continue our journey towards Machine Learning.

Pytrends Documentation:
https://pypi.org/project/pytrends/

The full code on Github:
https://github.com/MariyaSha/PlottingGraphs

Add me on LinkedIn:
www.linkedin.com/in/mariyasha888/","['matplotlib', 'pandas', 'graph', 'graphs', 'chart', 'charts', 'pytrends', 'Google Trends', 'programming language', 'python', 'python programming', 'data science', 'data', 'plot', 'plotting', 'plt', 'jupyter notebook', 'learn python']",2020-06-26T19:14:34Z,16191,535,,77,PT13M24S,hd,false
108,drDdb1MBBfI,Python Simplified,Better Web Scraping with Mechanical Soup - Build a Database of Cat and Dog Photos in 10 minutes,"In this videos we'll discuss the benefits of using Mechanical Soup over Beautiful Soup for web scraping, and show a few handy examples in code.
The end result of this tutorial would be a local database of cat and dog photos, created from scratch in LESS THAN 10 MINUTES!
We'll completely automate the process of searching for images on Google, downloading them and saving them to a new local directory. We'll scrap the HTML code from a few web pages at a time and create a very efficient searching process for any desired term. 
Well need the help of mechanicalsoup, os and wget modules to achieve these results, and a basic level of Python knowledge is recommended for the viewer.

Mechanical Soup Documentation:
https://mechanicalsoup.readthedocs.io/en/stable/

Check out the code on Github:
https://github.com/MariyaSha/BetterWebScraping

Connect with me on LinkedIn:
www.linkedin.com/in/mariyasha888/","['machanical soup', 'mechanicalsoup', 'web scraping', 'webscraping', 'database', 'python', 'python programming', 'wget', 'os', 'jupyter notebook', 'jupyter']",2020-06-16T19:05:12Z,32965,1125,,135,PT12M26S,hd,false
109,ySNSY7iiBDY,Python Simplified,Web Scraping with Beautiful Soup - Make Databases from Scratch,"In this video we'll extract information from web pages and store it in a CSV file.
STEP 1. We'll scrape a webpage with Beautiful Soup.
STEP 2. We'll fine-tune the extracted information with Regex.
STEP 3. We'll store the information in a DataFrame.
STEP 4. We'll save the DataFrame to a CSV file.

Webpage URL:
https://docs.python.org/3/library/random.html

Jupyter Notebook Code:
https://github.com/MariyaSha/WebScraping

Read Blog Post in Medium:
https://medium.com/@mariyasha888/web-scraping-with-beautiful-soup-2c45a731df2e

Read more about Beautiful Soup in the Documentation:
https://www.crummy.com/software/BeautifulSoup/bs4/doc/","['beautiful soup', 'BeautifulSoup', 'bs', 're', 'regex', 'regular expressions', 'python', 'google colab', 'colab', 'web scraping', 'webpage scraping', 'url scraping', 'html scraping', 'python programming', 'coding', 'html to python', 'extract html', 'developer tools', 'jupyter notebook', 'csv', 'database', 'to csv', 'dataframe', 'pull data', 'pull html', 'pull code', 'web harvesting', 'web data extraction', 'data scraping', 'Screen Scraping', 'Data Extraction', 'python to spreadsheet', 'python to csv', 'to_csv', 'pandas', '.to_csv()', 'mount google drive']",2020-06-03T04:43:41Z,51869,1385,,110,PT10M40S,hd,false
110,VDg8fCW8LdM,Python Simplified,Simple SMS Spam Filter with Python - Step by Step Tutorial,"Do you know basic Python and looking for an easy project to practice your skills?
You're just a beginner and not ready to deal with neural networks yet?
This tutorial is perfect for you!

Here, we'll create a spam filter using natural language processing techniques, list comprehensions, ""for"" loops, ""if"" statements and a bit of Pandas & nltk.
I'll walk you through the processes and trails of thought step by step and give you some tips and examples of how to create projects from scratch.
In the end of the video, we'll test an SMS of your choice to see how well our filter works. I hope you guys will find this video helpful! Good luck! :)

* Correction to the code at 10:05 *
remove_punct = """".join([char for char in lowercase if char not in punctuation])
where ""lowercase"" should have been called instead of ""sms""

Dataset Link:
http://www.dt.fee.unicamp.br/~tiago/smsspamcollection

Google Colab Notebook - Complete Code:
https://github.com/MariyaSha/SimpleSmsSpamFilter/blob/master/SimpleSmsSpamFilter.ipynb

Jupyter Notebook - Complete Code:
https://github.com/MariyaSha/SimpleSmsSpamFilter/blob/master/SimpleSMSSpamFilter_JupyterNotebook.ipynb

Read on Medium:
https://medium.com/analytics-vidhya/how-to-build-a-simple-sms-spam-filter-with-python-ee777240fc","['python', 'sms', 'spam', 'filter', 'sms spam filter', 'spam filter', 'how to build a simple sms spam filter', 'pandas', 'nltk', 'string', 'natural language processing', 'list comprehension', 'lambda', 'tokenizing', 'google colab', 'google collaboratory', 'drive mount', 'tutorial', 'python programming', 'python project', 'project', 'python coding', 'coding', 'user input', 'input', 'preprocessing', 'pre-processing', 'processing', 'predict', 'predicting', 'predict function', 'predict spam', 'punctuation', 'stopwords', 'nltk stopwords', 'string punctuation']",2020-05-14T15:00:24Z,28946,710,,71,PT21M8S,hd,true
111,3YUfWCjCcko,Python Simplified,The Rules of Naming Variables in Python,"This is Part 2 of lesson 3, where we'll discuss the rules of defining variables names. In Part 1, we've only discussed the value side of things.
We'll go over the basic guidelines of valid variable names and see a few examples along the way.

In the next lesson, we'll dive in a bit deeper and focus on the methods we can use with each of the data types we've learned so far.

Please comment below if you have any questions, and I'll see you in Lesson #4 shortly.","['python', 'python variables', 'python variable', 'variable', 'variables', 'variable names', 'naming variables', 'naming rules', 'naming guidelines', 'rules', 'python rules', 'guidelines', 'python guidelines', 'python course', 'learn python', 'python school', 'python programming', 'programming', 'coding', 'python coding', 'jupyter notebook', 'windows 8.1', 'windows', 'python for windows', 'python academy', 'part 2', 'lesson 3.5', 'Mariya Sha', 'Mariya', 'beginners', 'python for beginners']",2020-04-15T20:42:53Z,7912,392,,14,PT3M18S,hd,false
112,xUhPxj8if0U,Python Simplified,Python Variables and Data Types,"In this lesson we'll talk about variables and all the different types of data we can store inside them.
Variables are very basic building blocks in Python, we use them to store data in all sorts of shapes and forms.

We'll discuss 4 of the most basic data types available in Python:
1. Integers
2. Floating Point Numbers
3. Strings
4. Boolean
And demonstrate a few cool operations we can do with each of these.

Make sure to check out the second part of this lesson for rules on naming variables (Lesson 3.5).","['python', 'python variables', 'data types', 'python data types', 'integers', 'integer', 'int', 'float', 'floating point', 'floating point numbers', 'floats', 'strings', 'string', 'boolean', 'booleans', 'learn python', 'python course', 'python lesson', 'programming', 'python programming', 'coding', 'python coding', 'python syntax', 'variable', 'python variable', 'variables', 'jupyter notebook', 'course', 'learn', 'lesson 3', 'lesson', 'study', 'study python', 'Mariya Sha', 'Mariya', 'windows 8.1', 'python for windows', 'windows', 'beginners', 'python for beginners']",2020-04-13T18:27:42Z,11006,412,,18,PT14M12S,hd,false
113,jp_3NOKHn9c,Python Simplified,Coding Interfaces for Python - Jupyter Notebook and Google Colab,"In this lesson, we'll learn all about Jupyter Notebook so we can use it as our coding interface throughout this course.
We'll quickly compare it to Google Colab, and see where one has an advantage over the other.
We'll also talk about Jupyter's Kernel & Colab's Runtime, as well as demonstrate what some of the buttons do.
By the end of this lesson, you'll be comfortable with using both of these interfaces and understand most of their features.
In the next lesson, we'll start learning the Python syntax and be able to put our software knowledge into use.","['Python', 'Python software', 'coding', 'coding software', 'coding interface', 'jupyter notebook', 'jupyter', 'google colab', 'colab', 'google collaboratory', 'python programming', 'gpu', 'artificial intelligence', 'machine learning', 'ai', 'course', 'learn python', 'python school', 'study python', 'python course', 'notebook', 'Python interface', 'windows 8.1', 'windows', 'python for windows', 'Mariya', 'Mariya Sha', 'python academy', 'programming', 'software', 'beginners', 'python for beginners']",2020-04-13T18:24:09Z,16064,483,,22,PT12M6S,hd,false
114,wmgyXK84TR0,Python Simplified,Install Python with Anaconda in 4 Easy Steps,"You've decided you want to become a Python developer and not sure where to begin?
In this lesson, I'll show you how to install Python step by step, including:
1. Downloading and Installing Anaconda
2. Creating a working environment in Anaconda
3. Downloading and Installing Python
4. Installing important Python packages such as Numpy, Pandas and Matplotlib
5. Installing and opening Jupyter Notebook so we can run our first lines of code!

Join me on this exciting new journey, where we'll learn everything you need to know about Python and Artificial Intelligence.","['python', 'coding', 'anaconda', 'working environment', 'learn python', 'python programming', 'python lesson', 'python course', 'install anaconda', 'install python', 'jupyter notebook', 'install numpy', 'numpy', 'install pandas', 'pandas', 'conda', 'environment commands', 'matplotlib', 'install matplotlib', 'command line', 'begginner', 'programming', 'artificial intelligence', 'ai', 'learn ai', 'python installation', 'learn', 'study', 'python school', 'course', 'lesson 1', 'windows', 'windows 8.1', 'windows 8', 'windows pc', 'pc', 'Mariya', 'Mariya Sha']",2020-04-13T04:27:36Z,9856,279,,25,PT7M46S,hd,false
